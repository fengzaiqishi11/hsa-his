<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.hsa.module.mris.mrisHome.dao.MrisHomeDAO">
    <!--分页查询已出院患者信息-->
    <select id="queryOutHospPatientPage" parameterType="cn.hsa.module.inpt.doctor.dto.InptVisitDTO"
            resultType="cn.hsa.module.inpt.doctor.dto.InptVisitDTO">
        SELECT a.*
        <if test="zgbrQuery == '2'.toString()">
            , t.is_consule, t.apply_deptid
        </if>
        FROM inpt_visit a
        <!--会诊病人，关联会诊申请表-->
        <if test="zgbrQuery == '2'.toString()">
            join (
            SELECT
            '1' as is_consule, ss.apply_deptid, ss.visit_id, ss.hosp_code
            FROM
            inpt_consultation_apply ss
            WHERE ss.hosp_code = #{hospCode}
            and ss.consul_state = '1'
            AND FIND_IN_SET(#{zgDoctorId}, ss.consul_userid_list)
            GROUP BY ss.visit_id, ss.hosp_code
            ) t on a.hosp_code = t.hosp_code and a.id = t.visit_id
        </if>
        <!--病案是否已写-->
        <if test="isLoadMris == '0'.toString() or isLoadMris == '1'.toString() or isInsureUpload =='1'.toString()  or isInsureUpload =='0'.toString()">
          left join mris_base_info mris on a.hosp_code = mris.hosp_code and a.id = mris.visit_id
        </if>
        <if test="regCode != null and regCode !=''  ">
            left join insure_individual_visit iiv on a.hosp_code = iiv.hosp_code and iiv.visit_id = a.id
        </if>
        WHERE a.hosp_code = #{hospCode}
        <if test="keyword != null and keyword !=''">
            and (
            a.name LIKE CONCAT('%',#{keyword},'%') or a.phone like CONCAT('%',#{keyword},'%')
            or a.cert_no LIKE CONCAT('%',#{keyword},'%') or a.in_no LIKE CONCAT('%',#{keyword},'%')
            or a.in_profile LIKE CONCAT('%',#{keyword},'%')
            )
        </if>
        <if test="zgbrQuery != '2'.toString()">
            <if test="inDeptId != null and inDeptId != ''">
                and a.in_dept_id = #{inDeptId}
            </if>
        </if>
        <if test="patientCode != null and patientCode !=''">
            and a.patient_code = #{patientCode}
        </if>
        <if test="statusCode != null and statusCode !=''">
            and a.status_code = #{statusCode}
        </if>
        <if test="startTime != null and startTime != ''">
            and a.out_time &gt;= STR_TO_DATE(#{startTime},'%Y-%m-%d %H:%i:%S')
        </if>
        <if test="endTime != null and endTime != '' ">
            and a.out_time &lt;= STR_TO_DATE(#{endTime},'%Y-%m-%d %H:%i:%S')
        </if>
        <!--liuliyun 20211022 病案首页添加主管医生过滤-->
        <if test='zgbrQuery =="1"'>
            and a.zg_doctor_id = #{zgDoctorId}
        </if>
        <!--已写病案-->
        <if test="isLoadMris == '1'.toString()">
            and mris.id is not null and mris.id !=''
        </if>
        <!--未写病案-->
        <if test="isLoadMris == '0'.toString()">
            and (mris.id is null or mris.id ='')
        </if>
        <if test="isInsureUpload == '1'.toString()">
            and mris.is_upload_insure ='1'
        </if>
        <if test="isInsureUpload == '0'.toString()">
            and mris.is_upload_insure ='0'
        </if>
        <if test="regCode != null and regCode !=''  ">
            and iiv.insure_reg_code =#{regCode}
        </if>
        <choose>
            <when test="statusCode != null and statusCode !='' and statusCode == '5'.toString()">
                order by a.out_time desc
            </when>
            <when test="statusCode != null and statusCode !='' and statusCode == '7'.toString()">
                order by a.out_time desc
            </when>
            <otherwise>
                order by a.in_time desc
            </otherwise>
        </choose>
    </select>

    <!--分页查询已出院患者信息(珠海)-->
    <select id="queryOutHospPatientPageZ" parameterType="cn.hsa.module.inpt.doctor.dto.InptVisitDTO"
            resultType="cn.hsa.module.inpt.doctor.dto.InptVisitDTO">
        SELECT v.*,CONCAT(v.in_profile,'-00',ifnull(b.total_in, '1')) as inNo
        FROM inpt_visit v
        left join  base_profile_file b on b.hosp_code=#{hospCode} and v.profile_id =b.id
        WHERE v.hosp_code = #{hospCode}
        <if test="keyword != null and keyword !=''">
            and CONCAT(v.in_profile,'-00',ifnull(b.total_in, '1'),v.name,v.phone,v.cert_no,v.in_no) LIKE CONCAT('%',#{keyword},'%')
        </if>
        <if test="inDeptId != null and inDeptId !=''">
            and v.in_dept_id = #{inDeptId}
        </if>
        <if test="patientCode != null and patientCode !=''">
            and v.patient_code = #{patientCode}
        </if>
        <if test="statusCode != null and statusCode !=''">
            and v.status_code = #{statusCode}
        </if>
        <if test="startTime != null and startTime != ''">
            and v.out_time &gt;= STR_TO_DATE(#{startTime},'%Y-%m-%d %H:%i:%S')
        </if>
        <if test="endTime != null and endTime != '' ">
            and v.out_time &lt;= STR_TO_DATE(#{endTime},'%Y-%m-%d %H:%i:%S')
        </if>
    </select>

    <!--查询病案患者基本信息-->
    <select id="getMrisBaseInfo" parameterType="cn.hsa.module.inpt.doctor.dto.InptVisitDTO"
            resultType="cn.hsa.module.mris.mrisHome.dto.MrisBaseInfoDTO">
            SELECT  mbi.id,  mbi.hosp_code,  mbi.visit_id, in_profile, in_blh,
                   in_no, name, gender_code, gender_name, age, ifnull(age_unit_code,'1') as age_unit_code,
                   age_unit_name, birthday, cert_code, cert_name, cert_no, nationality_cation,
                   nationality_name, nation_code, nation_name, native_place, occupation_code,
                   occupation_name, marry_code, marry_name, work, work_phone, work_post_code,
                   work_address, contact_name, contact_rela_code, contact_rela_name, contact_phone,
                   contact_post_code, contact_address, now_prov, now_prov_name, now_city, now_city_name,
                   now_area, now_area_name, now_post_code, native_prov, native_prov_name, native_city,
                   native_city_name, native_area, native_area_name, native_post_code, in_cnt, in_time,
                   in_dept_id, in_dept_name, in_bed_id, in_bed_name, out_time, out_dept_id, out_dept_name,
                   out_bed_id, out_bed_name, in_days, icd_version, disease_icd10, disease_icd10_name,
                   bl_icd10, bl_icd10_name, director_id1, director_name1, director_id2, director_name2,
                   zz_doctor_id, zz_doctor_name, zg_doctor_id, zg_doctor_name, zr_nurse_id, zr_nurse_name,
                   emr_quality_code, emr_quality_name, zk_doctor_id, zk_doctor_name, zk_nurse_id,
                   zk_nurse_name, zk_time, is_autopsy, is_autopsy_name, blood_code, blood_name,
                   rh_code, rh_name, baby_weight, is_allergy, allergy_list, out_mode_code,
                   out_mode_name, turn_org_name, in_situation_code, in_situation_name,
                   out_situation_code, out_situation_name, mbi.crte_id,  mbi.crte_name, mbi. crte_time,
                   hosp_name, pay_way_code, pay_way_name, health_card, baby_birth_weight,
                   baby_in_weight, native_adress, now_adress, baby_age_month, birth_adress,
                   id_card, phone, work_info, in_way, in_ward, damage_reason, jx_doctor_id,
                   sx_doctor_id, jx_doctor_name, sx_doctor_name, doctor_coder_id, doctor_coder_name,
                   in_ward2, in_dept_code, disease_icd10_other, turn_dept_ids, case_classification,
                   is_monitor, monitor_day, monitor_hour, is_dzb, lclj_status, drg_status, is_kss, is_xjsj,
                   is_cry, zl_level, apgar_num, aim, is_inpt, inpt_before_day, inpt_before_hour,
                   inpt_before_minute, inpt_last_day, inpt_last_hour, inpt_last_minute, yljg_code,iiv.medical_reg_no,
                   iiv.medicine_org_code,
                   turn_time1,turn_time2,turn_time3,turn_dept1,turn_dept2,turn_dept3,outpt_doctor_id,
                   outpt_doctor_name,case_classify,clinical_path_case,rescue_count,rescue_success_count,
                   (select prac_certi_no from sys_user su where su.hosp_code = mbi.hosp_code and su.id = mbi.director_id1) as  deptdrtCode,
                   (select prac_certi_no from sys_user su where su.hosp_code = mbi.hosp_code and su.id = mbi.zz_doctor_id) as  atddrCode,
                  (select prac_certi_no from sys_user su where su.hosp_code = mbi.hosp_code and su.id = mbi.zr_nurse_id) as  respNursCode,
     (select prac_certi_no from sys_user su where su.hosp_code = mbi.hosp_code and su.id = mbi.zg_doctor_id) as  iptDrCode
            FROM mris_base_info mbi left join insure_individual_visit iiv
                on mbi.visit_id = iiv.visit_id and mbi.hosp_code = iiv.hosp_code
            WHERE  mbi.hosp_code = #{hospCode}
            AND  mbi.visit_id = #{id}
            order by iiv.crte_time desc limit 1
    </select>

    <!-- 插入数据 病案患者基本信息-->
    <insert id="insertMrisBaseInfo" parameterType="cn.hsa.module.mris.mrisHome.dto.MrisBaseInfoDTO">
        INSERT INTO mris_base_info (
            id, hosp_code, visit_id, in_profile, in_blh, in_no, name, gender_code,
            gender_name, age, age_unit_code, age_unit_name, birthday, cert_code, cert_name, cert_no,
            nationality_cation, nationality_name, nation_code, nation_name, native_place, occupation_code, occupation_name, marry_code,
            marry_name, work, work_phone, work_post_code, work_address, contact_name, contact_rela_code, contact_rela_name,
            contact_phone, contact_post_code, contact_address, now_prov, now_prov_name, now_city, now_city_name, now_area,
            now_area_name, now_post_code, native_prov, native_prov_name, native_city, native_city_name, native_area, native_area_name,
            native_post_code, in_cnt, in_time, in_dept_id, in_dept_name, in_bed_id, in_bed_name, out_time,
            out_dept_id, out_dept_name, out_bed_id, out_bed_name, in_days, icd_version, disease_icd10, disease_icd10_name,
            bl_icd10, bl_icd10_name, director_id1, director_name1, director_id2, director_name2, zz_doctor_id, zz_doctor_name,
            zg_doctor_id, zg_doctor_name, zr_nurse_id, zr_nurse_name, emr_quality_code, emr_quality_name, zk_doctor_id, zk_doctor_name,
            zk_nurse_id, zk_nurse_name, zk_time, is_autopsy, is_autopsy_name, blood_code, blood_name, rh_code,
            rh_name, baby_weight, is_allergy, allergy_list, out_mode_code, out_mode_name, turn_org_name, in_situation_code,
            in_situation_name, out_situation_code, out_situation_name, crte_id, crte_name, crte_time, hosp_name, pay_way_code,
            pay_way_name, health_card, baby_birth_weight, baby_in_weight, native_adress, now_adress, baby_age_month, birth_adress,
            id_card, phone, work_info, in_way, in_ward, damage_reason, jx_doctor_id, sx_doctor_id,
            jx_doctor_name, sx_doctor_name, doctor_coder_id, doctor_coder_name, in_ward2, disease_icd10_other, turn_dept_ids,
            case_classification, is_monitor, monitor_day, monitor_hour, is_dzb, lclj_status, drg_status, is_kss,
            is_xjsj, is_cry, zl_level, apgar_num,is_inpt,aim,inpt_before_day,inpt_before_hour,inpt_before_minute,inpt_last_day,inpt_last_hour,inpt_last_minute,yljg_code,
            turn_time1,turn_time2,turn_time3,turn_dept1,turn_dept2,turn_dept3,outpt_doctor_id,
            outpt_doctor_name,case_classify,clinical_path_case,rescue_count,rescue_success_count
        ) VALUES (
            #{id},
            #{hospCode},
            #{visitId},
            #{inProfile},
            #{inBlh},
            #{inNo},
            #{name},
            #{genderCode},
            #{genderName},
            #{age},
            #{ageUnitCode},
            #{ageUnitName},
            #{birthday},
            #{certCode},
            #{certName},
            #{certNo},
            #{nationalityCation},
            #{nationalityName},
            #{nationCode},
            #{nationName},
            #{nativePlace},
            #{occupationCode},
            #{occupationName},
            #{marryCode},
            #{marryName},
            #{work},
            #{workPhone},
            #{workPostCode},
            #{workAddress},
            #{contactName},
            #{contactRelaCode},
            #{contactRelaName},
            #{contactPhone},
            #{contactPostCode},
            #{contactAddress},
            #{nowProv},
            #{nowProvName},
            #{nowCity},
            #{nowCityName},
            #{nowArea},
            #{nowAreaName},
            #{nowPostCode},
            #{nativeProv},
            #{nativeProvName},
            #{nativeCity},
            #{nativeCityName},
            #{nativeArea},
            #{nativeAreaName},
            #{nativePostCode},
            #{inCnt},
            #{inTime},
            #{inDeptId},
            #{inDeptName},
            #{inBedId},
            #{inBedName},
            #{outTime},
            #{outDeptId},
            #{outDeptName},
            #{outBedId},
            #{outBedName},
            #{inDays},
            #{icdVersion},
            #{diseaseIcd10},
            #{diseaseIcd10Name},
            #{blIcd10},
            #{blIcd10Name},
            #{directorId1},
            #{directorName1},
            #{directorId2},
            #{directorName2},
            #{zzDoctorId},
            #{zzDoctorName},
            #{zgDoctorId},
            #{zgDoctorName},
            #{zrNurseId},
            #{zrNurseName},
            #{emrQualityCode},
            #{emrQualityName},
            #{zkDoctorId},
            #{zkDoctorName},
            #{zkNurseId},
            #{zkNurseName},
            #{zkTime},
            #{isAutopsy},
            #{isAutopsyName},
            #{bloodCode},
            #{bloodName},
            #{rhCode},
            #{rhName},
            #{babyWeight},
            #{isAllergy},
            #{allergyList},
            #{outModeCode},
            #{outModeName},
            #{turnOrgName},
            #{inSituationCode},
            #{inSituationName},
            #{outSituationCode},
            #{outSituationName},
            #{crteId},
            #{crteName},
            #{crteTime},
            #{hospName},
            #{payWayCode},
            #{payWayName},
            #{healthCard},
            #{babyBirthWeight},
            #{babyInWeight},
            #{nativeAdress},
            #{nowAdress},
            #{babyAgeMonth},
            #{birthAdress},
            #{idCard},
            #{phone},
            #{workInfo},
            #{inWay},
            #{inWard},
            #{damageReason},
            #{jxDoctorId},
            #{sxDoctorId},
            #{jxDoctorName},
            #{sxDoctorName},
            #{doctorCoderId},
            #{doctorCoderName},
            #{inWard2},
            #{diseaseIcd10Other},
            #{turnDeptIds},
            #{caseClassification},
            #{isMonitor},
            #{monitorDay},
            #{monitorHour},
            #{isDzb},
            #{lcljStatus},
            #{drgStatus},
            #{isKss},
            #{isXjsj},
            #{isCry},
            #{zlLevel},
            #{apgarNum},
            #{isInpt},
            #{aim},
            #{inptBeforeDay},
            #{inptBeforehour},
            #{inptBeforeMinute},
            #{inptLastDay},
            #{inptLastHour},
            #{inptLastMinute},
            #{yljgCode},
            #{turnTime1},
            #{turnTime2},
            #{turnTime3},
            #{turnDept1},
            #{turnDept2},
            #{turnDept3},
            #{outptDoctorId},
            #{outptDoctorName},
            #{caseClassify},
            #{clinicalPathCase},
            #{rescueCount},
            #{rescueSuccessCount}
        )
    </insert>

    <!-- 修改数据 病案患者基本信息 -->
    <update id="updateMrisBaseInfo" parameterType="cn.hsa.module.mris.mrisHome.entity.MrisBaseInfoDO">
        UPDATE mris_base_info
        <set>
            <if test="visitId != null">
                visit_id = #{visitId},
            </if>
            <if test="yljgCode != null">
                yljg_code = #{yljgCode},
            </if>
            <if test="aim != null">
                aim = #{aim},
            </if>
            <if test="inProfile != null">
                in_profile = #{inProfile},
            </if>
            <if test="inBlh != null">
                in_blh = #{inBlh},
            </if>
            <if test="inNo != null">
                in_no = #{inNo},
            </if>
            <if test="name != null">
                name = #{name},
            </if>
            <if test="inptBeforeDay != null">
                inpt_before_day = #{inptBeforeDay},
            </if>
            <if test="inptBeforehour != null">
                inpt_before_hour = #{inptBeforehour},
            </if>
            <if test="inptBeforeMinute != null">
                inpt_before_minute = #{inptBeforeMinute},
            </if>
            <if test="inptLastDay != null">
                inpt_last_day = #{inptLastDay},
            </if>
            <if test="inptLastHour != null">
                inpt_last_hour = #{inptLastHour},
            </if>
            <if test="inptLastMinute != null">
                inpt_last_minute = #{inptLastMinute},
            </if>
            <if test="genderCode != null">
                gender_code = #{genderCode},
            </if>
            <if test="genderName != null">
                gender_name = #{genderName},
            </if>
            <if test="age != null">
                age = #{age},
            </if>
            <if test="ageUnitCode != null">
                age_unit_code = #{ageUnitCode},
            </if>
            <if test="ageUnitName != null">
                age_unit_name = #{ageUnitName},
            </if>
            <if test="birthday != null">
                birthday = #{birthday},
            </if>
            <if test="certCode != null">
                cert_code = #{certCode},
            </if>
            <if test="certName != null">
                cert_name = #{certName},
            </if>
            <if test="certNo != null">
                cert_no = #{certNo},
            </if>
            <if test="nationalityCation != null">
                nationality_cation = #{nationalityCation},
            </if>
            <if test="nationalityName != null">
                nationality_name = #{nationalityName},
            </if>
            <if test="nationCode != null">
                nation_code = #{nationCode},
            </if>
            <if test="nationName != null">
                nation_name = #{nationName},
            </if>
            <if test="nativePlace != null">
                native_place = #{nativePlace},
            </if>
            <if test="occupationCode != null">
                occupation_code = #{occupationCode},
            </if>
            <if test="occupationName != null">
                occupation_name = #{occupationName},
            </if>
            <if test="marryCode != null">
                marry_code = #{marryCode},
            </if>
            <if test="marryName != null">
                marry_name = #{marryName},
            </if>
            <if test="work != null">
                work = #{work},
            </if>
            <if test="workPhone != null">
                work_phone = #{workPhone},
            </if>
            <if test="workPostCode != null">
                work_post_code = #{workPostCode},
            </if>
            <if test="workAddress != null">
                work_address = #{workAddress},
            </if>
            <if test="contactName != null">
                contact_name = #{contactName},
            </if>
            <if test="contactRelaCode != null">
                contact_rela_code = #{contactRelaCode},
            </if>
            <if test="contactRelaName != null">
                contact_rela_name = #{contactRelaName},
            </if>
            <if test="contactPhone != null">
                contact_phone = #{contactPhone},
            </if>
            <if test="contactPostCode != null">
                contact_post_code = #{contactPostCode},
            </if>
            <if test="contactAddress != null">
                contact_address = #{contactAddress},
            </if>
            <if test="nowProv != null">
                now_prov = #{nowProv},
            </if>
            <if test="nowProvName != null">
                now_prov_name = #{nowProvName},
            </if>
            <if test="nowCity != null">
                now_city = #{nowCity},
            </if>
            <if test="nowCityName != null">
                now_city_name = #{nowCityName},
            </if>
            <if test="nowArea != null">
                now_area = #{nowArea},
            </if>
            <if test="nowAreaName != null">
                now_area_name = #{nowAreaName},
            </if>
            <if test="nowPostCode != null">
                now_post_code = #{nowPostCode},
            </if>
            <if test="nativeProv != null">
                native_prov = #{nativeProv},
            </if>
            <if test="nativeProvName != null">
                native_prov_name = #{nativeProvName},
            </if>
            <if test="nativeCity != null">
                native_city = #{nativeCity},
            </if>
            <if test="nativeCityName != null">
                native_city_name = #{nativeCityName},
            </if>
            <if test="nativeArea != null">
                native_area = #{nativeArea},
            </if>
            <if test="nativeAreaName != null">
                native_area_name = #{nativeAreaName},
            </if>
            <if test="nativePostCode != null">
                native_post_code = #{nativePostCode},
            </if>
            <if test="inCnt != null">
                in_cnt = #{inCnt},
            </if>
            <if test="inTime != null">
                in_time = #{inTime},
            </if>
            <if test="inDeptId != null">
                in_dept_id = #{inDeptId},
            </if>
            <if test="inDeptName != null">
                in_dept_name = #{inDeptName},
            </if>
            <if test="inBedId != null">
                in_bed_id = #{inBedId},
            </if>
            <if test="inBedName != null">
                in_bed_name = #{inBedName},
            </if>
            <if test="outTime != null">
                out_time = #{outTime},
            </if>
            <if test="outDeptId != null">
                out_dept_id = #{outDeptId},
            </if>
            <if test="outDeptName != null">
                out_dept_name = #{outDeptName},
            </if>
            <if test="outBedId != null">
                out_bed_id = #{outBedId},
            </if>
            <if test="outBedName != null">
                out_bed_name = #{outBedName},
            </if>
            <if test="inDays != null">
                in_days = #{inDays},
            </if>
            <if test="icdVersion != null">
                icd_version = #{icdVersion},
            </if>
            <if test="diseaseIcd10 != null">
                disease_icd10 = #{diseaseIcd10},
            </if>
            <if test="diseaseIcd10Name != null">
                disease_icd10_name = #{diseaseIcd10Name},
            </if>
            <if test="blIcd10 != null">
                bl_icd10 = #{blIcd10},
            </if>
            <if test="blIcd10Name != null">
                bl_icd10_name = #{blIcd10Name},
            </if>
            <if test="directorId1 != null">
                director_id1 = #{directorId1},
            </if>
            <if test="directorName1 != null">
                director_name1 = #{directorName1},
            </if>
            <if test="directorId2 != null">
                director_id2 = #{directorId2},
            </if>
            <if test="directorName2 != null">
                director_name2 = #{directorName2},
            </if>
            <if test="zzDoctorId != null">
                zz_doctor_id = #{zzDoctorId},
            </if>
            <if test="zzDoctorName != null">
                zz_doctor_name = #{zzDoctorName},
            </if>
            <if test="zgDoctorId != null">
                zg_doctor_id = #{zgDoctorId},
            </if>
            <if test="zgDoctorName != null">
                zg_doctor_name = #{zgDoctorName},
            </if>
            <if test="zrNurseId != null">
                zr_nurse_id = #{zrNurseId},
            </if>
            <if test="zrNurseName != null">
                zr_nurse_name = #{zrNurseName},
            </if>
            <if test="emrQualityCode != null">
                emr_quality_code = #{emrQualityCode},
            </if>
            <if test="emrQualityName != null">
                emr_quality_name = #{emrQualityName},
            </if>
            <if test="zkDoctorId != null">
                zk_doctor_id = #{zkDoctorId},
            </if>
            <if test="zkDoctorName != null">
                zk_doctor_name = #{zkDoctorName},
            </if>
            <if test="zkNurseId != null">
                zk_nurse_id = #{zkNurseId},
            </if>
            <if test="zkNurseName != null">
                zk_nurse_name = #{zkNurseName},
            </if>
            <if test="zkTime != null">
                zk_time = #{zkTime},
            </if>
            <if test="isAutopsy != null">
                is_autopsy = #{isAutopsy},
            </if>
            <if test="isAutopsyName != null">
                is_autopsy_name = #{isAutopsyName},
            </if>
            <if test="bloodCode != null">
                blood_code = #{bloodCode},
            </if>
            <if test="bloodName != null">
                blood_name = #{bloodName},
            </if>
            <if test="rhCode != null">
                rh_code = #{rhCode},
            </if>
            <if test="rhName != null">
                rh_name = #{rhName},
            </if>
            <if test="babyWeight != null">
                baby_weight = #{babyWeight},
            </if>
            <if test="isAllergy != null">
                is_allergy = #{isAllergy},
            </if>
            <if test="allergyList != null">
                allergy_list = #{allergyList},
            </if>
            <if test="outModeCode != null">
                out_mode_code = #{outModeCode},
            </if>
            <if test="outModeName != null">
                out_mode_name = #{outModeName},
            </if>
            <if test="turnOrgName != null">
                turn_org_name = #{turnOrgName},
            </if>
            <if test="inSituationCode != null">
                in_situation_code = #{inSituationCode},
            </if>
            <if test="inSituationName != null">
                in_situation_name = #{inSituationName},
            </if>
            <if test="outSituationCode != null">
                out_situation_code = #{outSituationCode},
            </if>
            <if test="outSituationName != null">
                out_situation_name = #{outSituationName},
            </if>
            <if test="crteId != null">
                crte_id = #{crteId},
            </if>
            <if test="crteName != null">
                crte_name = #{crteName},
            </if>
            <if test="crteTime != null">
                crte_time = #{crteTime},
            </if>
            <if test="hospName != null">
                hosp_name = #{hospName},
            </if>
            <if test="payWayCode != null">
                pay_way_code = #{payWayCode},
            </if>
            <if test="payWayName != null">
                pay_way_name = #{payWayName},
            </if>
            <if test="healthCard != null">
                health_card = #{healthCard},
            </if>
            <if test="babyBirthWeight != null">
                baby_birth_weight = #{babyBirthWeight},
            </if>
            <if test="babyInWeight != null">
                baby_in_weight = #{babyInWeight},
            </if>
            <if test="nativeAdress != null">
                native_adress = #{nativeAdress},
            </if>
            <if test="nowAdress != null">
                now_adress = #{nowAdress},
            </if>
            <if test="babyAgeMonth != null">
                baby_age_month = #{babyAgeMonth},
            </if>
            <if test="birthAdress != null">
                birth_adress = #{birthAdress},
            </if>
            <if test="idCard != null">
                id_card = #{idCard},
            </if>
            <if test="phone != null">
                phone = #{phone},
            </if>
            <if test="workInfo != null">
                work_info = #{workInfo},
            </if>
            <if test="inWay != null">
                in_way = #{inWay},
            </if>
            <if test="inWard != null">
                in_ward = #{inWard},
            </if>
            <if test="damageReason != null">
                damage_reason = #{damageReason},
            </if>
            <if test="jxDoctorId != null">
                jx_doctor_id = #{jxDoctorId},
            </if>
            <if test="sxDoctorId != null">
                sx_doctor_id = #{sxDoctorId},
            </if>
            <if test="jxDoctorName != null">
                jx_doctor_name = #{jxDoctorName},
            </if>
            <if test="sxDoctorName != null">
                sx_doctor_name = #{sxDoctorName},
            </if>
            <if test="doctorCoderId != null">
                doctor_coder_id = #{doctorCoderId},
            </if>
            <if test="doctorCoderName != null">
                doctor_coder_name = #{doctorCoderName},
            </if>
            <if test="inWard2 != null">
                in_ward2 = #{inWard2},
            </if>
            <if test="diseaseIcd10Other != null">
                disease_icd10_other = #{diseaseIcd10Other},
            </if>
            <if test="turnDeptIds != null">
                turn_dept_ids = #{turnDeptIds},
            </if>
            <if test="caseClassification != null">
                case_classification = #{caseClassification},
            </if>
            <if test="isMonitor != null">
                is_monitor = #{isMonitor},
            </if>
            <if test="monitorDay != null">
                monitor_day = #{monitorDay},
            </if>
            <if test="monitorHour != null">
                monitor_hour = #{monitorHour},
            </if>
            <if test="isInpt != null">
                is_inpt = #{isInpt},
            </if>
            <if test="isDzb != null">
                is_dzb = #{isDzb},
            </if>
            <if test="lcljStatus != null">
                lclj_status = #{lcljStatus},
            </if>
            <if test="drgStatus != null">
                drg_status = #{drgStatus},
            </if>
            <if test="isKss != null">
                is_kss = #{isKss},
            </if>
            <if test="isXjsj != null">
                is_xjsj = #{isXjsj},
            </if>
            <if test="isCry != null">
                is_cry = #{isCry},
            </if>
            <if test="zlLevel != null">
                zl_level = #{zlLevel},
            </if>
            <if test="apgarNum != null">
                apgar_num = #{apgarNum},
            </if>
            <if test="turnTime1 != null">
                turn_time1 = #{turnTime1},
            </if>
            <if test="turnTime2 != null">
                turn_time2 = #{turnTime2},
            </if>
            <if test="turnTime3 != null">
                turn_time2 = #{turnTime3},
            </if>
            <if test="turnDept1 != null">
                turn_dept1 = #{turnDept1},
            </if>
            <if test="turnDept2 != null">
                turn_dept2 = #{turnDept2},
            </if>
            <if test="turnDept3 != null">
                turn_dept3 = #{turnDept3},
            </if>
            <if test="outptDoctorId != null">
            outpt_doctor_id = #{outptDoctorId},
            </if>
            <if test="outptDoctorName != null">
                outpt_doctor_name = #{outptDoctorName},
            </if>
            <if test="caseClassify != null">
                case_classify = #{caseClassify},
            </if>
            <if test="clinicalPathCase != null">
                clinical_path_case = #{clinicalPathCase},
            </if>
            <if test="rescueCount != null">
                rescue_count = #{rescueCount},
            </if>
            <if test="rescueSuccessCount != null">
                rescue_success_count = #{rescueSuccessCount}
            </if>
        </set>
        WHERE id = #{id} AND hosp_code = #{hospCode}
    </update>

    <!-- 删除数据 病案患者基本信息-->
    <delete id="deleteMrisBaseInfoByVisitId" parameterType="java.util.Map">
        DELETE FROM mris_base_info WHERE hosp_code = #{hospCode} AND visit_id = #{visitId}
    </delete>

    <!-- 删除数据 病案控制信息 -->
    <delete id="deleteMrisControlByVisitId" parameterType="java.util.Map">
        DELETE FROM mris_control WHERE  hosp_code= #{hospCode} AND visit_id = #{visitId}
    </delete>

    <!-- 删除数据 病案费用信息 -->
    <delete id="deleteMrisCostByVisitId" parameterType="java.util.Map">
        DELETE FROM mris_cost WHERE  hosp_code= #{hospCode} AND visit_id = #{visitId}
    </delete>

    <!-- 删除数据 病案诊断信息 -->
    <delete id="deleteMrisDiagnoseByVisitId" parameterType="java.util.Map">
        DELETE FROM mris_diagnose WHERE  hosp_code= #{hospCode} AND visit_id = #{visitId}
    </delete>

    <!-- 删除数据 病案手术信息 -->
    <delete id="deleteMrisOperInfoByVisitId" parameterType="java.util.Map">
        DELETE FROM mris_oper_info WHERE  hosp_code= #{hospCode} AND visit_id = #{visitId}
    </delete>

    <!-- 删除数据 病案中医药信息 -->
    <delete id="deleteMrisTcmInfoByVisitId" parameterType="java.util.Map">
        DELETE FROM mris_tcm_info WHERE  hosp_code= #{hospCode} AND visit_id = #{visitId}
    </delete>

    <!-- 删除数据 病案肿瘤化疗信息 -->
    <delete id="deleteMrisTumourChemoByVisitId" parameterType="java.util.Map">
        DELETE FROM mris_tumour_chemo WHERE  hosp_code= #{hospCode} AND visit_id = #{visitId}
    </delete>

    <!-- 删除数据 病案肿瘤信息 -->
    <delete id="deleteMrisTumourInfoByVisitId" parameterType="java.util.Map">
        DELETE FROM mris_tumour_info WHERE  hosp_code= #{hospCode} AND visit_id = #{visitId}
    </delete>

    <!-- 删除数据 病案转科信息 -->
    <delete id="deleteMrisTurnDeptByVisitId" parameterType="java.util.Map">
        DELETE FROM mris_turn_dept WHERE  hosp_code= #{hospCode} AND visit_id = #{visitId}
    </delete>

    <!--HIS数据抽取 获取患者基本信息-->
    <select id="getMrisBaseInfoByVisitId" parameterType="java.util.Map" resultType="cn.hsa.module.mris.mrisHome.dto.MrisBaseInfoDTO">
        SELECT
           DISTINCT
           a.hosp_code as hospCode,
           a.contact_phone as contactPhone,
           a.id as visitId,
           a.in_profile as inProfile,
           -- blh 病理号,
           a.in_no as inNo,
           a.name as name,
           a.gender_code as genderCode,
           code_1.name as genderName,
           a.age as age,
           a.age_unit_code as ageUnitCode,
           code_2.name as ageUnitName,
           a.birthday as birthday,
           a.cert_code as certCode,
           code_3.name as certName,
           a.cert_no as certNo,
           a.nation_code as nationCode,
           code_4.name as nationName,
           a.marry_code as marryCode,
           code_5.name as marryName,
           a.in_time as inTime,
           a.in_dept_id as inDeptId,
           a.in_dept_name as inDeptName,
           -- 入院床位
            ifnull((select before_bed_id from inpt_bed_change a left join inpt_visit b on a.visit_id = b.id
            where a.visit_id = #{visitId}
            order BY a.crte_time ASC limit 1),a.bed_id) as inBedId,
            ifnull((select before_bed_name from inpt_bed_change a left join inpt_visit b on a.visit_id = b.id
            where a.visit_id = #{visitId}
            order BY a.crte_time ASC limit 1),a.bed_name) as inBedName,

            -- 出院床位
            ifnull((select before_bed_id from inpt_bed_change a left join inpt_visit b on a.visit_id = b.id
            where a.visit_id = #{visitId} and change_code ='5'
            order BY a.crte_time DESC limit 1),a.bed_id) as outBedId,
            ifnull((select before_bed_name from inpt_bed_change a left join inpt_visit b on a.visit_id = b.id
            where a.visit_id = #{visitId} and change_code ='5'
            order BY a.crte_time DESC limit 1),a.bed_name) as outBedName,
            a.out_time as outTime,
            a.out_dept_id as outDeptId,
            a.out_dept_name as outDeptName,
            timestampdiff(day,a.in_time,a.out_time) as inDays,
            -- icd_version 疾病版本（疾病分类名称）
            ifnull((select code from base_disease where id = a.outpt_disease_id and hosp_code = #{hospCode} limit 1),'') as diseaseIcd10,
            a.out_disease_name as  diseaseName,
            -- bl_icd10 病理诊断
            -- turn_org_name 转院机构
            -- bl_icd10_name
            a.zz_doctor_id as zzDoctorId,
            a.zz_doctor_name as zzDoctorName,
            a.jz_doctor_id as zgDoctorId,
            a.jz_doctor_name as zgDoctorName,
            a.resp_nurse_id as zrNurseId,
            a.resp_nurse_name as zrNurseName,
            a.in_situation_code as inSituationCode,
            code_6.name as inSituationName,
            a.out_situation_code as outSituationCode,
            code_7.name as outSituationName,
            a.out_mode_code as outModeCode,
            code_8.name as outModeName,
            baby.weight as babyWeight,
            a.address as nowAdress,
            a.phone as phone,
            a.outpt_disease_name as diseaseIcd10Name,
            case when a.in_mode_code='0' then '9' else a.in_mode_code end as inWay,
            bf.native_place as nativePlace,
            bf.native_address as nativeAdress,
            code_9.remark as payWayCode,
            a.outpt_doctor_id as outptDoctorId,
            a.outpt_doctor_name as outptDoctorName,
            a.contact_name as contactName,
            a.contact_rela_code as contactRelaCode,
            a.contact_address as contactAddress,
            a.contact_phone as contactPhone,
            a.total_in_count as inCnt
        FROM inpt_visit a
             left join inpt_bed_change bed on a.id = bed.visit_id
             left join inpt_baby baby on a.id = baby.visit_id
             left join base_profile_file bf on a.profile_id = bf.id
             left join sys_code_detail code_1 on (a.gender_code = code_1.value and code_1.c_code = 'XB')
             left join sys_code_detail code_2 on (a.age_unit_code = code_2.value and code_2.c_code = 'NLDW')
             left join sys_code_detail code_3 on (a.cert_code = code_3.value and code_3.c_code = 'ZJLX')
             left join sys_code_detail code_4 on (a.nation_code = code_4.value and code_4.c_code = 'MZ')
             left join sys_code_detail code_5 on (a.marry_code = code_5.value and code_5.c_code = 'HYZK')
             left join sys_code_detail code_6 on (a.in_situation_code = code_6.value and code_6.c_code ='RYQK')
             left join sys_code_detail code_7 on (a.out_situation_code = code_7.value and code_7.c_code = 'CYBQ')
             left join sys_code_detail code_8 on (a.out_mode_code = code_8.value and code_8.c_code = 'CYFS')
             left join sys_code_detail code_9 on (a.patient_code = code_9.value and code_9.c_code = 'BRLX')
        WHERE a.hosp_code = #{hospCode}
        AND a.id = #{visitId}
        limit 1
    </select>

    <!--HIS数据抽取 中心平台个人档案编码统一转义-->
    <select id="getSysCodeValueByCode" parameterType="cn.hsa.module.center.profilefile.dto.CenterProfileFileDTO"
            resultType="cn.hsa.module.mris.mrisHome.dto.MrisBaseInfoDTO">
        select
            code_1.name as nationalityName,
            code_2.name as occupationName,
            code_3.name as contactRelaName
        from
            (select name from sys_code_detail where c_code = 'GJ' and value = #{nationalityCation} ) code_1,
            (select name from sys_code_detail where c_code = 'ZY' and value = #{occupationCode} ) code_2
            (select name from sys_code_detail where c_code = 'RYGX' and value = #{contactRelaCode} ) code_3

           -- b.now_prov as nowProv,
           -- b.now_prov_name as nowProvName,居住地省名称
           -- b.now_city as nowCity,
           -- now_city_name 居住地市名称
           -- b.now_area as nowArea,
           -- now_area_name 居住地区名称

           -- b.native_prov as nativeProv,
           -- native_prov_name 户口地省名称
           -- native_city as nativeCity
           -- native_native_city_name 户口地市名称
           -- native_area as nativeArea
           -- native_area_name as native_area_name 户口地区名称
           -- 住院次数
    </select>

    <!--HIS数据抽取 获取药物过敏信息-->
    <select id="queryAllergyInfo" parameterType="java.util.Map" resultType="cn.hsa.module.inpt.pasttreat.dto.InptPastAllergyDTO">
        select *
        from inpt_past_allergy where hosp_code = #{hospCode} and visit_id = #{visitId}
    </select>

    <!--HIS数据抽取 获取科室医生信息-->
    <select id="getDoctorInfo" parameterType="java.util.Map" resultType="cn.hsa.module.mris.mrisHome.dto.MrisBaseInfoDTO">
        select user_1.id as directorId1,user_1.name as directorName1,user_2.id as directorId2,user_2.name as directorName2 from inpt_visit a
        left join base_dept b on a.in_dept_id = b.id
        left join sys_user user_1 on (b.code = user_1.dept_code and user_1.work_type_code = '101')
        left join sys_user user_2 on (b.code = user_1.dept_code and user_1.work_type_code = '102')
        where a.hosp_code = #{hospCode} and a.id = #{visitId} limit 1
    </select>

    <!--HIS数据抽取 获取入院次数-->
    <select id="getInCnt" parameterType="cn.hsa.module.mris.mrisHome.dto.MrisBaseInfoDTO" resultType="java.lang.Integer">
        select count(*) from inpt_visit
        where hosp_code = #{hospCode} and cert_code = #{certCode} and cert_no = #{certNo}
    </select>

    <!--HIS数据抽取 获取血型代码-->
    <select id="getBloodInfo" parameterType="java.util.Map" resultType="java.util.Map">
        select b.blood_code as bloodCode,code_1.name as bloodName from inpt_visit a
        left join oper_info_record b on a.id = b.visit_id
        left join sys_code_detail code_1 on (code_1.value = b.blood_code and code_1.c_code = 'XX')
        where a.hosp_code = #{hospCode} and a.id = #{visitId} limit 1
    </select>

    <!--HIS数据抽取 获取诊断信息-->
    <select id="queryHisDiagnoseInfo" parameterType="java.util.Map" resultType="cn.hsa.module.inpt.doctor.dto.InptDiagnoseDTO">
        select a.*,b.code as diseaseCode,b.name as diseaseName from inpt_diagnose a left join base_disease b on a.disease_id = b.id
        where a.hosp_code = #{hospCode} and a.visit_id = #{visitId} and a.type_code !='201'
    </select>

    <!--查询病案诊断信息-->
    <select id="queryMrisDiagnosePage" parameterType="cn.hsa.module.inpt.doctor.dto.InptVisitDTO"
            resultType="cn.hsa.module.mris.mrisHome.entity.MrisDiagnoseDO">
            SELECT md.id, md.hosp_code, mbi_id, md.visit_id, disease_code, disease_name,
                   md.icd_version, disease_icd10_1, md.disease_icd10, md.disease_icd10_name,
                   in_situation_code2, in_situation_code1, md.in_situation_code, columns_num,
                   disease_icd10_2, disease_icd10_name1, disease_icd10_name2,mbi.in_blh,disease_code2,disease_name2
            FROM mris_diagnose md join mris_base_info mbi on md.mbi_id = mbi.id and mbi.hosp_code = md.hosp_code
            WHERE md.hosp_code = #{hospCode}
            AND md.visit_id = #{id}
    </select>

    <!--查询中医病案诊断信息-->
    <select id="queryTcmMrisDiagnosePage" parameterType="cn.hsa.module.inpt.doctor.dto.InptVisitDTO"
            resultType="cn.hsa.module.mris.tcmMrisHome.entity.TcmMrisDiagnoseDO">
            SELECT
                md.id,
                md.hosp_code,
                mbi_id,
                md.visit_id,
                disease_code,
                disease_name,
                md.icd_version,
                md.disease_icd10,
                md.disease_icd10_name,
                md.in_situation_code,
                columns_num,
                mbi.in_blh
            FROM tcm_mris_diagnose md join tcm_mris_base_info mbi on md.mbi_id = mbi.id and mbi.hosp_code = md.hosp_code
            WHERE md.hosp_code = #{hospCode}
            AND md.visit_id = #{id}
    </select>

    <!--病案诊断数据批量插入-->
    <insert id="insertMrisDiagnoseBatch" parameterType="list">
        INSERT INTO mris_diagnose (
        id, hosp_code, mbi_id, visit_id, disease_code, disease_name, icd_version, disease_icd10,
        disease_icd10_name,in_situation_code,disease_icd10_1,disease_icd10_2,disease_icd10_name1,disease_icd10_name2,
        in_situation_code1,in_situation_code2,columns_num,disease_code2,disease_name2
        ) VALUES
        <foreach collection="list" index="index" item="item" separator=",">
            (
            #{item.id},
            #{item.hospCode},
            #{item.mbiId},
            #{item.visitId},
            #{item.diseaseCode},
            #{item.diseaseName},
            #{item.icdVersion},
            #{item.diseaseIcd10},
            #{item.diseaseIcd10Name},
            #{item.inSituationCode},
            #{item.diseaseIcd101},
            #{item.diseaseIcd102},
            #{item.diseaseIcd10Name1},
            #{item.diseaseIcd10Name2},
            #{item.inSituationCode1},
            #{item.inSituationCode2},
            #{item.columnsNum},
            #{item.diseaseCode2},
            #{item.diseaseName2}
            )
        </foreach>
    </insert>

    <!--HIS数据抽取 获取床位异动信息-->
    <select id="queryHisBedChanfeInfo" parameterType="java.util.Map" resultType="cn.hsa.module.mris.mrisHome.entity.InptBedChangeDO">
        select * from inpt_bed_change
        where hosp_code = #{hospCode} and visit_id = #{visitId} and change_code ='3' order by crte_time asc
    </select>

    <!--HIS数据抽取 批量插入转科信息-->
    <insert id="insetMrisTurnDeptBatch" parameterType="list">
        INSERT INTO mris_turn_dept (
            id, hosp_code, mbi_id, visit_id, out_dept_id, out_dept_name, in_dept_id, in_dept_name,
            in_dept_time
        ) VALUES
        <foreach collection="list" index="index" item="item" separator=",">
        (
            #{item.id},
            #{item.hospCode},
            #{item.mbiId},
            #{item.visitId},
            #{item.outDeptId},
            #{item.outDeptName},
            #{item.inDeptId},
            #{item.inDeptName},
            #{item.inDeptTime}
        )
        </foreach>
    </insert>

    <!--HIS数据抽取 获取手术信息-->
    <select id="queryOperRecordInfo" parameterType="java.util.Map" resultType="cn.hsa.module.oper.operInforecord.entity.OperInfoRecordDO">
        select * from oper_info_record where hosp_code = #{hospCode} and visit_id = #{visitId}
    </select>

    <!--查询病案手术信息-->
    <select id="queryMrisOperInfoPage" parameterType="cn.hsa.module.inpt.doctor.dto.InptVisitDTO"
            resultType="cn.hsa.module.mris.mrisHome.dto.MrisOperDTO">
            SELECT *, oper_disease_name as 'name'
            FROM mris_oper_info
            WHERE hosp_code = #{hospCode}
            AND visit_id = #{id}
    </select>

    <!--查询中医病案手术信息-->
    <select id="queryTcmMrisOperInfoPage" parameterType="cn.hsa.module.inpt.doctor.dto.InptVisitDTO"
            resultType="cn.hsa.module.mris.tcmMrisHome.entity.TcmMrisOperInfoDO">
            SELECT *, oper_disease_name as 'name'
            FROM tcm_mris_oper_info
            WHERE hosp_code = #{hospCode}
            AND visit_id = #{id}
    </select>

    <!--插入手术信息-->
    <insert id="insertMrisOperBatch" parameterType="list">
        INSERT INTO mris_oper_info (
        id, hosp_code, mbi_id, visit_id, oper_disease_id, oper_disease_icd9, oper_disease_name, notched_code,
        notched_name, heal_code, heal_name, ana_code, ana_name, oper_doctor_id, oper_doctor_name, oper_time,
        assistant_id4, assistant_name1, assistant_id2, assistant_name2, assistant_id3, assistant_name3, ana_id1, ana_name1,
        ana_id2, ana_name2, ana_id3, ana_name3, oper_code, oper_name, oper_position, oper_position_name,columns_num,other_oper_time
        ) VALUES
        <foreach collection="list" index="index" item="item" separator=",">
            (
            #{item.id},
            #{item.hospCode},
            #{item.mbiId},
            #{item.visitId},
            #{item.operDiseaseId},
            #{item.operDiseaseIcd9},
            #{item.operDiseaseName},
            #{item.notchedCode},
            #{item.notchedName},
            #{item.healCode},
            #{item.healName},
            #{item.anaCode},
            #{item.anaName},
            #{item.operDoctorId},
            #{item.operDoctorName},
            #{item.operTime},
            #{item.assistantId4},
            #{item.assistantName1},
            #{item.assistantId2},
            #{item.assistantName2},
            #{item.assistantId3},
            #{item.assistantName3},
            #{item.anaId1},
            #{item.anaName1},
            #{item.anaId2},
            #{item.anaName2},
            #{item.anaId3},
            #{item.anaName3},
            #{item.operCode},
            #{item.operName},
            #{item.operPosition},
            #{item.operPositionName},
            #{item.columnsNum},
            #{item.otherOperTime}
            )
        </foreach>
    </insert>

    <!--查询病案控制信息-->
    <select id="getMrisControl" parameterType="cn.hsa.module.inpt.doctor.dto.InptVisitDTO"
            resultType="cn.hsa.module.mris.mrisHome.entity.MrisControlDO">
            SELECT *
            FROM mris_control
            WHERE hosp_code = #{hospCode}
            AND visit_id = #{id}
    </select>

    <insert id="insertMrisControl" parameterType="cn.hsa.module.mris.mrisHome.entity.MrisControlDO">
        INSERT INTO mris_control (
            id, hosp_code, mbi_id, visit_id, is_commit, commit_id, commit_name, commit_time,
            is_print, print_id, print_name, print_time, is_send, send_id, send_name, send_time,
            is_receive, receive_id, receive_name, receive_time, borrow_code, borrow_id, borrow_name, borrow_time,
            back_id, back_name, back_time, is_copy, copy_id, copy_name, copy_time
        ) VALUES (
            #{id},
            #{hospCode},
            #{mbiId},
            #{visitId},
            #{isCommit},
            #{commitId},
            #{commitName},
            #{commitTime},
            #{isPrint},
            #{printId},
            #{printName},
            #{printTime},
            #{isSend},
            #{sendId},
            #{sendName},
            #{sendTime},
            #{isReceive},
            #{receiveId},
            #{receiveName},
            #{receiveTime},
            #{borrowCode},
            #{borrowId},
            #{borrowName},
            #{borrowTime},
            #{backId},
            #{backName},
            #{backTime},
            #{isCopy},
            #{copyId},
            #{copyName},
            #{copyTime}
        )
    </insert>

    <!--HIS数据抽取 获取费用信息-->
    <select id="queryInptCostByVisit" parameterType="java.util.Map" resultType="cn.hsa.module.inpt.doctor.dto.InptCostDTO">
        select * from inpt_cost where hosp_code = #{hospCode} and visit_id = #{visitId}
    </select>

    <!--HIS数据抽取 获取住院结算总金额-->
    <select id="getInptSettleTotalPrice" parameterType="java.util.Map" resultType="java.math.BigDecimal">
        select ifnull(sum(reality_price),0) from inpt_settle where hosp_code = #{hospCode} and visit_id = #{visitId}
        and (baby_id ='' or baby_id is null)
    </select>

    <!--HIS数据抽取 获取住院费用总金额-->
    <select id="getInptCostTotalPrice" parameterType="java.util.Map" resultType="java.math.BigDecimal">
        select ifnull(sum(reality_price),0) from inpt_cost where hosp_code = #{hospCode} and visit_id = #{visitId}
        and (baby_id ='' or baby_id is null)
    </select>

    <!--HIS数据抽取 获取住院结算个人自付金额-->
    <select id="getInptSettleSelfPrice" parameterType="java.util.Map" resultType="java.math.BigDecimal">
        select ifnull(sum(self_price),0) from inpt_settle where hosp_code = #{hospCode} and visit_id = #{visitId}
        and (baby_id ='' or baby_id is null)
    </select>

    <!--HIS数据抽取 获取住院结算个人预交金金额-->
    <select id="getInptSettleAdvicePrice" parameterType="java.util.Map" resultType="java.math.BigDecimal">
        select ifnull(sum(ap_total_price),0) from inpt_settle where hosp_code = #{hospCode} and visit_id = #{visitId}
        and (baby_id ='' or baby_id is null)
    </select>

    <!--HIS数据抽取 获取住院结算个人退费金额-->
    <select id="getInptSettlebackPrice" parameterType="java.util.Map" resultType="java.math.BigDecimal">
        select ifnull(sum(settle_back_price),0) from inpt_settle where hosp_code = #{hospCode} and visit_id = #{visitId}
        and (baby_id ='' or baby_id is null)
    </select>

    <!--HIS数据抽取 获取财务类别费用信息-->
    <select id="queryInptCostBfcInfo" parameterType="java.util.Map" resultType="java.util.Map">
        select a.bfc_id as bfcId,b.code,b.name, if(sum(a.total_price),0) as totalPrice from inpt_cost a
        left join base_finance_classify b on b.id = a.bfc_id
        where a.hosp_code = #{hospCode} and a.visit_id = #{visitId}
        and (baby_id ='' or baby_id is null)
        group by a.bfc_id
    </select>

    <!--查询病案费用信息-->
    <select id="getMrisCost" parameterType="cn.hsa.module.inpt.doctor.dto.InptVisitDTO"
            resultType="cn.hsa.module.mris.mrisHome.entity.MrisCostDO">
            SELECT *
            FROM mris_cost
            WHERE hosp_code = #{hospCode}
            AND visit_id = #{id}
    </select>

    <!-- 插入数据 病案费用信息-->
    <insert id="insertMrisCost" parameterType="cn.hsa.module.mris.mrisHome.entity.MrisCostDO">
        INSERT INTO mris_cost (
            id, hosp_code, mbi_id, visit_id, fy01, fy02, fy03, fy04,
            fy05, fy06, fy07, zhylfwl01, zhylfwl02, zhylfwl03, zhylfwl04, zhylfwl05,
            zhylfwl06, zdl01, zdl02, zdl03, zdl04, zll01, zll02, zll03,
            zll04, zll05, kfl01, xyl01, zyf01, xyzpl01, xyzpl02, xyzpl03,
            xyzpl04, xyzpl05, hcl01, hcl02, hcl03, zyl01, zyl02, zyl03,
            zyl04, zyl05, zyl06, zyl07, zyl08, zyl09, zyl10, zyl11,xyzpl06
        ) VALUES (
            #{id},
            #{hospCode},
            #{mbiId},
            #{visitId},
            #{fy01},
            #{fy02},
            #{fy03},
            #{fy04},
            #{fy05},
            #{fy06},
            #{fy07},
            #{zhylfwl01},
            #{zhylfwl02},
            #{zhylfwl03},
            #{zhylfwl04},
            #{zhylfwl05},
            #{zhylfwl06},
            #{zdl01},
            #{zdl02},
            #{zdl03},
            #{zdl04},
            #{zll01},
            #{zll02},
            #{zll03},
            #{zll04},
            #{zll05},
            #{kfl01},
            #{xyl01},
            #{zyf01},
            #{xyzpl01},
            #{xyzpl02},
            #{xyzpl03},
            #{xyzpl04},
            #{xyzpl05},
            #{hcl01},
            #{hcl02},
            #{hcl03},
            #{zyl01},
            #{zyl02},
            #{zyl03},
            #{zyl04},
            #{zyl05},
            #{zyl06},
            #{zyl07},
            #{zyl08},
            #{zyl09},
            #{zyl10},
            #{zyl11},
            #{xyzpl06}
        )
    </insert>

    <!-- 修改数据 病案更新信息-->
    <update id="updateMrisCost" parameterType="cn.hsa.module.mris.mrisHome.entity.MrisCostDO">
        UPDATE mris_cost
        <set>
            <if test="mbiId != null">
                mbi_id = #{mbiId},
            </if>
            <if test="visitId != null">
                visit_id = #{visitId},
            </if>
            <if test="fy01 != null">
                fy01 = #{fy01},
            </if>
            <if test="fy02 != null">
                fy02 = #{fy02},
            </if>
            <if test="fy03 != null">
                fy03 = #{fy03},
            </if>
            <if test="fy04 != null">
                fy04 = #{fy04},
            </if>
            <if test="fy05 != null">
                fy05 = #{fy05},
            </if>
            <if test="fy06 != null">
                fy06 = #{fy06},
            </if>
            <if test="fy07 != null">
                fy07 = #{fy07},
            </if>
            <if test="zhylfwl01 != null">
                zhylfwl01 = #{zhylfwl01},
            </if>
            <if test="zhylfwl02 != null">
                zhylfwl02 = #{zhylfwl02},
            </if>
            <if test="zhylfwl03 != null">
                zhylfwl03 = #{zhylfwl03},
            </if>
            <if test="zhylfwl04 != null">
                zhylfwl04 = #{zhylfwl04},
            </if>
            <if test="zhylfwl05 != null">
                zhylfwl05 = #{zhylfwl05},
            </if>
            <if test="zhylfwl06 != null">
                zhylfwl06 = #{zhylfwl06},
            </if>
            <if test="zdl01 != null">
                zdl01 = #{zdl01},
            </if>
            <if test="zdl02 != null">
                zdl02 = #{zdl02},
            </if>
            <if test="zdl03 != null">
                zdl03 = #{zdl03},
            </if>
            <if test="zdl04 != null">
                zdl04 = #{zdl04},
            </if>
            <if test="zll01 != null">
                zll01 = #{zll01},
            </if>
            <if test="zll02 != null">
                zll02 = #{zll02},
            </if>
            <if test="zll03 != null">
                zll03 = #{zll03},
            </if>
            <if test="zll04 != null">
                zll04 = #{zll04},
            </if>
            <if test="zll05 != null">
                zll05 = #{zll05},
            </if>
            <if test="kfl01 != null">
                kfl01 = #{kfl01},
            </if>
            <if test="xyl01 != null">
                xyl01 = #{xyl01},
            </if>
            <if test="zyf01 != null">
                zyf01 = #{zyf01},
            </if>
            <if test="xyzpl01 != null">
                xyzpl01 = #{xyzpl01},
            </if>
            <if test="xyzpl02 != null">
                xyzpl02 = #{xyzpl02},
            </if>
            <if test="xyzpl03 != null">
                xyzpl03 = #{xyzpl03},
            </if>
            <if test="xyzpl04 != null">
                xyzpl04 = #{xyzpl04},
            </if>
            <if test="xyzpl05 != null">
                xyzpl05 = #{xyzpl05},
            </if>
            <if test="hcl01 != null">
                hcl01 = #{hcl01},
            </if>
            <if test="hcl02 != null">
                hcl02 = #{hcl02},
            </if>
            <if test="hcl03 != null">
                hcl03 = #{hcl03},
            </if>
            <if test="zyl01 != null">
                zyl01 = #{zyl01},
            </if>
            <if test="zyl02 != null">
                zyl02 = #{zyl02},
            </if>
            <if test="zyl03 != null">
                zyl03 = #{zyl03},
            </if>
            <if test="zyl04 != null">
                zyl04 = #{zyl04},
            </if>
            <if test="zyl05 != null">
                zyl05 = #{zyl05},
            </if>
            <if test="zyl06 != null">
                zyl06 = #{zyl06},
            </if>
            <if test="zyl07 != null">
                zyl07 = #{zyl07},
            </if>
            <if test="zyl08 != null">
                zyl08 = #{zyl08},
            </if>
            <if test="zyl09 != null">
                zyl09 = #{zyl09},
            </if>
            <if test="zyl10 != null">
                zyl10 = #{zyl10},
            </if>
            <if test="zyl11 != null">
                zyl11 = #{zyl11}
            </if>
            <if test="xyzpl06 != null">
                xyzpl06 = #{xyzpl06}
            </if>
        </set>
        WHERE id = #{id} and hosp_code = #{hospCode}
    </update>

    <!-- 插入数据 病案诊断信息-->
    <insert id="insertMrisDiagnose" parameterType="cn.hsa.module.mris.mrisHome.entity.MrisDiagnoseDO">
        INSERT INTO mris_diagnose (
            id, hosp_code, mbi_id, visit_id, disease_code, disease_name, icd_version, disease_icd10,
            disease_icd10_name,in_situation_code,disease_code2,disease_name2
        ) VALUES (
            #{id},
            #{hospCode},
            #{mbiId},
            #{visitId},
            #{diseaseCode},
            #{diseaseName},
            #{icdVersion},
            #{diseaseIcd10},
            #{diseaseIcd10Name},
            #{inSituationCode},
            #{diseaseCode2},
            #{diseaseName2}
        )
    </insert>

    <!-- 修改数据 病案诊断信息更新-->
    <update id="updateMrisDiagnose" parameterType="cn.hsa.module.mris.mrisHome.entity.MrisDiagnoseDO">
        UPDATE mris_diagnose
        <set>
            <if test="mbiId != null">
                mbi_id = #{mbiId},
            </if>
            <if test="visitId != null">
                visit_id = #{visitId},
            </if>
            <if test="diseaseCode != null">
                disease_code = #{diseaseCode},
            </if>
            <if test="diseaseName != null">
                disease_name = #{diseaseName},
            </if>
            <if test="icdVersion != null">
                icd_version = #{icdVersion},
            </if>
            <if test="diseaseIcd10 != null">
                disease_icd10 = #{diseaseIcd10},
            </if>
            <if test="diseaseIcd10Name != null">
                disease_icd10_name = #{diseaseIcd10Name}
            </if>
            <if test="inSituationCode != null">
                in_situation_code = #{inSituationCode}
            </if>
            <if test="diseaseIcd101 != null">
                disease_icd10_1 = #{diseaseIcd101},
            </if>
            <if test="diseaseIcd102 != null">
                disease_icd10_2 = #{diseaseIcd102},
            </if>
            <if test="diseaseIcd10Name1 != null">
                disease_icd10_name1 = #{diseaseIcd10Name1}
            </if>
            <if test="diseaseIcd10Name != null">
                disease_icd10_name1 = #{diseaseIcd10Name1}
            </if>
            <if test="diseaseIcd10Name2 != null">
                disease_icd10_name2 = #{diseaseIcd10Name2}
            </if>
            <if test="diseaseIcd10Name != null">
                disease_icd10_name2 = #{diseaseIcd10Name2}
            </if>
            <if test="inSituationCode1 != null">
                in_situation_code1 = #{inSituationCode1}
            </if>
            <if test="inSituationCode2 != null">
                in_situation_code2 = #{inSituationCode2}
            </if>
            <if test="diseaseCode2 != null">
                disease_code2 = #{diseaseCode2},
            </if>
            <if test="diseaseName2 != null">
                disease_name2 = #{diseaseName2},
            </if>

        </set>
        WHERE id = #{id} and hosp_code = #{hospCode}
    </update>

    <!-- 插入数据 病案手术信息-->
    <insert id="insertMrisOperInfo" parameterType="cn.hsa.module.mris.mrisHome.entity.MrisOperInfoDO">
        INSERT INTO mris_oper_info (
            id, hosp_code, mbi_id, visit_id, oper_disease_id, oper_disease_icd9, oper_disease_name, notched_code,
            notched_name, heal_code, heal_name, ana_code, ana_name, oper_doctor_id, oper_doctor_name, oper_time,
            assistant_id4, assistant_name1, assistant_id2, assistant_name2, assistant_id3, assistant_name3, ana_id1, ana_name1,
            ana_id2, ana_name2, ana_id3, ana_name3, oper_code, oper_name, oper_position, oper_position_name,other_oper_time
        ) VALUES (
            #{id},
            #{hospCode},
            #{mbiId},
            #{visitId},
            #{operDiseaseId},
            #{operDiseaseIcd9},
            #{operDiseaseName},
            #{notchedCode},
            #{notchedName},
            #{healCode},
            #{healName},
            #{anaCode},
            #{anaName},
            #{operDoctorId},
            #{operDoctorName},
            #{operTime},
            #{assistantId4},
            #{assistantName1},
            #{assistantId2},
            #{assistantName2},
            #{assistantId3},
            #{assistantName3},
            #{anaId1},
            #{anaName1},
            #{anaId2},
            #{anaName2},
            #{anaId3},
            #{anaName3},
            #{operCode},
            #{operName},
            #{operPosition},
            #{operPositionName},
            #{otherOperTime}
        )
    </insert>

    <!-- 修改数据 更新病案手术信息-->
    <update id="updateMrisOperInfo" parameterType="cn.hsa.module.mris.mrisHome.entity.MrisOperInfoDO">
        UPDATE mris_oper_info
        <set>
            <if test="mbiId != null">
                mbi_id = #{mbiId},
            </if>
            <if test="visitId != null">
                visit_id = #{visitId},
            </if>
            <if test="operDiseaseId != null">
                oper_disease_id = #{operDiseaseId},
            </if>
            <if test="operDiseaseIcd9 != null">
                oper_disease_icd9 = #{operDiseaseIcd9},
            </if>
            <if test="operDiseaseName != null">
                oper_disease_name = #{operDiseaseName},
            </if>
            <if test="notchedCode != null">
                notched_code = #{notchedCode},
            </if>
            <if test="notchedName != null">
                notched_name = #{notchedName},
            </if>
            <if test="healCode != null">
                heal_code = #{healCode},
            </if>
            <if test="healName != null">
                heal_name = #{healName},
            </if>
            <if test="anaCode != null">
                ana_code = #{anaCode},
            </if>
            <if test="anaName != null">
                ana_name = #{anaName},
            </if>
            <if test="operDoctorId != null">
                oper_doctor_id = #{operDoctorId},
            </if>
            <if test="operDoctorName != null">
                oper_doctor_name = #{operDoctorName},
            </if>
            <if test="operTime != null">
                oper_time = #{operTime},
            </if>
            <if test="assistantId4 != null">
                assistant_id4 = #{assistantId4},
            </if>
            <if test="assistantName1 != null">
                assistant_name1 = #{assistantName1},
            </if>
            <if test="assistantId2 != null">
                assistant_id2 = #{assistantId2},
            </if>
            <if test="assistantName2 != null">
                assistant_name2 = #{assistantName2},
            </if>
            <if test="assistantId3 != null">
                assistant_id3 = #{assistantId3},
            </if>
            <if test="assistantName3 != null">
                assistant_name3 = #{assistantName3},
            </if>
            <if test="anaId1 != null">
                ana_id1 = #{anaId1},
            </if>
            <if test="anaName1 != null">
                ana_name1 = #{anaName1},
            </if>
            <if test="anaId2 != null">
                ana_id2 = #{anaId2},
            </if>
            <if test="anaName2 != null">
                ana_name2 = #{anaName2},
            </if>
            <if test="anaId3 != null">
                ana_id3 = #{anaId3},
            </if>
            <if test="anaName3 != null">
                ana_name3 = #{anaName3},
            </if>
            <if test="operCode != null">
                oper_code = #{operCode},
            </if>
            <if test="operName != null">
                oper_name = #{operName},
            </if>
            <if test="operPosition != null">
                oper_position = #{operPosition},
            </if>
            <if test="operPositionName != null">
                oper_position_name = #{operPositionName},
            </if>
            <if test="otherOperTime != null">
                other_oper_time = #{otherOperTime}
            </if>
        </set>
        WHERE id = #{id} and hosp_code = #{hospCode}
    </update>

    <!--查询病案转科信息-->
    <select id="queyMrisTurnDeptPage" parameterType="cn.hsa.module.inpt.doctor.dto.InptVisitDTO"
            resultType="cn.hsa.module.mris.mrisHome.entity.MrisTurnDeptDO">
            SELECT *
            FROM mris_turn_dept
            WHERE hosp_code = #{hospCode}
            AND visit_id = #{id}
    </select>

    <!-- 插入数据 病案转科信息-->
    <insert id="insertMrisTurnDept" parameterType="cn.hsa.module.mris.mrisHome.entity.MrisTurnDeptDO">
        INSERT INTO mris_turn_dept (
            id, hosp_code, mbi_id, visit_id, out_dept_id, out_dept_name, in_dept_id, in_dept_name,
            in_dept_time
        ) VALUES (
            #{id},
            #{hospCode},
            #{mbiId},
            #{visitId},
            #{outDeptId},
            #{outDeptName},
            #{inDeptId},
            #{inDeptName},
            #{inDeptTime}
        )
    </insert>

    <!-- 修改数据 病案转科信息更新-->
    <update id="updateMrisTurnDept" parameterType="cn.hsa.module.mris.mrisHome.entity.MrisTurnDeptDO">
        UPDATE mris_turn_dept
        <set>
            <if test="mbiId != null">
                mbi_id = #{mbiId},
            </if>
            <if test="visitId != null">
                visit_id = #{visitId},
            </if>
            <if test="outDeptId != null">
                out_dept_id = #{outDeptId},
            </if>
            <if test="outDeptName != null">
                out_dept_name = #{outDeptName},
            </if>
            <if test="inDeptId != null">
                in_dept_id = #{inDeptId},
            </if>
            <if test="inDeptName != null">
                in_dept_name = #{inDeptName},
            </if>
            <if test="inDeptTime != null">
                in_dept_time = #{inDeptTime}
            </if>
        </set>
        WHERE id = #{id} and hosp_code = #{hospCode}
    </update>
    <update id="updateMrisControl"></update>

    <!--获取病案费用关联的财务分类编码-->
    <select id="qureyMrisBfcInfo" parameterType="java.util.Map" resultType="cn.hsa.module.sys.code.dto.SysCodeDetailDTO">
        SELECT DISTINCT
            a.*,
            b.mris_code ,
            b.bfc_codes
        FROM
            sys_code_detail a
            LEFT JOIN base_mris_classify b ON a.value = b.mris_code
        WHERE
            a.c_code = 'BAFY' and a.hosp_code = #{hospCode}
    </select>

    <!--获取住院费用关联的财务分类编码-->
    <select id="queryInptBfcInfo" parameterType="java.util.Map" resultType="cn.hsa.module.base.bfc.dto.BaseFinanceClassifyDTO">
        SELECT b.code,ifnull(sum(a.reality_price),0) as totalPrice from inpt_cost a
        left join base_finance_classify b on a.bfc_id = b.id
        where a.hosp_code = #{hospCode} and a.visit_id = #{visitId} GROUP BY a.bfc_id
    </select>

    <!-- 获取支付方式信息 -->
    <select id="queryInptPayByVisitId" parameterType="cn.hsa.module.inpt.doctor.dto.InptVisitDTO" resultType="cn.hsa.module.inpt.fees.dto.InptPayDTO">
        select a.pay_code,b.name as payName from inpt_pay a left join sys_code_detail b on (a.pay_code = b.value and b.c_code = 'ZFFS')
        where a.hosp_code = #{hospCode} and a.visit_id = #{visitId} and price &gt;0
    </select>

    <!--通过就诊ID获取医保入院登记信息-->
    <select id="getInsureVisitByVisitId" parameterType="cn.hsa.module.inpt.doctor.dto.InptVisitDTO" resultType="cn.hsa.module.insure.module.dto.InsureIndividualVisitDTO">
		select * from insure_individual_visit where hosp_code = #{hospCode} and visit_id = #{visitId}
	</select>

    <!--通过就诊ID获取就诊信息-->
    <select id="getVisitById" parameterType="java.util.Map" resultType="cn.hsa.module.inpt.doctor.dto.InptVisitDTO">
		select * from inpt_visit where hosp_code = #{hospCode} and id = #{visitId}
	</select>

    <select id="getInsureIndividualBasic" parameterType="java.util.Map" resultType="cn.hsa.module.insure.module.dto.InsureIndividualBasicDTO">
		select * from insure_individual_basic where hosp_code = #{hospCode} and id = #{id}
	</select>

    <select id="getSysParamterByMap" parameterType="java.util.Map" resultType="cn.hsa.module.sys.parameter.dto.SysParameterDTO">
		select value,name from sys_paramter where hosp_code = #{hospCode} and code = #{code}
	</select>
    <select id="queryMriCost" resultType="cn.hsa.module.mris.mrisHome.entity.MrisCostDO">
        select id, hosp_code, mbi_id, visit_id, fy01, fy02, fy03, fy04, fy05, fy06,
               fy07, zhylfwl01, zhylfwl02, zhylfwl03, zhylfwl04, zhylfwl05, zhylfwl06, zdl01,
               zdl02, zdl03, zdl04, zll01, zll02, zll03, zll04, zll05, kfl01,
               xyl01, zyf01, xyzpl01, xyzpl02, xyzpl03, xyzpl04, xyzpl05, hcl01, hcl02, hcl03, zyl01,
               zyl02, zyl03, zyl04, zyl05, zyl06, zyl07, zyl08, zyl09, zyl10, zyl11,xyzpl06 from mris_cost
                where hosp_code = #{hospCode} and visit_id = #{visitId}
    </select>

    <select id="queryTcmMriCost" resultType="cn.hsa.module.mris.tcmMrisHome.entity.TcmMrisCostDO">
        select id, hosp_code, mbi_id, visit_id, fy01, fy02, fy03, fy04, fy05, fy06,
               fy07, zhylfwl01, zhylfwl02, zhylfwl03, zhylfwl04, zhylfwl05, zhylfwl06, zdl01,
               zdl02, zdl03, zdl04, zll01, zll02, zll03, zll04, zll05, kfl01,
               xyl01, zyf01, xyzpl01, xyzpl02, xyzpl03, xyzpl04, xyzpl05, hcl01, hcl02, hcl03, zyl01,
               zyl02, zyl03, zyl04, zyl05, zyl06, zyl07, zyl08, zyl09, zyl10, zyl11,xyzpl06 from tcm_mris_cost
                where hosp_code = #{hospCode} and visit_id = #{visitId}
    </select>

    <!-- 查询病案婴儿信息-->
    <select id="queryMrisBabyInfoPage" parameterType="cn.hsa.module.inpt.doctor.dto.InptVisitDTO"
            resultType="cn.hsa.module.mris.mrisHome.entity.MrisBabyInfoDO">
        SELECT *, ib.`code` as babyCode
        FROM mris_obstetrics mb
        left join inpt_baby ib on mb.hosp_code = ib.hosp_code and mb.baby_id = ib.id
        WHERE mb.hosp_code = #{hospCode}
        AND mb.visit_id = #{id}
    </select>
    <!-- 根据条件参数查询数据列表 -->
    <select id="queryHisBabyInfo" parameterType="java.util.Map" resultType="cn.hsa.module.inpt.doctor.dto.InptBabyDTO">
        SELECT
        *
        FROM inpt_baby ib
        where
        ib.hosp_code = #{hospCode}
        <if test="visitId != null and visitId != ''">
            AND ib.visit_id = #{visitId}
        </if>
    </select>

    <!--插入病案信息-->
    <insert id="insertMrisBabyBatch" parameterType="list">
        INSERT INTO mris_obstetrics (
        id, hosp_code, mbi_id, visit_id,baby_id,name,gender_code,weight,childbirth_code,
        outcome_code,rescue_num,rescue_success_num,breathing_code
        ) VALUES
        <foreach collection="list" index="index" item="item" separator=",">
            (
            #{item.id},
            #{item.hospCode},
            #{item.mbiId},
            #{item.visitId},
            #{item.babyId},
            #{item.name},
            #{item.genderCode},
            #{item.weight},
            #{item.childBirthCode},
            #{item.outComeCode},
            #{item.rescueNum},
            #{item.rescueSuccessNum},
            #{item.breathingCode}
            )
        </foreach>
    </insert>

    <!-- 删除数据 病案婴儿-->
    <delete id="deleteMrisBabyInfoByVisitId" parameterType="java.util.Map">
        DELETE FROM mris_obstetrics WHERE hosp_code = #{hospCode} AND visit_id = #{visitId}
    </delete>

    <!--病案诊断数据批量插入-->
    <insert id="insertMrisInptDiagnoseBatch" parameterType="list">
        INSERT INTO mris_inpt_diagnose (
        id, hosp_code, mbi_id, visit_id, disease_code, disease_name, icd_version,
         disease_icd10, disease_icd10_name, in_situation_code
        ) VALUES
        <foreach collection="list" index="index" item="item" separator=",">
            (
            #{item.id},
            #{item.hospCode},
            #{item.mbiId},
            #{item.visitId},
            #{item.diseaseCode},
            #{item.diseaseName},
            #{item.icdVersion},
            #{item.diseaseIcd10},
            #{item.diseaseIcd10Name},
            #{item.inSituationCode}
            )
        </foreach>
    </insert>

    <!--查询分行病案诊断信息-->
    <select id="queryMrisDiagnoseRowPage" parameterType="cn.hsa.module.inpt.doctor.dto.InptVisitDTO"
            resultType="cn.hsa.module.mris.mrisHome.entity.MrisDiagnoseDO">
            SELECT md.id, md.hosp_code, mbi_id, md.visit_id, disease_code, disease_name,
                   md.icd_version, md.disease_icd10, md.disease_icd10_name,md.in_situation_code,
                   ifnull((select type_code from base_disease where `code` = md.disease_icd10
                   and hosp_code = #{hospCode} limit 1),'') as typeCode
            FROM mris_inpt_diagnose md join mris_base_info mbi on md.mbi_id = mbi.id and mbi.hosp_code = md.hosp_code
            WHERE md.hosp_code = #{hospCode}
            AND md.visit_id = #{id}
    </select>

    <!-- 删除数据 分行病案诊断信息 -->
    <delete id="deleteRowMrisDiagnoseByVisitId" parameterType="java.util.Map">
        DELETE FROM mris_inpt_diagnose WHERE  hosp_code= #{hospCode} AND visit_id = #{visitId}
    </delete>

    <!-- 修改数据 病案诊断信息更新-->
    <update id="updateRowMrisDiagnose" parameterType="cn.hsa.module.mris.mrisHome.entity.MrisDiagnoseDO">
        UPDATE mris_inpt_diagnose
        <set>
            <if test="mbiId != null">
                mbi_id = #{mbiId},
            </if>
            <if test="visitId != null">
                visit_id = #{visitId},
            </if>
            <if test="diseaseCode != null">
                disease_code = #{diseaseCode},
            </if>
            <if test="diseaseName != null">
                disease_name = #{diseaseName},
            </if>
            <if test="icdVersion != null">
                icd_version = #{icdVersion},
            </if>
            <if test="diseaseIcd10 != null">
                disease_icd10 = #{diseaseIcd10},
            </if>
            <if test="diseaseIcd10Name != null">
                disease_icd10_name = #{diseaseIcd10Name}
            </if>
            <if test="inSituationCode != null">
                in_situation_code = #{inSituationCode}
            </if>
        </set>
        WHERE id = #{id} and hosp_code = #{hospCode}
    </update>

    <select id="getMrisDiagnosePage" parameterType="java.util.Map"
            resultType="java.util.Map">
            SELECT
                (case when ifnull(mid.disease_code, '0') = '0' then '2' else '1' end)as dagns_type,
                ifnull(mid.disease_icd10_name,'') as disease_name,
                ifnull(mid.disease_icd10, '') as icd_code,
				'' as dagns_condi_id,
				ifnull(mid.in_situation_code, '') as dagns_condi,
				mid.visit_id as visit_id
            FROM mris_inpt_diagnose mid
            WHERE mid.hosp_code = #{hospCode}
            AND mid.visit_id = #{visitId} order by mid.disease_code desc
    </select>

    <select id="getMrisOperInfoForDRG" parameterType="java.util.Map"
            resultType="java.util.Map">
        select
            ifnull(moi.oper_disease_icd9 , '') as oprt_code,
            ifnull(moi.oper_disease_name , '') as oprt_name,
            ifnull(moi.oper_time , '') as oprt_date,
            ifnull(moi.notched_code , '') as oprt_cut_id,
            ifnull(moi.notched_name , '') as oprt_cut,
            ifnull(moi.heal_code , '') as heal_id,
            ifnull(moi.heal_name , '') as heal,
            ifnull(moi.oper_doctor_id , '') as oprt_doctor_id,
            ifnull(moi.oper_doctor_name , '') as oprt_doctor,
            ifnull(moi.ana_code , '') as anthsa_mode_id,
            ifnull(moi.ana_name , '') as anthsa_mode,
            '' as is_add_port,
            ifnull(moi.assistant_id4 , '') as first_ass_id,
            ifnull(moi.assistant_name1 , '') as first_ass,
            ifnull(moi.assistant_id2 , '') as second_ass_id,
            ifnull(moi.assistant_name2 , '') as second_ass,
            ifnull(moi.ana_id1 , '') as anthsa_doctor_id,
            ifnull(moi.ana_name1 , '') as anthsa_doctor,
            '' as plan_oprt_id,
            '' as plan_oprt,
            ifnull(moi.oper_code , '') as oprt_level_id,
            ifnull(moi.oper_name , '') as oprt_level,
            ifnull(moi.visit_id , '') as visit_id

        from mris_oper_info moi
        WHERE moi.hosp_code = #{hospCode}
        AND moi.visit_id = #{visitId}
    </select>

    <select id="getMrisPatientBaseInfo" parameterType="java.util.Map"
            resultType="java.util.Map">
        SELECT
        IFNULL(yljg_code,'') as hospital_code,
        IFNULL(mbi.visit_id,'') as visit_id,
        IFNULL(hosp_name,'') as hospital_name,
        IFNULL(iiv.medical_reg_no,'') as serial_no,
        '' as hosp_id,
        '' as branch_hosp_id,
        '' as social_curity_card,
        IFNULL(cert_code,'') as card_type,
        IFNULL(cert_no,'') as card_number,
        IFNULL(in_profile,'') as patient_no,
        IFNULL(in_cnt,1) as hsptzd_count,
        IFNULL(icd_version,'') as icd_version,
        IFNULL(in_no,'') as adm_no,
        IFNULL(age,'') as age,
        IFNULL(name,'') as name,
        IFNULL(gender_code,'') as sex_id,
        IFNULL(gender_name,'') as sex,
        IFNULL(birthday,'') as birthday,
        IFNULL(id_card,'') as id_card,
        IFNULL(nationality_cation,'') as country_id,
        IFNULL(nationality_name,'') as country,
        IFNULL(nation_code,'') as nation_id,
        IFNULL(nation_name,'') as nation,
        IFNULL(occupation_name,'') as job,
        IFNULL(marry_code,'') as marriage_status_id,
        IFNULL(marry_name,'') as marriage_status,
        IFNULL(work,'') as company_name,
        IFNULL(work_address,'') as company_address,
        IFNULL(work_phone,'') as work_phone,
        IFNULL(work_post_code,'') as company_post,
        IFNULL(native_adress,'') as resident_address,
        IFNULL(native_post_code,'') as resident_post,
        IFNULL(contact_name,'') as cont,
        IFNULL(contact_rela_code,'') as cont_rel_patient,
        IFNULL(contact_address,'') as cont_address,
        IFNULL(contact_phone,'') as cont_tel,
        IFNULL(health_card,'') as as_card,
        IFNULL(in_time,'') as hsptzd_date,
        IFNULL(in_dept_id,'') as hsptzd_unified_dept,
        IFNULL(in_dept_name,'') as hsptzd_dept,
        IFNULL(in_ward,'') as hsptzd_ward,
        IFNULL(out_time,'') as hosp_disch_date,
        IFNULL(out_dept_id,'') as disch_unified_dept,
        IFNULL(out_dept_name,'') as disch_dept,
        IFNULL(in_ward,'') as disch_ward,
        IFNULL(in_days,0) as  actual_adm_days,
        IFNULL(disease_icd10,'') as outemgc_dagns_id,
        IFNULL(disease_icd10_name,'') as outemgc_dagns,
        '无' as outemgc_doc_id,
        '无' as outemgc_doc,
        IFNULL(bl_icd10_name,'') as  pthlgy_dagns,
        IFNULL(allergy_list,'') as allergic_drugs,
        IFNULL(rescue_count,'') as rescue_num,
        IFNULL(rescue_success_count,'') as rescue_succ_num,
        IFNULL((select prac_certi_no from sys_user su where su.hosp_code = mbi.hosp_code and su.id = mbi.director_id1),'') as dept_direct_id,
        IFNULL(director_name1,'') as dept_direct,
        IFNULL((select prac_certi_no from sys_user su where su.hosp_code = mbi.hosp_code and su.id = mbi.director_id2),'') as arch_id,
        IFNULL(director_name2,'') as arch,
        IFNULL((select prac_certi_no from sys_user su where su.hosp_code = mbi.hosp_code and su.id = mbi.zz_doctor_id),'') as att_doctor_id,
        IFNULL(zz_doctor_name,'') as att_doctor,
        IFNULL((select prac_certi_no from sys_user su where su.hosp_code = mbi.hosp_code and su.id = mbi.zg_doctor_id),'') as resident_id,
        IFNULL(zg_doctor_name,'') as resident,
        IFNULL((select prac_certi_no from sys_user su where su.hosp_code = mbi.hosp_code and su.id = mbi.jx_doctor_id),'') as refre_doctor_id,
        IFNULL(jx_doctor_name,'') as refre_doctor,
        IFNULL((select prac_certi_no from sys_user su where su.hosp_code = mbi.hosp_code and su.id = mbi.sx_doctor_id),'') as intern_id,
        IFNULL(sx_doctor_name,'') as intern,
        IFNULL((select prac_certi_no from sys_user su where su.hosp_code = mbi.hosp_code and su.id = mbi.sx_doctor_id),'') as doctor_coder_id,
        IFNULL(sx_doctor_name,'') as doctor_coder_name,
        IFNULL(emr_quality_code,'') as patient_quality_id,
        IFNULL(emr_quality_name,'') as patient_quality,
        IFNULL( (select prac_certi_no from sys_user su where su.hosp_code = mbi.hosp_code and su.id = mbi.zk_doctor_id),'') as quality_doctor_id,
        IFNULL(zk_doctor_name,'') as quality_doctor,
       IFNULL((select prac_certi_no from sys_user su where su.hosp_code = mbi.hosp_code and su.id = mbi.zk_nurse_id),'') as quality_nurs_id,
        IFNULL(zk_nurse_name,'') as quality_nurs,
        IFNULL(zk_time,'') as quality_date,
        IFNULL(c.fy01,0) as total_fee,
        IFNULL(c.fy02,0) as west_drug_fee,
        IFNULL(c.fy03,0) as ch_drug_fee,
        IFNULL(c.fy04,0) as ch_patent_fee,
        IFNULL(c.fy05,0) as ch_herbal_fee,
        IFNULL(c.fy06,0) as other_fee,
        IFNULL(is_autopsy,'') as is_autopsy_id,
        IFNULL(is_autopsy_name,'') as is_autopsy,
        IFNULL(blood_code,'') as blood_type_id,
        IFNULL(blood_name,'') as blood_type,
        IFNULL(rh_code,'') as rh_id,
        IFNULL(rh_name,'') as rh,
        '无' as first_transf_unidept,
        '' as first_transf_dept,
        '' as first_transf_date,
        '' as first_transf_time,
        IFNULL(case_classification,'') as disease_class_id,
        '' as disease_class,
        IFNULL(native_place,'') as native_place,
        IFNULL(now_adress,'') as curr_address,
        IFNULL(phone,'') as curr_tel,
        IFNULL(now_post_code,'') as curr_post,
        IFNULL(occupation_code,'') as job_id,
        IFNULL(baby_age_month,'') as newborn_age,
        IFNULL(baby_birth_weight,'') as newborn_weight,
        IFNULL(baby_in_weight,'') as newborn_hsptzd_weight,
        IFNULL(in_way,'') as hsptzd_ways_id,
        '' as hsptzd_ways,
         '' as clinical_pathway_id,
        IFNULL(clinical_path_case,'') as clinical_pathway,
        IFNULL(bl_icd10,'') as pthlgy_id,
        IFNULL(in_blh,'') as pthlgy,
        IFNULL(is_allergy,'') as is_allergic_id,
        case when is_allergy = '1' then '是'
         else '否' end as is_allergic,
         IFNULL(zr_nurse_id,'') as respon_nurs_id,
         IFNULL(zr_nurse_name,'') as respon_nurs,
         IFNULL(out_mode_code,'') as out_hosp_id,
         IFNULL(out_mode_name,'') as out_hosp,
         case when out_mode_code = '2' then IFNULL(turn_org_name,'-')
         else '-' end as mdcl_advice_out,
         case when out_mode_code = '3' then IFNULL(turn_org_name,'-')
          else '-' end as commu_out,
         IFNULL(is_inpt,'') as isagain_hsptzd_id,
         case when is_inpt = '1' then '是'
         else '否' end as isagain_hsptzd,
         IFNULL(aim,'') as again_aim,
         case when inpt_before_day = '-' then 0 else ifnull(inpt_before_day, 0) end as bef_coma_days,
         case when inpt_before_hour = '-' then 0 else ifnull(inpt_before_hour, 0) end as bef_coma_hours,
         case when inpt_before_minute = '-' then 0 else ifnull(inpt_before_minute, 0) end as bef_coma_mins,
         '' as bef_coma_total,
         case when inpt_last_day = '-' then 0 else ifnull(inpt_last_day, 0) end as aft_coma_days,
         case when inpt_last_hour = '-' then 0 else ifnull(inpt_last_hour, 0) end as aft_coma_hours,
         case when inpt_last_minute = '-' then 0 else ifnull(inpt_last_minute, 0) end as aft_coma_mins,
         '' as aft_coma_total,
         IFNULL(pay_way_code,'') as fee_mode_id,
         IFNULL(pay_way_name,'') as fee_mode,
         IFNULL(c.fy07,0) as self_fee,
         IFNULL(c.zhylfwl01,0) as inte_serv_fee,
         IFNULL(c.zhylfwl02,0) as inte_opera_fee,
         IFNULL(c.zhylfwl03,0) as inte_nurs_fee,
         IFNULL(c.zhylfwl04,0) as inte_other_fee,
         IFNULL(c.zdl01,0) as dagns_patholo_fee,
         IFNULL(c.zdl02,0) as dagns_lab_fee,
         IFNULL(c.zdl03,0) as dagns_ima_fee,
         IFNULL(c.zdl04,0) as dagns_cli_fee,
         IFNULL(c.zll01,0) as trea_nooprt_fee,
         IFNULL(c.zll02,0) as trea_cli_fee,
         IFNULL(c.zll03,0) as trea_oprtreat_fee,
         IFNULL(c.zll04,0) as trea_anthsa_fee,
         IFNULL(c.zll05,0) as trea_oprt_fee,
         IFNULL(c.kfl01,0) as rec_fee,
         IFNULL(c.zyl01,0) as tradi_meditrea_fee,
         IFNULL(c.xyl01,0) as western_antibac_fee,
         IFNULL(c.xyzpl01,0) as bloo_blood_fee,
         IFNULL(c.xyzpl02,0) as bloo_albumin_fee,
         IFNULL(c.xyzpl03,0) as bloo_globulin_fee,
         IFNULL(c.xyzpl04,0) as bloo_coagula_fee,
         IFNULL(c.xyzpl05,0) as bloo_cell_fee,
         IFNULL(c.hcl01,0) as comsu_chkdisp_fee,
         IFNULL(c.hcl02,0) as comsu_treadisp_fee,
         IFNULL(c.hcl03,0) as comsu_oprtdisp_fee,
         IFNULL(c.zhylfwl05,0)  as inte_dialect_fee,
         IFNULL(c.zhylfwl06,0) as inte_consul_fee,
         IFNULL(c.zyl02,0) as tradi_dagns_fee,
         IFNULL(c.zyl01,0) as tradi_trea_fee,
         IFNULL(c.zyl03,0) as tradi_treaout_fee,
         IFNULL(c.zyl04,0) as tradi_treabone_fee,
         IFNULL(c.zyl05,0) as tradi_treaacup_fee,
         IFNULL(c.zyl06,0) as tradi_treamani_fee,
         IFNULL(c.zyl07,0) as tradi_treaanor_fee,
         IFNULL(c.zyl08,0) as tradi_treaspec_fee,
         IFNULL(c.zyl09,0) as tradi_othe_fee,
         IFNULL(c.zyl10,0) as tradi_othemake_fee,
         IFNULL(c.zyl11,0) as tradi_othefood_fee,
         IFNULL(c.zyf01,0) as tradi_patemake_fee,
         '' as treatype_tradi_id,
         '' as treatype_tradi,
         '' as outemgc_tradi_id,
         '' as outemgc_tradi,
         '' as implcli_tradi_id,
         '' as implcli_tradi_path,
         '' as useprep_tradi_id,
         '' as useprep_tradi,
         '' as usedev_tradi_id,
         '' as usedev_tradi,
         '' as usetech_tradi_id,
         '' as usetech_tradi,
         '' as tradi_dlctnurs_id,
         '' as tradi_dlctnurs,
         IFNULL(damage_reason,'') as inju_pois_exter_rsn,
         IFNULL(disease_icd10_other,'') as inju_pois_exter_rsn_code,
         '' as is_code,
          IFNULL(iiv.aka130_name,'') as insur_business_type,
          '' as insur_nonlocal_flag,
          '' as in_state,
          IFNULL(iiv.aka130,'') as insur_business_type_id,
          '' as cont_addr_prov,
          '' as cont_addr_city,
           '' as cont_addr_county,
           '' as cont_addr_street,
           '' as addr_province,
           '' as addr_city,
           '' as addr_county,
           '' as addr_street,
           '' as disch_dept_id,
           '' as hsptzd_dept_id,
           IFNULL(iiv.bka006_name,'') as insur_type
            FROM mris_base_info mbi
           left join insure_individual_visit iiv
                on mbi.visit_id = iiv.visit_id and mbi.hosp_code = iiv.hosp_code
           LEFT JOIN mris_cost c on mbi.visit_id = c.visit_id and mbi.hosp_code = c.hosp_code
           WHERE  mbi.hosp_code = #{hospCode}
            AND  mbi.visit_id = #{visitId}
            order by iiv.crte_time desc limit 1
    </select>

</mapper>
