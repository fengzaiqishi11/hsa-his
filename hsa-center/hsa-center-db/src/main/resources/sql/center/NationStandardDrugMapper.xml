<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.hsa.module.center.nationstandarddrug.dao.NationStandardDrugDAO">

    <resultMap type="cn.hsa.module.center.nationstandarddrug.dto.NationStandardDrugDTO" id="NationStandardDrugMap">
        <result property="id" column="id" jdbcType="VARCHAR"/>
        <result property="dataSources" column="data_sources" jdbcType="VARCHAR"/>
        <result property="code" column="code" jdbcType="VARCHAR"/>
        <result property="registerName" column="register_name" jdbcType="VARCHAR"/>
        <result property="goodName" column="good_name" jdbcType="VARCHAR"/>
        <result property="registerPrep" column="register_prep" jdbcType="VARCHAR"/>
        <result property="actualPrep" column="actual_prep" jdbcType="VARCHAR"/>
        <result property="registerSpec" column="register_spec" jdbcType="VARCHAR"/>
        <result property="actualSpec" column="actual_spec" jdbcType="VARCHAR"/>
        <result property="packaging" column="packaging" jdbcType="VARCHAR"/>
        <result property="splitRatio" column="split_ratio" jdbcType="VARCHAR"/>
        <result property="unit" column="unit" jdbcType="VARCHAR"/>
        <result property="splitUnit" column="split_unit" jdbcType="VARCHAR"/>
        <result property="prod" column="prod" jdbcType="VARCHAR"/>
        <result property="dan" column="dan" jdbcType="VARCHAR"/>
        <result property="packagProd" column="packag_prod" jdbcType="VARCHAR"/>
        <result property="marketStatus" column="market_status" jdbcType="VARCHAR"/>
        <result property="insure" column="insure" jdbcType="VARCHAR"/>
        <result property="ratioAtOne" column="ratio_at_one" jdbcType="VARCHAR"/>
        <result property="codeNo" column="code_no" jdbcType="VARCHAR"/>
        <result property="insuranceName" column="insurance_name" jdbcType="VARCHAR"/>
        <result property="insurancePrep" column="insurance_prep" jdbcType="VARCHAR"/>
        <result property="remark" column="remark" jdbcType="VARCHAR"/>
        <result property="isValid" column="is_valid" jdbcType="VARCHAR"/>
        <result property="crteId" column="crte_id" jdbcType="VARCHAR"/>
        <result property="crteName" column="crte_name" jdbcType="VARCHAR"/>
        <result property="provinceCode" column="province_code" jdbcType="VARCHAR"/>
    </resultMap>
    <insert id="saveNationStandardDrugBatch">
        insert into nation_standard_drug
        (
        id, data_sources, code, register_name, good_name, register_prep, actual_prep,
        register_spec, actual_spec, packaging, split_ratio, unit, split_unit, prod,
        dan, packag_prod, market_status, insure, ratio_at_one, code_no, insurance_name,
        insurance_prep, remark, is_valid, crte_id, crte_name,province_code
        )
        values
        <foreach collection="list" item="item" separator=",">
            (
            #{item.id},#{item.dataSources},#{item.code},#{item.registerName},#{item.goodName},#{item.registerPrep},#{item.actualPrep},
            #{item.registerSpec},#{item.actualSpec},#{item.packaging},#{item.splitRatio},#{item.unit},#{item.splitUnit},#{item.prod},
            #{item.dan},#{item.packagProd},#{item.marketStatus},#{item.insure},#{item.ratioAtOne},#{item.codeNo},#{item.insuranceName},
            #{item.insurancePrep},#{item.remark},#{item.isValid},#{item.crteId},#{item.crteName},#{item.provinceCode}
            )
        </foreach>
    </insert>

    <insert id="saveNationStandardDrug">
        insert into nation_standard_drug
        (
            id, data_sources, code, register_name, good_name, register_prep, actual_prep,
            register_spec, actual_spec, packaging, split_ratio, unit, split_unit, prod,
            dan, packag_prod, market_status, insure, ratio_at_one, code_no, insurance_name,
            insurance_prep, remark, is_valid, crte_id, crte_name,province_code
        )
        values
        (
            #{id},#{dataSources},#{code},#{registerName},#{goodName},#{registerPrep},#{actualPrep},
            #{registerSpec},#{actualSpec},#{packaging},#{splitRatio},#{unit},#{splitUnit},#{prod},
            #{dan},#{packagProd},#{marketStatus},#{insure},#{ratioAtOne},#{codeNo},#{insuranceName},
            #{insurancePrep},#{remark},#{isValid},#{crteId},#{crteName},#{provinceCode}
        )
    </insert>

    <update id="updateNationStandardDrug">
        update nation_standard_drug set
                                        data_sources=#{dataSources},code=#{code},register_name=#{registerName},good_name=#{goodName},register_prep=#{registerPrep},actual_prep=#{actualPrep},
                                        register_spec=#{registerSpec},actual_spec=#{actualSpec},packaging=#{packaging},split_ratio=#{splitRatio},unit=#{unit},split_unit=#{splitUnit},prod=#{prod},
                                        dan=#{dan},packag_prod=#{packagProd},market_status=#{marketStatus},insure=#{insure},ratio_at_one=#{ratioAtOne},code_no=#{codeNo},insurance_name=#{insuranceName},
                                        insurance_prep=#{insurancePrep},remark=#{remark},is_valid=#{isValid},crte_id=#{crteId},crte_name=#{crteName},province_code=#{provinceCode}
        where id = #{id}
    </update>

    <!-- 查询中心端码表 -->

    <!--查询单个-->
    <select id="getById" resultMap="NationStandardDrugMap">
        select
            id, data_sources, code, register_name, good_name, register_prep, actual_prep, register_spec, actual_spec, packaging, split_ratio, unit, split_unit, prod, dan, packag_prod, market_status, insure, ratio_at_one, code_no, insurance_name, insurance_prep, remark, is_valid, crte_id, crte_name,province_code
        from nation_standard_drug
        where id = #{id}
    </select>

    <!--通过实体作为筛选条件查询-->
    <select id="queryNationStandardDrugPage" resultMap="NationStandardDrugMap">
        select
        id, data_sources, code, register_name, good_name, register_prep, actual_prep, register_spec, actual_spec, packaging, split_ratio, unit, split_unit, prod, dan, packag_prod, market_status, insure, ratio_at_one, code_no, insurance_name, insurance_prep, remark, is_valid, crte_id, crte_name,province_code
        from nation_standard_drug
        where is_valid = '1'
        <if test="keyword != null and keyword != ''">
            AND  MATCH (prod) AGAINST ( #{keyword} IN BOOLEAN MODE)
        </if>
        <if test="provinceCode != null and provinceCode !=''">
            AND ( province_code = #{provinceCode} or province_code is null)
        </if>
        <if test="keyword != null and keyword != ''">
            union all
            select id, data_sources, code, register_name, good_name, register_prep, actual_prep, register_spec, actual_spec, packaging, split_ratio, unit, split_unit, prod, dan, packag_prod, market_status, insure, ratio_at_one, code_no, insurance_name, insurance_prep, remark, is_valid, crte_id, crte_name,province_code
            from nation_standard_drug
            where MATCH ( good_name ) AGAINST ( #{keyword} IN BOOLEAN MODE )
            AND is_valid = '1'
            <if test="provinceCode != null and provinceCode !=''">
                AND ( province_code = #{provinceCode} or province_code is null)
            </if>
            union all
            select id, data_sources, code, register_name, good_name, register_prep, actual_prep, register_spec, actual_spec, packaging, split_ratio, unit, split_unit, prod, dan, packag_prod, market_status, insure, ratio_at_one, code_no, insurance_name, insurance_prep, remark, is_valid, crte_id, crte_name,province_code
            from nation_standard_drug
            where MATCH ( register_name ) AGAINST ( #{keyword} IN BOOLEAN MODE )
            AND is_valid = '1'
            <if test="provinceCode != null and provinceCode !=''">
                AND ( province_code = #{provinceCode} or province_code is null)
            </if>
            union all
            select id, data_sources, code, register_name, good_name, register_prep, actual_prep, register_spec, actual_spec, packaging, split_ratio, unit, split_unit, prod, dan, packag_prod, market_status, insure, ratio_at_one, code_no, insurance_name, insurance_prep, remark, is_valid, crte_id, crte_name,province_code
            from nation_standard_drug
            where MATCH ( wbm ) AGAINST ( #{keyword} IN BOOLEAN MODE )
            AND is_valid = '1'
            <if test="provinceCode != null and provinceCode !=''">
                AND ( province_code = #{provinceCode} or province_code is null)
            </if>
            union all
            select id, data_sources, code, register_name, good_name, register_prep, actual_prep, register_spec, actual_spec, packaging, split_ratio, unit, split_unit, prod, dan, packag_prod, market_status, insure, ratio_at_one, code_no, insurance_name, insurance_prep, remark, is_valid, crte_id, crte_name,province_code
            from nation_standard_drug
            where MATCH ( pym ) AGAINST ( #{keyword} IN BOOLEAN MODE )
            AND is_valid = '1'
            <if test="provinceCode != null and provinceCode !=''">
                AND ( province_code = #{provinceCode} or province_code is null)
            </if>
            union all
            select id, data_sources, code, register_name, good_name, register_prep, actual_prep, register_spec, actual_spec, packaging, split_ratio, unit, split_unit, prod, dan, packag_prod, market_status, insure, ratio_at_one, code_no, insurance_name, insurance_prep, remark, is_valid, crte_id, crte_name,province_code
            from nation_standard_drug
            where MATCH ( code ) AGAINST ( #{keyword} IN BOOLEAN MODE )
            AND is_valid = '1'
            <if test="provinceCode != null and provinceCode !=''">
                AND ( province_code = #{provinceCode} or province_code is null)
            </if>
            union all
            select id, data_sources, code, register_name, good_name, register_prep, actual_prep, register_spec, actual_spec, packaging, split_ratio, unit, split_unit, prod, dan, packag_prod, market_status, insure, ratio_at_one, code_no, insurance_name, insurance_prep, remark, is_valid, crte_id, crte_name,province_code
            from nation_standard_drug
            where MATCH (dan) AGAINST ( #{keyword} IN BOOLEAN MODE )
            AND is_valid = '1'
            <if test="provinceCode != null and provinceCode !=''">
                AND ( province_code = #{provinceCode} or province_code is null)
            </if>

        </if>
    </select>

    <select id="queryNationStandardZYPage" resultMap="NationStandardDrugMap">
        select id,code,good_name,decoction_name as register_name from nation_standard_drug_zy where 1=1

        <if test="keyword != null and keyword != ''">
            and (good_name like concat('%',#{keyword},'%')
            or decoction_name like concat('%',#{keyword},'%')
            or wbm like concat('%',#{keyword},'%')
            or pym like concat('%',#{keyword},'%')
            or code like concat('%',#{keyword},'%')
            or dan like concat('%',#{keyword},'%')
            )
        </if>
    </select>

</mapper>
