<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.hsa.module.phar.pharapply.dao.PharApplyDAO">
    <!--领药申请-->
    <resultMap type="cn.hsa.module.phar.pharapply.dto.PharApplyDTO" id="PharApplyMap">
        <result property="id" column="id" jdbcType="VARCHAR"/>
        <result property="hospCode" column="hosp_code" jdbcType="VARCHAR"/>
        <result property="orderNo" column="order_no" jdbcType="VARCHAR"/>
        <result property="outStroId" column="out_stro_id" jdbcType="VARCHAR"/>
        <result property="inStroId" column="in_stro_id" jdbcType="VARCHAR"/>
        <result property="buyPriceAll" column="buy_price_all" jdbcType="DECIMAL"/>
        <result property="sellPriceAll" column="sell_price_all" jdbcType="DECIMAL"/>
        <result property="remark" column="remark" jdbcType="VARCHAR"/>
        <result property="auditStatus" column="audit_status" jdbcType="VARCHAR"/>
        <result property="auditId" column="audit_id" jdbcType="VARCHAR"/>
        <result property="auditName" column="audit_name" jdbcType="VARCHAR"/>
        <result property="auditTime" column="audit_time" jdbcType="TIMESTAMP"/>
        <result property="crteId" column="crte_id" jdbcType="VARCHAR"/>
        <result property="crteName" column="crte_name" jdbcType="VARCHAR"/>
        <result property="crteTime" column="crte_time" jdbcType="TIMESTAMP"/>
        <result property="isOut" column="is_out" jdbcType="TIMESTAMP"/>
    </resultMap>
    <!--通过实体作为筛选条件 分页查询药品请领信息-->
    <select id="queryPage" resultMap="PharApplyMap">
        select
        id, hosp_code, order_no, out_stro_id, in_stro_id, buy_price_all, sell_price_all, remark, audit_status, audit_id,
        audit_name, audit_time, crte_id, crte_name, crte_time,is_out
        from phar_apply where hosp_code = #{hospCode}
        <if test="id != null and id != ''">
            and id = #{id}
        </if>
        <if test="orderNo != null and orderNo != ''">
            and order_no like concat('%',#{orderNo},'%')
        </if>
        <if test="auditStatus != null and auditStatus != ''">
            and audit_status = #{auditStatus}
        </if>
        <if test="outStroId != null and outStroId != ''">
            and out_stro_id = #{outStroId}
        </if>
        <if test="inStroId != null and inStroId != ''">
            and in_stro_id = #{inStroId}
        </if>
        <if test="isOut != null and isOut != ''">
          and is_out = #{isOut}
        </if>
        /*开始日期*/
        <if test="startDate != null ">
            and crte_time &gt;= #{startDate}
        </if>
        /*结束日期*/
        <if test="endDate != null ">
            and crte_time &lt;= DATE_FORMAT(DATE_ADD(#{endDate},INTERVAL 1 DAY),'%Y-%m-%d')
        </if>
        order by crte_time desc
    </select>

    <!--新增所有列-->
    <insert id="insert" parameterType="cn.hsa.module.phar.pharapply.dto.PharApplyDTO">
        insert into phar_apply (id,
                                hosp_code,
                                order_no,
                                out_stro_id,
                                in_stro_id,
                                buy_price_all,
                                sell_price_all,
                                remark,
                                audit_status,
                                audit_id,
                                audit_name,
                                audit_time,
                                crte_id,
                                crte_name,
                                crte_time,
                                is_out)
        values (#{id},
                #{hospCode},
                #{orderNo},
                #{outStroId},
                #{inStroId},
                #{buyPriceAll},
                #{sellPriceAll},
                #{remark},
                #{auditStatus},
                #{auditId},
                #{auditName},
                #{auditTime},
                #{crteId},
                #{crteName},
                #{crteTime},
                #{isOut})
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update phar_apply set
                out_stro_id = #{outStroId},
                in_stro_id = #{inStroId},
                buy_price_all = #{buyPriceAll},
                sell_price_all = #{sellPriceAll},
                remark = #{remark},
                audit_id = #{auditId},
                audit_name = #{auditName},
                audit_time = #{auditTime},
                crte_id = #{crteId},
                crte_name = #{crteName},
                crte_time = #{crteTime}
        where id = #{id} and hosp_code = #{hospCode}
    </update>
    <!--批量作废-->
    <update id="updateBatchCancelled" parameterType="cn.hsa.module.phar.pharapply.dto.PharApplyDTO">
        update phar_apply set audit_status= '2' ,in_stro_id=#{inStroId},audit_id=#{auditId} ,audit_name=#{auditName},audit_time=#{auditTime}
        where id in
        <foreach collection="ids" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
        and hosp_code = #{hospCode}
    </update>
    <!--批量审核-->
    <update id="updateBatchCheck" parameterType="cn.hsa.module.phar.pharapply.dto.PharApplyDTO">
        update phar_apply set audit_status = #{auditStatus},audit_id=#{auditId} ,audit_name=#{auditName},audit_time=#{auditTime}
        where id in
        <foreach collection="ids" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
        and hosp_code = #{hospCode}
    </update>
    <!--批量作废前 判断审核标识状态-->
    <select id="queryFlag" resultType="cn.hsa.module.phar.pharapply.dto.PharApplyDTO"
            parameterType="cn.hsa.module.phar.pharapply.dto.PharApplyDTO">
        select * from phar_apply
        where id in
        <foreach collection="ids" item="item" open="(" close=")" separator=",">
            #{item}
        </foreach>
        and hosp_code=#{hospCode}
    </select>
    <!--根据id查找领药申请信息 做编辑回显的时候用-->
    <select id="getById" resultType="cn.hsa.module.phar.pharapply.dto.PharApplyDTO">
        select
        id, hosp_code, order_no, out_stro_id, in_stro_id, buy_price_all, sell_price_all, remark, audit_status, audit_id,
        audit_name, audit_time, crte_id, crte_name, crte_time,is_out
        from phar_apply
        where hosp_code=#{hospCode}
        <if test="id !=null and id != ''">
            and id=#{id}
        </if>
        <if test="inStroId !=null and inStroId != ''">
            and in_stro_id=#{inStroId}
        </if>
    </select>

    <select id="selectPharApplyByIds" resultType="cn.hsa.module.phar.pharapply.dto.PharApplyDTO">
        select
        id, hosp_code, order_no, out_stro_id, in_stro_id, buy_price_all, sell_price_all, remark, audit_status, audit_id,
        audit_name, audit_time, crte_id, crte_name, crte_time,is_out
        from phar_apply
        where  id in
        <foreach collection="ids" item="item" open="(" close=")" separator=",">
            #{item}
        </foreach>
        and hosp_code=#{hospCode}
    </select>

    <!-- 判断是否存在已出库的领药单据-->
    <select id="queryIsExitPharApply" resultType="java.lang.String">
      select in_order_no from stro_out where in_order_no in
        (select order_no from phar_apply where hosp_code = #{hospCode}
           and id in
        <foreach collection="ids" item="item" open="(" close=")" separator=",">
          #{item}
        </foreach>
        )
    </select>

    <!-- 修改状态 -->
    <update id="updateIsOut">
      update phar_apply set is_out = '1'
      where hosp_code = #{hospCode}
      and id in
      <foreach collection="ids" item="item" open="(" close=")" separator=",">
        #{item}
      </foreach>
      and is_out = '0'
    </update>

    <!-- 修改状态 -->
    <update id="updateIsOutByOrderNo">
      update phar_apply set is_out = '0'
      where hosp_code = #{hospCode}
      and order_no in
      <foreach collection="ids" item="item" open="(" close=")" separator=",">
        #{item}
      </foreach>
      and order_no is not null and is_out = "1" and out_stro_id = #{outStroId}
    </update>

  <select id="queryPharApplyDetailAll" resultType="cn.hsa.module.phar.pharapply.dto.PharApplyDetailDTO">
    select a.* from phar_apply_detail a where a.hosp_code = #{hospCode}
     and apply_id in
    <foreach collection="ids" item="item" open="(" close=")" separator=",">
      #{item}
    </foreach>
  </select>

  <!-- 查询药库中库存不足需要按下限补充得项目 -->
  <select id="queryNeedSupplementMin" parameterType="java.util.Map" resultType="cn.hsa.module.phar.pharapply.dto.PharApplyDetailDTO">
      SELECT
        a.item_id as itemId,
        (a.stock_min - a.num) as num,
        a.item_name as itemName,
        a.item_code as itemCode,
        a.hosp_code as hospCode,
        a.spec,
        a.split_ratio,
        a.split_unit_code,
        a.unit_code as unitCode,
        case a.item_code when '1' then b.split_price when '2' then c.split_price end splitPrice,
        case a.item_code when '1' then b.price when '2' then c.price end sellPrice,
        case a.item_code when '1' then b.last_buy_price when '2' then c.last_buy_price end buyPrice,
        case a.item_code when '1' then  b.price *(a.stock_min - a.num) when '2' then c.price *(a.stock_min - a.num) end sellPriceAll,
        case a.item_code when '1' then  b.last_buy_price *(a.stock_min - a.num) when '2' then c.last_buy_price *(a.stock_min - a.num) end buyPriceAll,
        (select p.id from base_product p where p.hosp_code = b.hosp_code and p.code = b.prod_code) as productId
        FROM
        stro_stock a
        LEFT JOIN base_drug b ON a.item_id = b.id and a.hosp_code = b.hosp_code and b.is_valid = '1'
        LEFT JOIN base_material c ON a.item_id = c.id and a.hosp_code = c.hosp_code and c.is_valid = '1'
        where a.hosp_code = #{hospCode} and stock_min is not null and a.biz_id = #{inStroId} and a.num &lt; a.stock_min
    </select>

  <!-- 查询药库中库存不足需要按上限补充项目 -->
  <select id="queryNeedSupplementUp" parameterType="java.util.Map" resultType="cn.hsa.module.phar.pharapply.dto.PharApplyDetailDTO">
        SELECT
          a.item_id as itemId,
          (a.stock_max - a.num) as num,
          a.item_name as itemName,
          a.item_code as itemCode,
          a.hosp_code as hospCode,
          a.spec,
          a.split_ratio,
          a.split_unit_code,
          a.unit_code as unitCode,
          case a.item_code when '1' then b.split_price when '2' then c.split_price end splitPrice,
          case a.item_code when '1' then b.price when '2' then c.price end sellPrice,
          case a.item_code when '1' then b.last_buy_price when '2' then c.last_buy_price end buyPrice,
          case a.item_code when '1' then  b.price *(a.stock_max - a.num) when '2' then c.price *(a.stock_max - a.num) end sellPriceAll,
          case a.item_code when '1' then  b.last_buy_price *(a.stock_max - a.num) when '2' then c.last_buy_price *(a.stock_max - a.num) end buyPriceAll,
          (select p.id from base_product p where p.hosp_code = #{hospCode} and p.code = b.prod_code) as productId
          FROM
          stro_stock a
          LEFT JOIN base_drug b ON a.item_id = b.id and a.hosp_code = b.hosp_code and b.is_valid = '1'
          LEFT JOIN base_material c ON a.item_id = c.id and a.hosp_code = c.hosp_code and c.is_valid = '1'
          where a.hosp_code = #{hospCode} and stock_max is not null and a.biz_id = #{inStroId} and a.num &lt; a.stock_max
      </select>
    <!--按消耗量生成-->
    <select id="queryNeedSupplementDate" resultType="cn.hsa.module.phar.pharapply.dto.PharApplyDetailDTO" >
        select
        a.item_id as itemId,
        max(a.item_code) as itemCode,
        sum(a.num) as num,
        max(a.hosp_code) as hospCode,
        a.split_ratio as splitRatio,
        case max(a.item_code) when '1' then abs(sum(a.num) * d.price) when '2' then abs(sum(a.num) * c.price) end sellPriceAll,
        case a.item_code when '1' then d.split_price when '2' then c.split_price end splitPrice,
        case max(a.item_code) when '1' then abs(sum(a.num) * d.last_buy_price) when '2' then abs(sum(a.num) * c.last_buy_price) end buyPriceAll,
        case max(a.item_code) when '1' then d.spec when '2' then c.spec end spec,
        max(a.item_name) as itemName,
        max(a.unit_code) as unitCode,
        case max(a.item_code) when '1' then d.last_buy_price when '2' then c.last_buy_price end buyPrice,
        case max(a.item_code) when '1' then d.price when '2' then c.price end sellPrice,
        (select c.id from base_product c where c.hosp_code = #{hospCode} and c.code = d.prod_code) as productId,
        from stro_invoicing a
        left join base_drug d on a.hosp_code = d.hosp_code and a.item_id = d.id and d.is_valid = '1'
        left join base_material c on a.item_id = c.id and a.hosp_code = c.hosp_code and c.is_valid = '1'
        where a.hosp_code = #{hospCode} and a.outin_code in ('4','5','21') and a.biz_id = #{inStroId}
        <if test="startDate != null and startDate!=''" >
            AND a.crte_time >= #{startDate}
        </if>
        <if test="startDate != null and startDate!=''" >
            <![CDATA[ AND a.crte_time <= DATE_ADD(STR_TO_DATE(#{endDate},'%Y-%m-%d'),INTERVAL 1 day)]]>
        </if>
        group by a.item_id,a.biz_id
    </select>
</mapper>
