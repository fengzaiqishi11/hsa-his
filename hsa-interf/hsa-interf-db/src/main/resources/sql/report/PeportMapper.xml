<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.hsa.module.interf.report.dao.ReportDAO">

    <!--药库实时进销存报表/按零售价-->
    <select id="queryStroInvoicingLedger" resultType="java.util.Map" parameterType="java.util.Map">
        SELECT
        a.item_id itemId,
        max(a.item_name) itemName,
        max(a.unit_code) unitCode,
        (select b.name from base_dept b where b.id = max(a.biz_id) and b.hosp_code = #{hospCode}) deptName,
        case max(a.item_code) when '1' then max(b.spec) when '2' then max(c.spec) end spec,
        case max(a.item_code) when '1' then max(b.code) when '2' then max(c.code) end drugCode,
        ifnull((select d.up_sell_price_all/d.up_surplus_num from stro_invoicing d where d.item_id = a.item_id and d.id = min(a.id)),0)upSellPrice,
        (select d.sell_price from stro_invoicing d where d.item_id = a.item_id and d.hosp_code = #{hospCode} and d.id = max(a.id)) sellPrice,
        (select d.surplus_num from stro_invoicing d where d.item_id = a.item_id and d.hosp_code = #{hospCode} and d.id = max(a.id)) num,
        (select d.sell_price_all from stro_invoicing d where d.item_id = a.item_id and d.hosp_code = #{hospCode} and d.id = max(a.id)) sellPriceAll,
        (select d.up_surplus_num from stro_invoicing d where d.item_id = a.item_id and d.hosp_code = #{hospCode} and d.id = min(a.id)) upNum,
        ifnull((select d.up_sell_price_all from stro_invoicing d where d.item_id = a.item_id and d.hosp_code = #{hospCode} and d.id = min(a.id)),0) upSellPriceAll,
        sum(if( a.outin_code='2',a.sell_price * a.num,0)) stroInNumPriceAll,
        sum(if( a.outin_code='2',a.num,0)) stroInNum,
        sum(if( a.outin_code='3',a.sell_price * a.num,0)) returnSuplPriceAll,
        sum(if( a.outin_code='3',a.num,0))  returnSuplPriceNum,
        sum(if( a.outin_code='4',a.sell_price * a.num,0)) stroToDeptPriAll,
        sum(if( a.outin_code='4',a.num,0)) stroToDeptPriNum,
        sum(if( a.outin_code='5',a.sell_price * a.num,0)) stroToPharPriAll,
        sum(if( a.outin_code='5',a.num,0)) stroToPharPriNum,
        sum(if( a.outin_code='8',a.sell_price * a.num,0)) reportLossesPriAll,
        sum(if( a.outin_code='8',a.num,0)) reportLossesNum,
        sum(if( a.outin_code='21',a.sell_price * a.num,0)) pharReturnStroPriAll,
        sum(if( a.outin_code='21',a.num,0)) pharReturnStroNum,
        sum(if( a.outin_code='24' and a.sell_price_all > a.up_sell_price_all,a.sell_price_all - a.up_sell_price_all,0)) adjustProfitPriAll,
        sum(if( a.outin_code='24' and a.sell_price_all &lt; a.up_sell_price_all, a.sell_price_all - a.up_sell_price_all,0)) adjustLossPriAll,
        sum(if( a.outin_code='7' and a.num &lt; 0,a.sell_price * a.num,0)) takeStockSubtractPriAll,
        sum(if( a.outin_code='7' and a.num &lt; 0,a.num,0)) takeStockSubtractNum,
        sum(if( a.outin_code='7' and a.num > 0,a.sell_price * a.num,0)) takeStockAddPriAll,
        sum(if( a.outin_code='7' and a.num > 0, a.num,0)) takeStockAddNum
        FROM
        stro_invoicing a
        left join base_drug b on a.item_id = b.id and a.hosp_code = b.hosp_code and a.item_code = "1"
        left join base_material c on a.item_id = c.id and a.hosp_code = c.hosp_code and a.item_code = "2"
        where a.hosp_code = #{hospCode}
        and a.outin_code in ('2','3','4','5','7','8','21','24')
        and a.biz_id in (select p.id from base_dept p where p.type_code in ("13","3") and p.hosp_code = #{hospCode})
        <if test="drugType != null and drugType != ''">
            and b.type_code = #{drugType}
        </if>
        <if test="materialType != null and materialType != ''">
            and c.type_code = #{materialType}
        </if>
        <if test="bizId != null and bizId != ''">
            and a.biz_id = #{bizId}
        </if>
        /*开始日期*/
        <if test="startDate != null">
            and date(a.crte_time) &gt;=date(#{startDate})
        </if>
        /*结束日期*/
        <if test="endDate != null">
            and date(a.crte_time) &lt;= date(#{endDate})
        </if>
        <if test="keyword != null and keyword != ''">
            and (
            a.item_name like concat('%', #{keyword}, '%')
            or b.usual_pym like concat('%', #{keyword}, '%')
            or b.usual_wbm like concat('%', #{keyword}, '%')
            or c.pym like concat('%', #{keyword}, '%')
            or c.wbm like concat('%', #{keyword}, '%'))
        </if>
        group by a.item_id
    </select>
    <!--药库实时进销存报表/按购进价-->
    <select id="queryStroInvoicingLedgerBuy" resultType="java.util.Map" parameterType="java.util.Map">
        SELECT
        a.item_id itemId,
        max(a.item_name) itemName,
        max(a.unit_code) unitCode,
        (select b.name from base_dept b where b.id = max(a.biz_id) and b.hosp_code = #{hospCode}) deptName,
        case max(a.item_code) when '1' then max(b.spec) when '2' then max(c.spec) end spec,
        case max(a.item_code) when '1' then max(b.code) when '2' then max(c.code) end drugCode,
        ifnull((select d.up_buy_price_all/d.up_surplus_num from stro_invoicing d where d.item_id = a.item_id and d.id = min(a.id)),0)upSellPrice,
        (select d.buy_price from stro_invoicing d where d.item_id = a.item_id and d.hosp_code = #{hospCode} and d.id = max(a.id)) sellPrice,
        (select d.surplus_num from stro_invoicing d where d.item_id = a.item_id and d.hosp_code = #{hospCode} and d.id = max(a.id)) num,
        (select d.buy_price_all from stro_invoicing d where d.item_id = a.item_id and d.hosp_code = #{hospCode} and d.id = max(a.id)) sellPriceAll,
        (select d.up_surplus_num from stro_invoicing d where d.item_id = a.item_id and d.hosp_code = #{hospCode} and d.id = min(a.id)) upNum,
        ifnull((select d.up_buy_price_all from stro_invoicing d where d.item_id = a.item_id and d.hosp_code = #{hospCode} and d.id = min(a.id)),0) upSellPriceAll,
        sum(if( a.outin_code='2',a.buy_price * a.num,0)) stroInNumPriceAll,
        sum(if( a.outin_code='2',a.num,0)) stroInNum,
        sum(if( a.outin_code='3',a.buy_price * a.num,0)) returnSuplPriceAll,
        sum(if( a.outin_code='3',a.num,0))  returnSuplPriceNum,
        sum(if( a.outin_code='4',a.buy_price * a.num,0)) stroToDeptPriAll,
        sum(if( a.outin_code='4',a.num,0)) stroToDeptPriNum,
        sum(if( a.outin_code='5',a.buy_price * a.num,0)) stroToPharPriAll,
        sum(if( a.outin_code='5',a.num,0)) stroToPharPriNum,
        sum(if( a.outin_code='8',a.buy_price * a.num,0)) reportLossesPriAll,
        sum(if( a.outin_code='8',a.num,0)) reportLossesNum,
        sum(if( a.outin_code='21',a.buy_price * a.num,0)) pharReturnStroPriAll,
        sum(if( a.outin_code='21',a.num,0)) pharReturnStroNum,
        sum(if( a.outin_code='24' and a.buy_price_all > a.up_buy_price_all,a.buy_price_all - a.up_buy_price_all,0)) adjustProfitPriAll,
        sum(if( a.outin_code='24' and a.buy_price_all &lt; a.up_buy_price_all, a.buy_price_all - a.up_buy_price_all,0)) adjustLossPriAll,
        sum(if( a.outin_code='7' and a.num &lt; 0,a.buy_price * a.num,0)) takeStockSubtractPriAll,
        sum(if( a.outin_code='7' and a.num &lt; 0,a.num,0)) takeStockSubtractNum,
        sum(if( a.outin_code='7' and a.num > 0,a.buy_price * a.num,0)) takeStockAddPriAll,
        sum(if( a.outin_code='7' and a.num > 0, a.num,0)) takeStockAddNum
        FROM
        stro_invoicing a
        left join base_drug b on a.item_id = b.id and a.hosp_code = b.hosp_code and a.item_code = "1"
        left join base_material c on a.item_id = c.id and a.hosp_code = c.hosp_code and a.item_code = "2"
        where a.hosp_code = #{hospCode}
        and a.outin_code in ('2','3','4','5','7','8','21','24')
        and a.biz_id in (select p.id from base_dept p where p.type_code in ("13","3") and p.hosp_code = #{hospCode})
        <if test="drugType != null and drugType != ''">
            and b.type_code = #{drugType}
        </if>
        <if test="materialType != null and materialType != ''">
            and c.type_code = #{materialType}
        </if>
        <if test="bizId != null and bizId != ''">
            and a.biz_id = #{bizId}
        </if>
        /*开始日期*/
        <if test="startDate != null">
            and date(a.crte_time) &gt;=date(#{startDate})
        </if>
        /*结束日期*/
        <if test="endDate != null">
            and date(a.crte_time) &lt;= (#{endDate})
        </if>

        <if test="keyword != null and keyword != ''">
            and (
            a.item_name like concat('%', #{keyword}, '%')
            or b.usual_pym like concat('%', #{keyword}, '%')
            or b.usual_wbm like concat('%', #{keyword}, '%')
            or c.pym like concat('%', #{keyword}, '%')
            or c.wbm like concat('%', #{keyword}, '%'))
        </if>
        group by a.item_id
    </select>


    <!--药房实时进销存报表/按零售价-->
    <select id="queryPharInvoicingLedger" resultType="java.util.Map" parameterType="java.util.Map">
        SELECT
       a.*
        FROM
        stro_invoicing a
        left join base_drug b on a.item_id = b.id and a.hosp_code = b.hosp_code and a.item_code = "1"
        left join base_material c on a.item_id = c.id and a.hosp_code = c.hosp_code and a.item_code = "2"
        where a.outin_code in ( '7', '8', '20', '23', '25','6', '27', '28' )
        and a.biz_id in (select p.id from base_dept p where p.type_code in ("4","5") and p.hosp_code = '1000001')
        group by a.item_id
    </select>
    <!--药房实时进销存报表/按购进价-->
    <select id="queryPharInvoicingLedgerBuy" resultType="java.util.Map" parameterType="java.util.Map">
        SELECT
        a.item_id itemId,
        max(a.item_name) itemName,
        max(a.unit_code) unitCode,
        (select b.name from base_dept b where b.id = max(a.biz_id) and b.hosp_code = #{hospCode}) deptName,
        case max(a.item_code) when '1' then max(b.spec) when '2' then max(c.spec) end spec,
        case max(a.item_code) when '1' then max(b.code) when '2' then max(c.code) end drugCode,
        ifnull((select d.up_buy_price_all/d.up_surplus_num from stro_invoicing d where d.item_id = a.item_id and d.hosp_code = #{hospCode} and d.id = min(a.id)),0)upSellPrice,
        (select d.buy_price from stro_invoicing d where d.item_id = a.item_id and d.hosp_code = #{hospCode} and d.id = max(a.id)) sellPrice,
        (select d.surplus_num from stro_invoicing d where d.item_id = a.item_id and d.hosp_code = #{hospCode} and d.id = max(a.id)) num,
        (select d.buy_price_all from stro_invoicing d where d.item_id = a.item_id and d.hosp_code = #{hospCode} and d.id = max(a.id)) sellPriceAll,
        (select d.up_surplus_num from stro_invoicing d where d.item_id = a.item_id and d.hosp_code = #{hospCode} and d.id = min(a.id)) upNum,
        ifnull((select d.up_buy_price_all from stro_invoicing d where d.item_id = a.item_id and d.hosp_code = #{hospCode} and d.id = min(a.id)),0) upSellPriceAll,
        sum(if( a.outin_code='20',a.buy_price * a.num,0)) pharInNumPriceAll,    /**药房入库确认总金额**/
        sum(if( a.outin_code='20',a.num,0)) pharInNum,                           /**药房入库确认总数量**/
        sum(if( a.outin_code='8',a.buy_price * a.num,0)) reportLossesPriAll,    /**药房报损总金额**/
        sum(if( a.outin_code='8',a.num,0)) reportLossesNum,                      /**药房报损总数量**/
        sum(if( a.outin_code='6',a.buy_price * a.num,0)) pharReturnStroPriAll, /**药房退药库库总金额**/
        sum(if( a.outin_code='6',a.num,0)) pharReturnStroNum,                   /**药房退药库总数量**/
        sum(if( a.outin_code='7' and a.num &lt; 0,a.buy_price * a.num,0)) takeStockSubtractPriAll,  /**药房盘亏总金额**/
        sum(if( a.outin_code='7' and a.num &lt; 0,a.num,0)) takeStockSubtractNum,                    /**药房盘亏总数量**/
        sum(if( a.outin_code='7' and a.num > 0,a.buy_price * a.num,0)) takeStockAddPriAll, /**药房盘盈总金额**/
        sum(if( a.outin_code='7' and a.num > 0, a.num,0)) takeStockAddNum,                   /**药房盘盈总数量**/
        sum(if((a.outin_code='23' or a.outin_code='25'),a.buy_price * a.num,0)) outSalesPriAll,    /**门诊销售总金额**/
        sum(if((a.outin_code='23' or a.outin_code='25'),a.num,0)) outSalesNum,                  /**门诊销售总数量**/
        sum(if((a.outin_code='27' or a.outin_code='28'),a.buy_price * a.num,0)) inSalesPriAll,     /**住院销售总金额**/
        sum(if((a.outin_code='27' or a.outin_code='28'),a.num,0)) inSalesNum                   /**住院销售总数量**/
        FROM
        stro_invoicing a
        left join base_drug b on a.item_id = b.id and a.hosp_code = b.hosp_code and a.item_code = "1"
        left join base_material c on a.item_id = c.id and a.hosp_code = c.hosp_code and a.item_code = "2"
        where a.hosp_code = #{hospCode}
        and a.outin_code in ( '7', '8', '20', '23', '25','6','27','28' )
        and a.biz_id in (select p.id from base_dept p where p.type_code in ("4","5") and p.hosp_code = #{hospCode})
        <if test="drugType != null and drugType != ''">
            and b.type_code = #{drugType}
        </if>
        <if test="materialType != null and materialType != ''">
            and c.type_code = #{materialType}
        </if>
        <if test="bizId != null and bizId != ''">
            and a.biz_id = #{bizId}
        </if>
        /*开始日期*/
        <if test="startDate != null">
            and date(a.crte_time) &gt;=date(#{startDate})
        </if>
        /*结束日期*/
        <if test="endDate != null">
            and date(a.crte_time) &lt;= date(#{endDate})
        </if>
        <if test="keyword != null and keyword != ''">
            and (
            a.item_name like concat('%', #{keyword}, '%')
            or b.usual_pym like concat('%', #{keyword}, '%')
            or b.usual_wbm like concat('%', #{keyword}, '%')
            or c.pym like concat('%', #{keyword}, '%')
            or c.wbm like concat('%', #{keyword}, '%'))
        </if>
        group by a.item_id
    </select>
<select id="queryByStrSQL" parameterType="map" resultType="map">
    select a.* from (${sqlStr}) a
</select>
</mapper>
