<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.hsa.module.insure.outpt.dao.InsureReversalTradeDAO">

    <!--新增冲正交易记录-->
    <insert id="insertInsureReversalTrade" parameterType="cn.hsa.module.insure.outpt.dto.InsureReversalTradeDTO">
        insert
        into insure_reversal_trade(
            id,
            hosp_code,
            omsgid,
            oinfno,
            oinfname,
            psn_no,
            crte_id,
            crte_name,
            crte_time
        )
        values (
                   #{id},
                   #{hospCode},
                   #{omsgid},
                   #{oinfno},
                   #{oinfname},
                   #{psnNo},
                   #{crteId},
                   #{crteName},
                   #{crteTime}
               )
    </insert>

    <!--冲正交易查询-->
    <select id="queryReversalTradePage" resultType="cn.hsa.module.insure.outpt.dto.InsureReversalTradeDTO">
        SELECT
        e.insure_reg_code,
        t.aac001 as psnNo,
        (select aac003 from insure_individual_basic c where c.id = t.mib_id) as psnName,
        e.crte_time,
        e.omsgid,
        e.oinfno,
        l.name oinfname
        FROM
        insure_individual_settle e,
        insure_individual_visit t,
        sys_code_detail l
        WHERE
        e.hosp_code = t.hosp_code
        AND e.visit_id = t.visit_id
        AND e.hosp_code = l.hosp_code
        AND e.oinfno = l.value
        AND l.c_code = 'YBCZLX'
        AND e.hosp_code = #{hospCode}
        <if test="psnNo != null and psnNo != ''">
            AND t.aac001 like concat('%',#{psnNo},'%')
        </if>
        <if test="oinfno != null and oinfno != ''">
            AND e.oinfno = #{oinfno}
        </if>
        <if test="startDate != null and startDate != ''">
            and e.crte_time > STR_TO_DATE(#{startDate},'%Y-%m-%d')
        </if>
        <if test="endDate != null and endDate != ''">
            and e.crte_time &lt;= DATE_ADD(STR_TO_DATE(#{endDate},'%Y-%m-%d'),INTERVAL 1 day)
        </if>

        union all

        select
        t.insure_reg_code,
        t.aac001 as psnNo,
        (select aac003 from insure_individual_basic c where c.id = t.mib_id) as psnName,
        t.crte_time,
        t.omsgid,
        t.oinfno,
        l.name oinfname
        from
        insure_individual_visit t,
        sys_code_detail l
        where
        t.hosp_code = l.hosp_code
        AND t.oinfno = l.value
        AND l.c_code = 'YBCZLX'
        AND t.hosp_code = #{hospCode}
        <if test="psnNo != null and psnNo != ''">
            AND t.aac001 like concat('%',#{psnNo},'%')
        </if>
        <if test="oinfno != null and oinfno != ''">
            AND t.oinfno = #{oinfno}
        </if>
        <if test="startDate != null and startDate != ''">
            and t.crte_time > STR_TO_DATE(#{startDate},'%Y-%m-%d')
        </if>
        <if test="endDate != null and endDate != ''">
            and t.crte_time &lt;= DATE_ADD(STR_TO_DATE(#{endDate},'%Y-%m-%d'),INTERVAL 1 day)
        </if>
    </select>

    <!--结算单查询-->
    <select id="queryDataWith5261" resultType="java.util.Map">
        SELECT
        e.id,
        e.settle_id,
        e.insure_reg_code AS insureRegCode,
        e.visit_id as visitId,
        t.medicine_org_code as medicineOrgCode,
        t.medical_reg_no as  medicalRegNo,
        t.is_hospital as isHospital,
        t.medical_reg_no AS mdtrtId,
        e.insureSettleId AS setlId,
        e.settle_id settleId,
        e.settle_id,
        t.aka130 as med_type,
        t.aac001 AS psnNo,
        c.aac003 AS psnName,
        c.aac004 AS sex,
        c.aac002 as idCard,
        c.aac006 AS birthday,
        e.crte_time AS crteTime,
        t.visit_drpt_name as visitDrptName,
        e.person_price as personPrice,
        e.total_price,
        e.crte_time
        FROM
        insure_individual_settle e,
        insure_individual_visit t,
        insure_individual_basic c
        WHERE
        e.hosp_code = t.hosp_code
        AND e.visit_id = t.visit_id
        AND c.hosp_code = t.hosp_code
        and e.state ='0'
        AND c.id = t.mib_id
        AND t.hosp_code = #{hospCode}
        and e.insureSettleId is not null
        <if test="keyword != null and keyword != ''">
            and  ( c.aac003 like concat('%',#{keyword},'%')
            or t.medical_reg_no like concat('%',#{keyword},'%')
            or  e.insureSettleId like concat('%',#{keyword},'%')
            )
        </if>
        <if test="startDate != null and startDate != ''">
            and date(e.crte_time) &gt;= date(#{startDate})
        </if>
        <if test="endDate != null and endDate != ''">
            and date(e.crte_time) &lt;= date(#{endDate})
        </if>
        <!--业务类型选择-->
        <if test="isHospital != null and isHospital != ''">
            and  t.is_hospital =#{isHospital}
        </if>
        order by e.crte_time desc
    </select>

    <!--医药机构费用结算对总账查询-->
    <select id="queryDataWith3201" resultType="java.util.Map">
        SELECT
        A.insureRegCode AS insureRegCode,
        A.type,
        A.insutype AS insutype,
        A.is_hospital AS is_hospital,
        A.clr_type AS clr_type,
        A.clr_optins AS clr_optins,
        sum( A.person_price ) AS person_price,
        A.medicine_org_code fixmedins_code,
        sum( A.medfee_sumamt ) AS medfee_sumamt,
        sum( A.fund_pay_sumamt ) AS fund_pay_sumamt,
        sum( A.acct_pay ) AS acct_pay,
        count( 1 ) AS fixmedins_setl_cnt
        FROM
        (
        SELECT DISTINCT
        ( CONCAT( e.settle_id, e.visit_id ) ) se_vi_id,
        IF
        (
        LEFT ( e.insure_reg_code, 4 ) = LEFT ( t.insuplc_admdvs, 4 ),
        '本市参保',
        IF
        (
        LEFT ( e.insure_reg_code, 4 ) != LEFT ( t.insuplc_admdvs, 4 )
        AND LEFT ( e.insure_reg_code, 2 ) = LEFT ( t.insuplc_admdvs, 2 ),
        '省内异地',
        '跨省异地'
        )
        ) type,
        c.aac003 AS psnName,
        e.insure_reg_code AS insureRegCode,
        t.aac001 AS psn_no,
        e.settle_id,
        e.visit_id,
        t.medical_reg_no AS mdtrt_id,
        e.insureSettleId AS setl_id,
        c.aae140 AS insutype,
        t.is_hospital,
        e.clr_type,
        IF
        ( e.state = '0', '0', '1' ) AS refd_setl_flag,
        e.state,
        e.clr_optins,
        t.insure_reg_code AS setl_optins,
        e.total_price AS medfee_sumamt,
        case
        when t.aka130 = '2102' then e.insure_price - e.personal_price - e.rests_price
        when t.aka130 = '990101' then e.insure_price - e.personal_price - e.hosp_price
        else e.insure_price - e.personal_price end as fund_pay_sumamt,
        e.person_price,
        e.personal_price AS acct_pay,
        t.medicine_org_code
        FROM
        insure_individual_settle e,
        insure_individual_visit t,
        insure_individual_basic c
        WHERE
        e.hosp_code = t.hosp_code
        AND e.visit_id = t.visit_id
        AND c.hosp_code = t.hosp_code
        AND c.id = t.mib_id
        AND c.aae140 IS NOT NULL
        AND e.settle_state = '1'
        AND e.insureSettleId IS NOT NULL
        AND e.insure_reg_code = #{insureRegCode}
        AND e.hosp_code = #{hospCode}
        AND e.insure_price > 0
        <if test="psnNo != null and psnNo != ''">
            AND t.aac001 like concat('%',#{psnNo},'%')
        </if>

        /*开始日期*/
        <if test="startDate != null and startDate != '' ">
            and date(e.crte_time) &gt;= date(#{startDate})
        </if>
        /*结束日期*/
        <if test="endDate != null and endDate != ''">
            and date(e.crte_time) &lt;= date(#{endDate})
        </if>
        <if test="state != null and state != ''">
            and e.state = '0'
        </if>
        GROUP BY
        se_vi_id
        ) A
        GROUP BY
        A.insutype,
        <if test="insureRegCode != 369900">
            A.is_hospital,
        </if>
        A.clr_type,
        A.type,
        A.clr_optins,
        A.medicine_org_code
        ORDER BY
        A.type
    </select>

    <select id="getHisReckonInfo" resultType="java.util.Map">
        SELECT
        max(e.insure_reg_code) as insureRegCode,
        t.medicine_org_code fixmedins_code,
        e.clr_type,
        e.clr_way,
        e.clr_optins,
        sum(e.person_price) as person_price,
        sum(e.total_price) as medfee_sumamt,
        (sum(e.insure_price) - sum(e.personal_price)) as fund_pay_sumamt,
        sum(e.personal_price) as acct_pay,
        count(1) as fixmedins_setl_cnt
        FROM
        insure_individual_settle e,
        insure_individual_visit t
        WHERE
        e.hosp_code = t.hosp_code
        AND e.visit_id = t.visit_id
        AND e.settle_state = '1'
        and e.insureSettleId is not null
        and date(e.crte_time) &gt;= date(#{startDate})
        and date(e.crte_time) &lt;= date(#{endDate})
        and e.clr_type = #{clrType}
        and e.clr_way = #{clrWay}
        and e.insure_reg_code = #{insureRegCode}
        <if test="state != null and state != ''">
            and e.state = '0'
        </if>
        group by e.clr_type,e.clr_way,t.medicine_org_code
    </select>

    <!--医药机构费用结算对明细账查询-->
    <select id="queryDataWith3202" resultType="java.util.Map">
        SELECT DISTINCT
        ( CONCAT( e.settle_id, e.visit_id ) ) se_vi_id,
        IF
        (
        LEFT ( e.insure_reg_code, 4 ) = LEFT ( t.insuplc_admdvs, 4 ),
        '本市参保',
        IF
        (
        LEFT ( e.insure_reg_code, 4 ) != LEFT ( t.insuplc_admdvs, 4 )
        AND LEFT ( e.insure_reg_code, 2 ) = LEFT ( t.insuplc_admdvs, 2 ),
        '省内异地',
        '跨省异地'
        )
        ) type,
        c.aac003 AS psnName,
        e.insure_reg_code AS insureRegCode,
        t.aac001 AS psn_no,
        e.settle_id,
        e.visit_id,
        t.medical_reg_no AS mdtrt_id,
        e.insureSettleId AS setl_id,
        c.aae140 AS insutype,
        t.is_hospital,
        e.clr_type,
        IF
        ( e.state = '0', '0', '1' ) AS refd_setl_flag,
        e.state,
        e.clr_optins,
        t.insure_reg_code AS setl_optins,
        e.total_price AS medfee_sumamt,
        case
        when t.aka130 = '2102' then e.insure_price - e.personal_price - e.rests_price
        when t.aka130 = '990101' then e.insure_price - e.personal_price - e.hosp_price
        else e.insure_price - e.personal_price end as fund_pay_sumamt,
        e.personal_price AS acct_pay
        FROM
        insure_individual_settle e,
        insure_individual_visit t,
        insure_individual_basic c
        WHERE
        e.hosp_code = t.hosp_code
        AND e.visit_id = t.visit_id
        AND c.hosp_code = t.hosp_code
        AND c.id = t.mib_id
        AND c.aae140 IS NOT NULL
        AND e.settle_state = '1'
        AND e.insureSettleId IS NOT NULL
        AND e.insure_reg_code = #{insureRegCode}
        AND e.hosp_code = #{hospCode}
        AND e.insure_price > 0
        <if test="psnNo != null and psnNo != ''">
            AND t.aac001 like concat('%',#{psnNo},'%')
        </if>
        <if test="insureRegCode != null and insureRegCode != ''">
            AND e.insure_reg_code = #{insureRegCode}
        </if>
        /*开始日期*/
        <if test="startDate != null and startDate != '' ">
            and date(e.crte_time) &gt;= date(#{startDate})
        </if>
        /*结束日期*/
        <if test="endDate != null and endDate != ''">
            and date(e.crte_time) &lt;= date(#{endDate})
        </if>
        <if test="clrType != null and clrType != ''">
            and e.clr_type = #{clrType}
        </if>
        <if test="state != null and state != ''">
            and e.state = '0'
        </if>
        <if test="clrOptins != null and clrOptins != ''">
            and e.clr_optins = #{clrOptins}
        </if>

        GROUP BY se_vi_id
    </select>

    <!--对帐单打印查询-->
    <select id="queryStatementInfo" resultType="java.util.Map" parameterType="java.util.Map">
        SELECT
        A.insureRegCode AS insureRegCode,
        A.medicine_org_code medicineOrgCode,
        CASE
        WHEN A.type = '本市参保' THEN
        '0' ELSE '1'
        END isRemote,
        A.insutype aae140,
        A.aka130,
        A.aka130Name ,
        count( 1 ) AS personNum,
        ROUND( sum( A.medfee_sumamt ), 2 ) medfeeSumamt,
        ROUND(
        sum( A.plan_price ) + sum( A.serious_price ) + sum( A.civil_price ) + sum( A.acct_pay ),
        2
        ) planSumPrice,
        ROUND( sum( A.plan_price ) + sum( A.acct_pay ), 2 ) planCXHJSumPrice,
        ROUND( sum( A.person_price ), 2 ) personPrice,
        ROUND( sum( A.plan_price ), 2 ) planPrice,
        ROUND( sum( A.serious_price ), 2 ) seriousPrice,
        ROUND( sum( A.civil_price ), 2 ) civilPrice,
        ROUND( sum( A.acct_pay ), 2 ) personalPrice,
        ROUND( sum( A.rests_price ), 2 ) restsPrice,
        ROUND( sum( A.maf_pay ), 2 ) mafPay,
        ROUND( sum( A.retire_price ), 2 ) retirePrice
        FROM
        (
        SELECT DISTINCT
        ( CONCAT( e.settle_id, e.visit_id ) ) se_vi_id,
        IF
        (
        LEFT ( e.insure_reg_code, 4 ) = LEFT ( t.insuplc_admdvs, 4 ),
        '本市参保',
        IF
        (
        LEFT ( e.insure_reg_code, 4 ) != LEFT ( t.insuplc_admdvs, 4 )
        AND LEFT ( e.insure_reg_code, 2 ) = LEFT ( t.insuplc_admdvs, 2 ),
        '省内异地',
        '跨省异地'
        )
        ) type,

        e.insure_reg_code AS insureRegCode,
        e.settle_id,
        e.visit_id,
        e.insureSettleId AS setl_id,
        e.clr_type,
        IF
        ( e.state = '0', '0', '1' ) AS refd_setl_flag,
        e.state,
        e.clr_optins,
        e.total_price AS medfee_sumamt,
        ( e.insure_price - e.personal_price ) AS fund_pay_sumamt,
        e.personal_price AS acct_pay,
        e.person_price,
        e.plan_price,
        e.serious_price,
        e.civil_price,
        e.retire_price,
        e.hosp_price,
        e.rests_price,
        e.maf_pay,
        t.aac001 AS psn_no,
        t.medicine_org_code,
        t.aka130,
        t.aka130_name aka130Name,
        t.medical_reg_no AS mdtrt_id,
        t.is_hospital,
        t.insure_reg_code AS setl_optins,
        c.aac003 AS psnName,
        c.aae140 AS insutype
        FROM
        insure_individual_settle e,
        insure_individual_visit t,
        insure_individual_basic c
        WHERE
        e.hosp_code = t.hosp_code
        AND e.visit_id = t.visit_id
        AND c.hosp_code = t.hosp_code
        AND c.id = t.mib_id
        AND c.aae140 IS NOT NULL
        AND e.settle_state = '1'
        AND e.insureSettleId IS NOT NULL
        AND e.state = '0'
        AND e.insure_reg_code = #{insureRegCode}
        AND e.hosp_code = #{hospCode}
        AND ifnull(t.is_one_settle,0) != '1'
        AND e.insure_price > 0
        <if test="aae140 != null and aae140 != '' ">
            and c.aae140 = #{aae140}
        </if>
        /*开始日期*/
        <if test="startDate != null and startDate != '' ">
            and date(e.crte_time) &gt;= date(#{startDate})
        </if>
        /*结束日期*/
        <if test="endDate != null and endDate != ''">
            and date(e.crte_time) &lt;= date(#{endDate})
        </if>

        AND t.aka130 in
        <foreach collection="list" item="item" separator="," open="(" close=")">
            #{item}
        </foreach>
        GROUP BY
        se_vi_id
        ) A group by isRemote
    </select>

    <!--合计-->
    <select id="getStatementSumInfo" resultType="java.util.Map" parameterType="java.util.Map">
        SELECT
        count( 1 ) AS personNum,
        ROUND( sum( A.medfee_sumamt ), 2 ) medfeeSumamt,
        ROUND(
        sum( A.plan_price ) + sum( A.serious_price ) + sum( A.civil_price ) + sum( A.acct_pay ),
        2
        ) planSumPrice,
        ROUND( sum( A.plan_price ) + sum( A.acct_pay ), 2 ) planCXHJSumPrice,
        ROUND( sum( A.person_price ), 2 ) personPrice,
        ROUND( sum( A.plan_price ), 2 ) planPrice,
        ROUND( sum( A.serious_price ), 2 ) seriousPrice,
        ROUND( sum( A.civil_price ), 2 ) civilPrice,
        ROUND( sum( A.acct_pay ), 2 ) personalPrice,
        ROUND( sum( A.rests_price ), 2 ) restsPrice,
        ROUND( sum( A.maf_pay ), 2 ) mafPay,
        ROUND( sum( A.retire_price ), 2 ) retirePrice
        FROM
        (
        SELECT DISTINCT
        ( CONCAT( e.settle_id, e.visit_id ) ) se_vi_id,
        IF
        (
        LEFT ( e.insure_reg_code, 4 ) = LEFT ( t.insuplc_admdvs, 4 ),
        '本市参保',
        IF
        (
        LEFT ( e.insure_reg_code, 4 ) != LEFT ( t.insuplc_admdvs, 4 )
        AND LEFT ( e.insure_reg_code, 2 ) = LEFT ( t.insuplc_admdvs, 2 ),
        '省内异地',
        '跨省异地'
        )
        ) type,

        e.insure_reg_code AS insureRegCode,
        e.settle_id,
        e.visit_id,
        e.insureSettleId AS setl_id,
        e.clr_type,
        IF
        ( e.state = '0', '0', '1' ) AS refd_setl_flag,
        e.state,
        e.clr_optins,
        e.total_price AS medfee_sumamt,
        ( e.insure_price - e.personal_price ) AS fund_pay_sumamt,
        e.personal_price AS acct_pay,
        e.person_price,
        e.plan_price,
        e.serious_price,
        e.civil_price,
        e.retire_price,
        e.hosp_price,
        e.rests_price,
        e.maf_pay,
        t.aac001 AS psn_no,
        t.medicine_org_code,
        t.aka130,
        t.aka130_name aka130Name,
        t.medical_reg_no AS mdtrt_id,
        t.is_hospital,
        t.insure_reg_code AS setl_optins,
        c.aac003 AS psnName,
        c.aae140 AS insutype
        FROM
        insure_individual_settle e,
        insure_individual_visit t,
        insure_individual_basic c
        WHERE
        e.hosp_code = t.hosp_code
        AND e.visit_id = t.visit_id
        AND c.hosp_code = t.hosp_code
        AND c.id = t.mib_id
        AND c.aae140 IS NOT NULL
        AND e.settle_state = '1'
        AND e.insureSettleId IS NOT NULL
        AND e.state = '0'
        AND ifnull(t.is_one_settle,0) != '1'
        AND e.insure_price > 0
        AND e.insure_reg_code = #{insureRegCode}
        AND e.hosp_code = #{hospCode}
        <if test="aae140 != null and aae140 != '' ">
            and c.aae140 = #{aae140}
        </if>
        /*开始日期*/
        <if test="startDate != null and startDate != '' ">
            and date(e.crte_time) &gt;= date(#{startDate})
        </if>
        /*结束日期*/
        <if test="endDate != null and endDate != ''">
            and date(e.crte_time) &lt;= date(#{endDate})
        </if>
        AND t.aka130 in
        <foreach collection="list" item="item" separator="," open="(" close=")">
            #{item}
        </foreach>
        GROUP BY
        se_vi_id
        ) A
    </select>

    <select id="queryDeclareInfosPage" resultType="java.util.Map" parameterType="java.util.Map">
        SELECT DISTINCT
        c.aac003 AS psnName,
        c.aac002 AS idCard,
        c.bka035_name AS psnType,
        c.aka130_name AS medTypeName,
        c.bka008 insureUnit,
        tt.out_dept_name outDeptName,
        DATE_FORMAT(tt.in_time,'%Y-%m-%d') AS inTime,
        DATE_FORMAT(tt.out_time,'%Y-%m-%d') AS outTime,
        tt.in_no AS inNo,
        tt.out_disease_name outDiseaseName,
        IF
        (
        LEFT ( tt.in_time, 10 ) = LEFT ( tt.out_time, 10 ),
        1,
        DATEDIFF( tt.out_time, tt.in_time )
        ) AS inDay,
        DATE_FORMAT(e.crte_time,'%Y-%m-%d %H:%i:%S') AS crteTime,
        DATE_FORMAT(e.crte_time,'%Y-%m-%d') AS crteDate,
        e.total_price AS totalPrice,
        e.portion_price AS portionPrice,
        e.starting_price AS startingPrice,
        e.insure_price AS insurePrice,
        e.plan_account_price AS planAccountPrice,
        e.plan_price AS planPrice,
        e.serious_price AS seriousPrice,
        e.civil_price AS civilPrice,
        e.retire_price AS retirePrice,
        e.personal_price AS personalPrice,
        e.person_price AS personPrice,
        e.hosp_price AS hospPrice,
        e.rests_price AS restsPrice,
        ifnull(e.maf_pay,0.00) AS mafPay,
        ( e.insure_price - e.personal_price ) AS planSumPrice,
        e.clr_optins AS clrOptins,
        e.medicine_org_code AS medicineOrgCode,
        t.insure_reg_code AS setlOptins,
        t.aac001 AS psnNo,
        t.medical_reg_no AS mdtrtId,
        t.is_hospital AS isHospital,
        c.aae140 AS insutype,
        ( CONCAT( e.settle_id, e.visit_id ) ) se_vi_id,
        IF
        (
        LEFT ( e.insure_reg_code, 4 ) = LEFT ( t.insuplc_admdvs, 4 ),
        '本市参保',
        IF
        (
        LEFT ( e.insure_reg_code, 4 ) != LEFT ( t.insuplc_admdvs, 4 )
        AND LEFT ( e.insure_reg_code, 2 ) = LEFT ( t.insuplc_admdvs, 2 ),
        '省内异地',
        '跨省异地'
        )
        ) type,
        e.insure_reg_code AS insureRegCode,
        e.all_portion_price as allPortionPrice,
        e.over_self_price as overSelfPrice,
        e.preselfpay_amt as preselfpayAmt,
        e.inscp_scp_amt as inscpScpAmt,
        e.pool_prop_selfpay as poolPropSelfpay,
        t.insuplc_admdvs as insuplcAdmdvs,
        (select name from insure_dict where insure_reg_code = e.insure_reg_code and code = 'PSN_TYPE' and c.bka035 = value) as psnAttrName
        FROM
        insure_individual_settle e,
        insure_individual_visit t,
        insure_individual_basic c,
        inpt_visit tt
        WHERE
        e.hosp_code = t.hosp_code
        AND e.visit_id = t.visit_id
        AND c.hosp_code = t.hosp_code
        AND tt.hosp_code = e.hosp_code
        AND tt.id = e.visit_id
        AND c.id = t.mib_id
        AND c.aae140 IS NOT NULL
        AND e.settle_state = '1'
        AND e.insureSettleId IS NOT NULL
        AND e.state = '0'
        AND e.insure_reg_code = #{insureRegCode}
        AND e.hosp_code = #{hospCode}
        AND e.insure_price > 0
        <if test="isValidOneSettle == '1'.toString()">
            and ifnull(t.is_one_settle,'0') != '1'
        </if>
        <if test="insutype != null and insutype != '' ">
            and c.aae140 = #{insutype}
        </if>
        <if test="medType != null and medType != '' ">
            and c.aka130 = #{medType}
        </if>
        <if test="isHospital != null and isHospital != '' ">
            and t.is_hospital = #{isHospital}
        </if>
        <if test="deptId != null and deptId != '' ">
            and tt.out_dept_id = #{deptId}
        </if>
        <if test="isRemote == '0'.toString()"> <!-- 本市参保 -->
            and LEFT ( e.insure_reg_code, 4 ) = LEFT ( t.insuplc_admdvs, 4 )
        </if>
        <if test="isRemote == '1'.toString()"> <!-- 省内异地 -->
            and LEFT ( e.insure_reg_code, 4 ) != LEFT ( t.insuplc_admdvs, 4 ) and LEFT ( e.insure_reg_code, 2 ) = LEFT ( t.insuplc_admdvs, 2 )
        </if>
        <if test="isRemote == '2'.toString()"> <!-- 省外异地 -->
            and LEFT ( e.insure_reg_code, 2 ) != LEFT ( t.insuplc_admdvs, 2 )
        </if>
        /*开始日期*/
        <if test="startDate != null and startDate != '' ">
            and date(e.crte_time) &gt;= date(#{startDate})
        </if>
        /*结束日期*/
        <if test="endDate != null and endDate != ''">
            and date(e.crte_time) &lt;= date(#{endDate})
        </if>
        GROUP BY
        se_vi_id
    </select>

    <!--申报表合计费用 2102 990101-->
    <select id="querySumDeclareInfosPage" resultType="java.util.Map" parameterType="java.util.Map">
        SELECT
        A.medicineOrgCode,
        A.insuplcAdmdvs,
        A.medTypeName,
        A.insuplcAdmdvsName,
        sum( psnNum ) AS psnNum,
        sum( psnCount ) AS psnCount,
        Round(sum( thbPay ),2) AS thbPay,
        Round(sum( hospExemAmount ),2) AS hospExemAmount,
        Round(sum( governmentPay ),2) AS governmentPay,
        Round(sum( othPay ),2) AS othPay,
        Round(sum( inDay ),2) AS inDay,
        Round(sum( totalPrice ),2) AS totalPrice,
        Round(sum( portionPrice ),2) AS portionPrice,
        Round(sum( startingPrice ),2) AS startingPrice,
        Round(sum( insurePrice ),2) AS insurePrice,
        Round(sum( planAccountPrice ),2) AS planAccountPrice,
        Round(sum( planPrice ),2) AS planPrice,
        Round(sum( seriousPrice ),2) AS seriousPrice,
        Round(sum( civilPrice ),2) AS civilPrice,
        Round(sum( retirePrice ),2) AS retirePrice,
        Round(sum( personalPrice ),2) AS personalPrice,
        Round(sum( personPrice ),2) AS personPrice,
        Round(sum( hospPrice ),2) AS hospPrice,
        Round(sum( restsPrice ),2) AS restsPrice,
        Round(sum( mafPay ),2) AS mafPay,
        Round(sum( planSumPrice ),2) AS planSumPrice,
        Round(sum(allPortionPrice),2) as allPortionPrice,
        Round(sum(overSelfPrice),2) as overSelfPrice,
        Round(sum(preselfpayAmt),2) as preselfpayAmt,
        Round(sum(inscpScpAmt),2) as inscpScpAmt,
        Round(sum(poolPropSelfpay),2) as poolPropSelfpay
        FROM
        (
        SELECT DISTINCT
        e.medicine_org_code medicineOrgCode,
        IF
        (
        LEFT ( e.insure_reg_code, 4 ) = LEFT ( t.insuplc_admdvs, 4 ),
        '本市参保',
        IF
        (
        LEFT ( e.insure_reg_code, 4 ) != LEFT ( t.insuplc_admdvs, 4 )
        AND LEFT ( e.insure_reg_code, 2 ) = LEFT ( t.insuplc_admdvs, 2 ),
        '省内异地',
        '跨省异地'
        )
        ) type,
        count( 1 ) AS psnNum,
        count( c.aac002 ) AS psnCount,
        ifnull(e.oth_pay,0) AS othPay,
        e.total_price AS totalPrice,
        e.portion_price AS portionPrice,
        e.starting_price AS startingPrice,
        e.insure_price AS insurePrice,
        e.plan_account_price AS planAccountPrice,
        e.plan_price AS planPrice,
        e.serious_price AS seriousPrice,
        e.civil_price AS civilPrice,
        e.retire_price AS retirePrice,
        e.personal_price AS personalPrice,
        e.person_price AS personPrice,
        e.hosp_price AS hospPrice,
        e.rests_price AS restsPrice,
        ifnull(e.thb_pay,0) AS thbPay,
        ifnull(e.hosp_exem_amount,0) AS hospExemAmount,
        ifnull(e.government_pay,0) AS governmentPay,
        ifnull( e.maf_pay, 0 ) AS mafPay,
        case
        when t.aka130 = '2102' then e.insure_price - e.personal_price - e.rests_price
        when t.aka130 = '990101' then e.insure_price - e.personal_price - e.hosp_price
        else e.insure_price - e.personal_price end as planSumPrice,
        ( CONCAT( e.settle_id, e.visit_id ) ) se_vi_id,
        IF
        (
        LEFT ( tt.in_time, 10 ) = LEFT ( tt.out_time, 10 ),
        1,
        DATEDIFF( tt.out_time, tt.in_time )
        ) AS inDay,
        e.insure_reg_code AS insureRegCode,
        e.all_portion_price as allPortionPrice,
        e.over_self_price as overSelfPrice,
        e.preselfpay_amt as preselfpayAmt,
        e.inscp_scp_amt as inscpScpAmt,
        e.pool_prop_selfpay as poolPropSelfpay,
        t.insuplc_admdvs as insuplcAdmdvs,
        ia.admdvs_name as insuplcAdmdvsName,
        c.aka130_name AS medTypeName
        FROM
        insure_individual_settle e,
        insure_individual_visit t,
        insure_individual_basic c,
        inpt_visit tt,
        insure_admdvs ia
        WHERE
        e.hosp_code = t.hosp_code
        AND e.visit_id = t.visit_id
        AND c.hosp_code = t.hosp_code
        AND tt.hosp_code = e.hosp_code
        AND tt.id = e.visit_id
        AND c.id = t.mib_id
        AND c.aae140 IS NOT NULL
        AND e.settle_state = '1'
        AND e.insureSettleId IS NOT NULL
        AND e.state = '0'
        AND e.insure_reg_code = #{insureRegCode}
        AND e.hosp_code = #{hospCode}
        AND e.insure_price > 0
        AND t.insuplc_admdvs = ia.admdvs_code
        <if test="isValidOneSettle == '1'.toString()">
        and ifnull(t.is_one_settle,'0') != '1'
        </if>
        <if test="insutype != null and insutype != '' ">
            and c.aae140 = #{insutype}
        </if>
        <if test="medType != null and medType != '' ">
            and c.aka130 = #{medType}
        </if>
        <if test="outDeptId != null and outDeptId != '' ">
            and tt.out_dept_id = #{outDeptId}
        </if>
        <if test="isRemote == '0'.toString()"> <!-- 本市参保 -->
            and LEFT ( e.insure_reg_code, 4 ) = LEFT ( t.insuplc_admdvs, 4 )
        </if>
        <if test="isRemote == '1'.toString()"> <!-- 省内异地 -->
            and LEFT ( e.insure_reg_code, 4 ) != LEFT ( t.insuplc_admdvs, 4 ) and LEFT ( e.insure_reg_code, 2 ) = LEFT ( t.insuplc_admdvs, 2 )
        </if>
        <if test="isRemote == '2'.toString()"> <!-- 省外异地 -->
            and LEFT ( e.insure_reg_code, 2 ) != LEFT ( t.insuplc_admdvs, 2 )
        </if>
        /*开始日期*/
        <if test="startDate != null and startDate != '' ">
            and date(e.crte_time) &gt;= date(#{startDate})
        </if>
        /*结束日期*/
        <if test="endDate != null and endDate != ''">
            and date(e.crte_time) &lt;= date(#{endDate})
        </if>
        GROUP BY
        se_vi_id
        ) A GROUP BY insuplcAdmdvs,medTypeName
    </select>

    <select id="queryOutptDeclareInfosPage" resultType="java.util.Map" parameterType="java.util.Map">
        SELECT DISTINCT
        c.aac003 AS psnName,
        c.aac002 AS idCard,
        c.bka035_name AS psnType,
        c.aka130_name AS medTypeName,
        c.bka008 insureUnit,
        t.visit_icd_name visitIcdName,
        tt.dept_name deptName,
        e.total_price AS totalPrice,
        e.portion_price AS portionPrice,
        e.starting_price AS startingPrice,
        e.insure_price AS insurePrice,
        e.plan_account_price AS planAccountPrice,
        e.plan_price AS planPrice,
        e.serious_price AS seriousPrice,
        e.civil_price AS civilPrice,
        e.retire_price AS retirePrice,
        e.personal_price AS personalPrice,
        e.person_price AS personPrice,
        e.hosp_price AS hospPrice,
        e.rests_price AS restsPrice,
        e.thb_pay AS thbPay,
        ifnull(e.hosp_exem_amount,0) AS hospExemAmount,
        ifnull(e.government_pay,0) AS governmentPay,
        (e.plan_price + e.serious_price + ifnull(e.thb_pay,0) + ifnull(e.maf_pay,0) + ifnull(e.hosp_exem_amount,0) +ifnull(e.government_pay,0) + e.personal_price) AS planSumPay,
        ifnull(e.maf_pay,0.00) AS mafPay,
        ( e.insure_price - e.personal_price ) AS planSumPrice,
        e.clr_optins AS clrOptins,
        e.medicine_org_code AS medicineOrgCode,
        t.insure_reg_code AS setlOptins,
        t.aac001 AS psnNo,
        t.medical_reg_no AS mdtrtId,
        t.is_hospital AS isHospital,
        c.aae140 AS insutype,
        ( CONCAT( e.settle_id, e.visit_id ) ) se_vi_id,
        IF
        (
        LEFT ( e.insure_reg_code, 4 ) = LEFT ( t.insuplc_admdvs, 4 ),
        '本市参保',
        IF
        (
        LEFT ( e.insure_reg_code, 4 ) != LEFT ( t.insuplc_admdvs, 4 )
        AND LEFT ( e.insure_reg_code, 2 ) = LEFT ( t.insuplc_admdvs, 2 ),
        '省内异地',
        '跨省异地'
        )
        ) type,
        e.insure_reg_code AS insureRegCode,
        DATE_FORMAT(e.crte_time,'%Y-%m-%d %H:%i:%S') AS crteTime,
        DATE_FORMAT(e.crte_time,'%Y-%m-%d') AS crteDate,
        e.all_portion_price as allPortionPrice,
        e.over_self_price as overSelfPrice,
        e.preselfpay_amt as preselfpayAmt,
        e.inscp_scp_amt as inscpScpAmt,
        e.pool_prop_selfpay as poolPropSelfpay,
        t.insuplc_admdvs as insuplcAdmdvs,
        (select name from insure_dict where insure_reg_code = e.insure_reg_code and code = 'PSN_TYPE' and c.bka035 = value limit 1) as psnAttrName
        FROM
        insure_individual_settle e,
        insure_individual_visit t,
        insure_individual_basic c,
        outpt_visit tt
        WHERE
        e.hosp_code = t.hosp_code
        AND e.visit_id = t.visit_id
        AND c.hosp_code = t.hosp_code
        AND tt.hosp_code = e.hosp_code
        AND tt.id = e.visit_id
        AND c.id = t.mib_id
        AND c.aae140 IS NOT NULL
        AND e.settle_state = '1'
        AND e.insureSettleId IS NOT NULL
        AND e.state = '0'
        AND e.insure_reg_code = #{insureRegCode}
        AND e.hosp_code = #{hospCode}
        AND e.insure_price > 0
        <if test="insutype != null and insutype != '' ">
            and c.aae140 = #{insutype}
        </if>
        <if test="medType != null and medType != '' ">
            and c.aka130 = #{medType}
        </if>
        <if test="isHospital != null and isHospital != '' ">
            and t.is_hospital = #{isHospital}
        </if>
        <if test="deptId != null and deptId != '' ">
            and tt.dept_id = #{deptId}
        </if>
        <if test="isRemote == '0'.toString()"> <!-- 本市参保 -->
            and LEFT ( e.insure_reg_code, 4 ) = LEFT ( t.insuplc_admdvs, 4 )
        </if>
        <if test="isRemote == '1'.toString()"> <!-- 省内异地 -->
            and LEFT ( e.insure_reg_code, 4 ) != LEFT ( t.insuplc_admdvs, 4 ) and LEFT ( e.insure_reg_code, 2 ) = LEFT ( t.insuplc_admdvs, 2 )
        </if>
        <if test="isRemote == '2'.toString()"> <!-- 省外异地 -->
            and LEFT ( e.insure_reg_code, 2 ) != LEFT ( t.insuplc_admdvs, 2 )
        </if>
        /*开始日期*/
        <if test="startDate != null and startDate != '' ">
            and date(e.crte_time) &gt;= date(#{startDate})
        </if>
        /*结束日期*/
        <if test="endDate != null and endDate != ''">
            and date(e.crte_time) &lt;= date(#{endDate})
        </if>
        GROUP BY
        se_vi_id
    </select>

    <!--申报表合计费用（门诊）-->
    <select id="queryOutptSumDeclareInfosPage" resultType="java.util.Map" parameterType="java.util.Map">
        SELECT
        medicineOrgCode,
        insuplcAdmdvs,
        medTypeName,
        sum( psnNum ) AS psnNum,
        sum( totalPrice ) AS totalPrice,
        sum( portionPrice ) AS portionPrice,
        sum( startingPrice ) AS startingPrice,
        sum( insurePrice ) AS insurePrice,
        sum( planAccountPrice ) AS planAccountPrice,
        sum( planPrice ) AS planPrice,
        sum( seriousPrice ) AS seriousPrice,
        sum( civilPrice ) AS civilPrice,
        sum( retirePrice ) AS retirePrice,
        sum( personalPrice ) AS personalPrice,
        sum( personPrice ) AS personPrice,
        sum( hospPrice ) AS hospPrice,
        sum( restsPrice ) AS restsPrice,
        sum( thbPay ) AS thbPay,
        sum( hospExemAmount ) AS hospExemAmount,
        sum( governmentPay ) AS governmentPay,
        sum( mafPay ) AS mafPay,
        sum( planSumPrice ) AS planSumPrice,
        sum(allPortionPrice) as allPortionPrice,
        sum(overSelfPrice) as overSelfPrice,
        sum(preselfpayAmt) as preselfpayAmt,
        sum(inscpScpAmt) as inscpScpAmt,
        sum(poolPropSelfpay) as poolPropSelfpay
        FROM
        (
        SELECT DISTINCT
        count( 1 ) AS psnNum,
        IF
        (
        LEFT ( e.insure_reg_code, 4 ) = LEFT ( t.insuplc_admdvs, 4 ),
        '本市参保',
        IF
        (
        LEFT ( e.insure_reg_code, 4 ) != LEFT ( t.insuplc_admdvs, 4 )
        AND LEFT ( e.insure_reg_code, 2 ) = LEFT ( t.insuplc_admdvs, 2 ),
        '省内异地',
        '跨省异地'
        )
        ) type,
        e.medicine_org_code AS medicineOrgCode,
        e.total_price AS totalPrice,
        e.portion_price AS portionPrice,
        e.starting_price AS startingPrice,
        e.insure_price AS insurePrice,
        e.plan_account_price AS planAccountPrice,
        e.plan_price AS planPrice,
        e.serious_price AS seriousPrice,
        e.civil_price AS civilPrice,
        e.retire_price AS retirePrice,
        e.personal_price AS personalPrice,
        e.person_price AS personPrice,
        e.hosp_price AS hospPrice,
        e.rests_price AS restsPrice,
        e.thb_pay AS thbPay,
        ifnull(e.hosp_exem_amount,0) AS hospExemAmount,
        ifnull(e.government_pay,0) AS governmentPay,
        (e.plan_price + e.serious_price + ifnull(e.thb_pay,0) + ifnull(e.maf_pay,0) + ifnull(e.hosp_exem_amount,0) +ifnull(e.government_pay,0) + e.personal_price) AS planSumPay,
        ifnull(e.maf_pay,0.00) AS mafPay,
        case
        when t.aka130 = '2102' then e.insure_price - e.personal_price - e.rests_price
        when t.aka130 = '990101' then e.insure_price - e.personal_price - e.hosp_price
        else e.insure_price - e.personal_price end as planSumPrice,
        ( CONCAT( e.settle_id, e.visit_id ) ) se_vi_id,
        e.insure_reg_code AS insureRegCode,
        e.all_portion_price as allPortionPrice,
        e.over_self_price as overSelfPrice,
        e.preselfpay_amt as preselfpayAmt,
        e.inscp_scp_amt as inscpScpAmt,
        e.pool_prop_selfpay as poolPropSelfpay,
        t.insuplc_admdvs insuplcAdmdvs,
        c.aka130_name medTypeName
        FROM
        insure_individual_settle e,
        insure_individual_visit t,
        insure_individual_basic c,
        outpt_visit tt
        WHERE
        e.hosp_code = t.hosp_code
        AND e.visit_id = t.visit_id
        AND c.hosp_code = t.hosp_code
        AND tt.hosp_code = e.hosp_code
        AND tt.id = e.visit_id
        AND c.id = t.mib_id
        AND c.aae140 IS NOT NULL
        AND e.settle_state = '1'
        AND e.insureSettleId IS NOT NULL
        AND e.state = '0'
        AND e.insure_price > 0
        AND e.insure_reg_code = #{insureRegCode}
        AND e.hosp_code = #{hospCode}
        <if test="insutype != null and insutype != '' ">
            and c.aae140 = #{insutype}
        </if>
        <if test="medType != null and medType != '' ">
            and c.aka130 = #{medType}
        </if>
        <if test="outDeptId != null and outDeptId != '' ">
            and tt.out_dept_id = #{outDeptId}
        </if>
        <if test="isRemote == '0'.toString()"> <!-- 本市参保 -->
            and LEFT ( e.insure_reg_code, 4 ) = LEFT ( t.insuplc_admdvs, 4 )
        </if>
        <if test="isRemote == '1'.toString()"> <!-- 省内异地 -->
            and LEFT ( e.insure_reg_code, 4 ) != LEFT ( t.insuplc_admdvs, 4 ) and LEFT ( e.insure_reg_code, 2 ) = LEFT ( t.insuplc_admdvs, 2 )
        </if>
        <if test="isRemote == '2'.toString()"> <!-- 省外异地 -->
            and LEFT ( e.insure_reg_code, 2 ) != LEFT ( t.insuplc_admdvs, 2 )
        </if>
        /*开始日期*/
        <if test="startDate != null and startDate != '' ">
            and date(e.crte_time) &gt;= date(#{startDate})
        </if>
        /*结束日期*/
        <if test="endDate != null and endDate != ''">
            and date(e.crte_time) &lt;= date(#{endDate})
        </if>
        GROUP BY
        se_vi_id
        ) A GROUP BY insuplcAdmdvs,medTypeName
    </select>
    <select id="selectMdOrIns" resultType="java.util.Map">
        select id, hosp_code, admdvs_code, admdvs_name from insure_admdvs
        where hosp_code =#{hospCode}
    </select>
    <select id="querySettleInfo" resultType="cn.hsa.module.insure.module.dto.InsureIndividualSettleDTO">
        select id, hosp_code, visit_id, settle_id, is_hospital, visit_no, discharge_dn_code,
               insure_org_code, insure_reg_code, medicine_org_code,settleway,total_price, insure_price, plan_price,
               serious_price, civil_price,
               retire_price, personal_price, person_price, hosp_price, before_settle, last_settle, rests_price,
               assign_price, starting_price, top_price, plan_account_price, portion_price, state, settle_state,
               costbatch, aka130, bka006, injury_borth_sn, is_account,
               insureSettleId, medicalRegNo, omsgid,
               oinfno, remote_msg_id, clr_type, clr_way, clr_optins, maf_pay, hosp_exem_amount, is_cancel,
               com_pay, all_portion_price, over_self_price, preselfpay_amt, inscp_scp_amt, pool_prop_selfpay,
               acct_mulaid_pay, acct_inj_pay, ret_acct_inj_pay, government_pay, thb_pay, care_pay, low_in_pay,
               oth_pay, retired_pay, soldier_pay, retired_outpt_pay, injury_pay, hall_pay, soldier_to_pay,
               welfare_pay,
               COVID_pay, family_pay, behalf_pay, fertility_pay,psn_part_amt from insure_individual_settle  where hosp_code =#{hospCode} and
            visit_id =#{visitId} and insureSettleId =#{insureSettleId} order by crte_time desc limit 1
    </select>

    <!--一站式申报报表-->
    <select id="queryYZSDeclareInfosPage" resultType="java.util.Map" parameterType="java.util.Map">
        SELECT DISTINCT
        c.aac003 AS psnName,
        c.aac002 AS idCard,
        c.bka035_name AS psnType,
        c.bka008 insureUnit,
        tt.out_dept_name outDeptName,
        DATE_FORMAT(tt.in_time,'%Y-%m-%d') AS inTime,
        DATE_FORMAT(tt.out_time,'%Y-%m-%d') AS outTime,
        tt.in_no AS inNo,
        tt.out_disease_name outDiseaseName,
        IF
        (
        LEFT ( tt.in_time, 10 ) = LEFT ( tt.out_time, 10 ),
        1,
        DATEDIFF( tt.out_time, tt.in_time )
        ) AS inDay,
        e.total_price AS totalPrice,
        e.portion_price AS portionPrice,
        e.starting_price AS startingPrice,
        e.insure_price AS insurePrice,
        e.plan_account_price AS planAccountPrice,
        e.plan_price AS planPrice,
        e.serious_price AS seriousPrice,
        e.civil_price AS civilPrice,
        e.retire_price AS retirePrice,
        e.personal_price AS personalPrice,
        e.person_price AS personPrice,
        e.hosp_price AS hospPrice,
        e.rests_price AS restsPrice,
        e.thb_pay AS thbPay,
        ifnull(e.hosp_exem_amount,0) AS hospExemAmount,
        ifnull(e.government_pay,0) AS governmentPay,
        (e.plan_price + e.serious_price + ifnull(e.thb_pay,0) + ifnull(e.maf_pay,0) + ifnull(e.hosp_exem_amount,0) +ifnull(e.government_pay,0) + e.personal_price) AS planSumPay,
        ifnull(e.maf_pay,0.00) AS mafPay,
        ( e.insure_price - e.personal_price ) AS planSumPrice,
        e.clr_optins AS clrOptins,
        e.clr_type AS clrType,
        (select name from insure_dict where insure_reg_code = e.insure_reg_code and code = 'CLR_TYPE' and e.clr_type = value ) as clrTypeName,
        (select name from insure_dict where insure_reg_code = e.insure_reg_code and code = 'MED_TYPE' and e.aka130 = value ) as medTypeName,
        e.medicine_org_code AS medicineOrgCode,
        t.insure_reg_code AS setlOptins,
        t.aac001 AS psnNo,
        t.medical_reg_no AS mdtrtId,
        t.is_hospital AS isHospital,
        c.aae140 AS insutype,
        ( CONCAT( e.settle_id, e.visit_id ) ) se_vi_id,
        e.insure_reg_code AS insureRegCode,
        DATE_FORMAT(e.crte_time,'%Y-%m-%d %H:%i:%S') AS crteTime,
        DATE_FORMAT(e.crte_time,'%Y-%m-%d') AS crteDate,
        e.all_portion_price as allPortionPrice,
        e.over_self_price as overSelfPrice,
        e.preselfpay_amt as preselfpayAmt,
        e.inscp_scp_amt as inscpScpAmt,
        e.pool_prop_selfpay as poolPropSelfpay,
        t.insuplc_admdvs as insuplcAdmdvs,
        (select name from insure_dict where value = t.psn_idet_type and code = 'PSN_IDET_TYPE' and insure_reg_code = t.insure_reg_code and hosp_code = t.hosp_code limit 1) as psnAttrName
        FROM
        insure_individual_settle e,
        insure_individual_visit t,
        insure_individual_basic c,
        inpt_visit tt
        WHERE
        e.hosp_code = t.hosp_code
        AND e.visit_id = t.visit_id
        AND c.hosp_code = t.hosp_code
        AND c.id = t.mib_id
        AND c.aae140 IS NOT NULL
        AND e.settle_state = '1'
        AND e.insureSettleId IS NOT NULL
        AND e.state = '0'
        AND e.insure_price > 0
        AND e.insure_reg_code = #{insureRegCode}
        AND e.hosp_code = #{hospCode}
        AND t.is_one_settle = '1'
        AND e.visit_id = tt.id
        <if test="insutype != null and insutype != '' ">
            and c.aae140 = #{insutype}
        </if>
        <if test="medType != null and medType != '' ">
            and e.aka130 = #{medType}
        </if>
        <if test="isHospital != null and isHospital != '' ">
            and t.is_hospital = #{isHospital}
        </if>
        <if test="clrOptins != null and clrOptins != '' ">
            and e.clr_optins = #{clrOptins}
        </if>
        <if test="isRemote == '0'.toString()"> <!-- 本市参保 -->
            and LEFT ( e.insure_reg_code, 4 ) = LEFT ( t.insuplc_admdvs, 4 )
        </if>
        <if test="isRemote == '1'.toString()"> <!-- 省内异地 -->
            and LEFT ( e.insure_reg_code, 4 ) != LEFT ( t.insuplc_admdvs, 4 ) and LEFT ( e.insure_reg_code, 2 ) = LEFT ( t.insuplc_admdvs, 2 )
        </if>
        <if test="isRemote == '2'.toString()"> <!-- 省外异地 -->
            and LEFT ( e.insure_reg_code, 2 ) != LEFT ( t.insuplc_admdvs, 2 )
        </if>
        /*开始日期*/
        <if test="startDate != null and startDate != '' ">
            and date(e.crte_time) &gt;= date(#{startDate})
        </if>
        /*结束日期*/
        <if test="endDate != null and endDate != ''">
            and date(e.crte_time) &lt;= date(#{endDate})
        </if>
        GROUP BY
        se_vi_id
    </select>

    <select id="queryYZSSumDeclareInfosPage" resultType="java.util.Map" parameterType="java.util.Map">
        SELECT
        clrOptins,
        medicineOrgCode,
        medTypeName,
        insuplcAdmdvs,
        insuplcAdmdvsName,
        sum( psnNum ) AS psnNum,
        Round(sum( totalPrice ),2) AS totalPrice,
        Round(sum( portionPrice ),2) AS portionPrice,
        Round(sum( startingPrice ),2) AS startingPrice,
        Round(sum( insurePrice ),2) AS insurePrice,
        Round(sum( planAccountPrice ),2) AS planAccountPrice,
        Round(sum( planPrice ),2) AS planPrice,
        Round(sum( seriousPrice ),2) AS seriousPrice,
        Round(sum( civilPrice ),2) AS civilPrice,
        Round(sum( retirePrice ),2) AS retirePrice,
        Round(sum( personalPrice ),2) AS personalPrice,
        Round(sum( hospPrice ),2) AS hospPrice,
        Round(sum( restsPrice ),2) AS restsPrice,
        Round(sum( mafPay ),2) AS mafPay,
        Round(sum( planSumPrice ),2) AS planSumPrice,
        Round(sum( hospExemAmount ),2) AS hospExemAmount,
        Round(sum( planSumPay ),2) AS planSumPay,
        Round(sum( personPrice ),2) AS personPrice,
        Round(sum( thbPay ),2) AS thbPay,
        Round(sum( governmentPay ),2) AS governmentPay,
        Round(sum(allPortionPrice),2) as allPortionPrice,
        Round(sum(overSelfPrice),2) as overSelfPrice,
        Round(sum(preselfpayAmt),2) as preselfpayAmt,
        Round(sum(inscpScpAmt),2) as inscpScpAmt,
        Round(sum(poolPropSelfpay),2) as poolPropSelfpay
        FROM
        (
        SELECT DISTINCT
        count( 1 ) AS psnNum,
        count( c.aac002 ) AS psnCount,
        (select name from insure_dict where insure_reg_code = e.insure_reg_code and code = 'MED_TYPE' and e.aka130 = value ) as medTypeName,
        e.total_price AS totalPrice,
        e.portion_price AS portionPrice,
        e.starting_price AS startingPrice,
        e.insure_price AS insurePrice,
        e.plan_account_price AS planAccountPrice,
        e.plan_price AS planPrice,
        e.serious_price AS seriousPrice,
        e.civil_price AS civilPrice,
        e.retire_price AS retirePrice,
        e.personal_price AS personalPrice,
        e.person_price AS personPrice,
        e.hosp_price AS hospPrice,
        e.rests_price AS restsPrice,
        ifnull(e.thb_pay ,0)AS thbPay,
        ifnull(e.hosp_exem_amount,0) AS hospExemAmount,
        ifnull(e.government_pay,0) AS governmentPay,
        (e.plan_price + e.serious_price + ifnull(e.thb_pay,0) + ifnull(e.maf_pay,0) +ifnull(e.hosp_exem_amount,0) + ifnull(e.government_pay,0) + e.personal_price) AS planSumPay,
        ifnull( e.maf_pay, 0 ) AS mafPay,
        case
        when t.aka130 = '2102' then e.insure_price - e.personal_price - e.rests_price
        when t.aka130 = '990101' then e.insure_price - e.personal_price - e.hosp_price
        else e.insure_price - e.personal_price end as planSumPrice,
        ( CONCAT( e.settle_id, e.visit_id ) ) se_vi_id,
        e.clr_optins AS clrOptins,
        e.medicine_org_code AS medicineOrgCode,
        e.insure_reg_code AS insureRegCode,
        e.all_portion_price as allPortionPrice,
        e.over_self_price as overSelfPrice,
        e.preselfpay_amt as preselfpayAmt,
        e.inscp_scp_amt as inscpScpAmt,
        e.pool_prop_selfpay as poolPropSelfpay,
        ia.admdvs_name as insuplcAdmdvsName,
        t.insuplc_admdvs as insuplcAdmdvs
        FROM
        insure_individual_settle e,
        insure_individual_visit t,
        insure_individual_basic c,
        inpt_visit tt,
        insure_admdvs ia
        WHERE
        e.hosp_code = t.hosp_code
        AND e.visit_id = t.visit_id
        AND c.hosp_code = t.hosp_code
        AND c.id = t.mib_id
        AND c.aae140 IS NOT NULL
        AND e.settle_state = '1'
        AND e.insureSettleId IS NOT NULL
        AND e.state = '0'
        AND e.insure_reg_code = #{insureRegCode}
        AND e.insure_price > 0
        AND e.hosp_code = #{hospCode}
        AND t.is_one_settle = '1'
        AND e.visit_id = tt.id
        AND t.insuplc_admdvs = ia.admdvs_code
        <if test="insutype != null and insutype != '' ">
            and c.aae140 = #{insutype}
        </if>
        <if test="medType != null and medType != '' ">
            and e.aka130 = #{medType}
        </if>
        <if test="isHospital != null and isHospital != '' ">
            and t.is_hospital = #{isHospital}
        </if>
        <if test="clrOptins != null and clrOptins != '' ">
            and e.clr_optins = #{clrOptins}
        </if>

        <if test="isRemote == '0'.toString()"> <!-- 本市参保 -->
            and LEFT ( e.insure_reg_code, 4 ) = LEFT ( t.insuplc_admdvs, 4 )
        </if>
        <if test="isRemote == '1'.toString()"> <!-- 省内异地 -->
            and LEFT ( e.insure_reg_code, 4 ) != LEFT ( t.insuplc_admdvs, 4 ) and LEFT ( e.insure_reg_code, 2 ) = LEFT ( t.insuplc_admdvs, 2 )
        </if>
        <if test="isRemote == '2'.toString()"> <!-- 省外异地 -->
            and LEFT ( e.insure_reg_code, 2 ) != LEFT ( t.insuplc_admdvs, 2 )
        </if>
        /*开始日期*/
        <if test="startDate != null and startDate != '' ">
            and date(e.crte_time) &gt;= date(#{startDate})
        </if>
        /*结束日期*/
        <if test="endDate != null and endDate != ''">
            and date(e.crte_time) &lt;= date(#{endDate})
        </if>
        GROUP BY
        se_vi_id
        ) A
        GROUP BY insuplcAdmdvs,medTypeName
    </select>

    <select id="querySumDeclareInfos" resultType="java.util.Map" parameterType="java.util.Map">
        SELECT
        A.medicineOrgCode,
        A.insuplcAdmdvs,
        A.medTypeName,
        A.insuplcAdmdvsName,
        sum( psnNum ) AS psnNum,
        sum( psnCount ) AS psnCount,
        sum( inDay ) AS inDay,
        Round(sum( thbPay ),2) AS thbPay,
        Round(sum( hospExemAmount ),2) AS hospExemAmount,
        Round(sum( governmentPay ),2) AS governmentPay,
        Round(sum( othPay ),2) AS othPay,
        Round(sum( retiredPay ),2) AS retiredPay,
        Round(sum( totalPrice ),2) AS totalPrice,
        Round(sum( portionPrice ),2) AS portionPrice,
        Round(sum( startingPrice ),2) AS startingPrice,
        Round(sum( insurePrice ),2) AS insurePrice,
        Round(sum( planAccountPrice ),2) AS planAccountPrice,
        Round(sum( planPrice ),2) AS planPrice,
        Round(sum( seriousPrice ),2) AS seriousPrice,
        Round(sum( civilPrice ),2) AS civilPrice,
        Round(sum( retirePrice ),2) AS retirePrice,
        Round(sum( personalPrice ),2) AS personalPrice,
        Round(sum( personPrice ),2) AS personPrice,
        Round(sum( hospPrice ),2) AS hospPrice,
        Round(sum( restsPrice ),2) AS restsPrice,
        Round(sum( mafPay ),2) AS mafPay,
        Round(sum( planSumPrice ),2) AS planSumPrice,
        Round(sum(allPortionPrice),2) as allPortionPrice,
        Round(sum(overSelfPrice),2) as overSelfPrice,
        Round(sum(preselfpayAmt),2) as preselfpayAmt,
        Round(sum(inscpScpAmt),2) as inscpScpAmt,
        Round(sum(poolPropSelfpay),2) as poolPropSelfpay
        FROM
        (
        SELECT DISTINCT
        e.medicine_org_code medicineOrgCode,
        IF
        (
        LEFT ( e.insure_reg_code, 4 ) = LEFT ( t.insuplc_admdvs, 4 ),
        '本市参保',
        IF
        (
        LEFT ( e.insure_reg_code, 4 ) != LEFT ( t.insuplc_admdvs, 4 )
        AND LEFT ( e.insure_reg_code, 2 ) = LEFT ( t.insuplc_admdvs, 2 ),
        '省内异地',
        '跨省异地'
        )
        ) type,
        (select IF
        (
        LEFT ( tt.in_time, 10 ) = LEFT ( tt.out_time, 10 ),
        1,
        DATEDIFF( tt.out_time, tt.in_time )
        ) from inpt_visit tt where e.visit_id = tt.id) as inDay,
        count( 1 ) AS psnNum,
        count( c.aac002 ) AS psnCount,
        ifnull(e.oth_pay,0) AS othPay,
        e.total_price AS totalPrice,
        e.portion_price AS portionPrice,
        e.starting_price AS startingPrice,
        e.insure_price AS insurePrice,
        e.plan_account_price AS planAccountPrice,
        e.plan_price AS planPrice,
        e.serious_price AS seriousPrice,
        e.civil_price AS civilPrice,
        e.retire_price AS retirePrice,
        e.personal_price AS personalPrice,
        e.person_price AS personPrice,
        e.hosp_price AS hospPrice,
        e.rests_price AS restsPrice,
        ifnull(e.thb_pay,0) AS thbPay,
        ifnull(e.hosp_exem_amount,0) AS hospExemAmount,
        ifnull(e.government_pay,0) AS governmentPay,
        ifnull( e.maf_pay, 0 ) AS mafPay,
        ifnull( e.retired_pay, 0 ) AS retiredPay,
        case
        when t.aka130 = '2102' then e.insure_price - e.personal_price - e.rests_price
        when t.aka130 = '990101' then e.insure_price - e.personal_price - e.hosp_price
        else e.insure_price - e.personal_price end as planSumPrice,
        ( CONCAT( e.settle_id, e.visit_id ) ) se_vi_id,
        e.insure_reg_code AS insureRegCode,
        e.all_portion_price as allPortionPrice,
        e.over_self_price as overSelfPrice,
        e.preselfpay_amt as preselfpayAmt,
        e.inscp_scp_amt as inscpScpAmt,
        e.pool_prop_selfpay as poolPropSelfpay,
        t.insuplc_admdvs as insuplcAdmdvs,
        ia.admdvs_name as insuplcAdmdvsName,
        (select name from insure_dict where insure_reg_code = e.insure_reg_code and code = 'MED_TYPE' and e.aka130 = value ) as medTypeName
        FROM
        insure_individual_settle e,
        insure_individual_visit t,
        insure_individual_basic c,
        insure_admdvs ia
        WHERE
        e.hosp_code = t.hosp_code
        AND e.visit_id = t.visit_id
        AND c.hosp_code = t.hosp_code
        AND c.id = t.mib_id
        AND c.aae140 IS NOT NULL
        AND e.settle_state = '1'
        AND e.insureSettleId IS NOT NULL
        AND e.state = '0'
        AND e.insure_reg_code = #{insureRegCode}
        AND e.hosp_code = #{hospCode}
        AND e.insure_price > 0
        AND t.insuplc_admdvs = ia.admdvs_code
        <if test="isValidOneSettle == '1'.toString()">
            and ifnull(t.is_one_settle,'0') != '1'
        </if>
        <if test="isHospital != null and isHospital != '' ">
            and t.is_hospital = #{isHospital}
        </if>
        <if test="clrOptins != null and clrOptins != '' ">
            and e.clr_optins = #{clrOptins}
        </if>
        <if test="insutype != null and insutype != '' ">
            and c.aae140 = #{insutype}
        </if>
        <if test="medType != null and medType != '' ">
            and e.aka130 = #{medType}
        </if>
        <if test="isRemote == '0'.toString()"> <!-- 本市参保 -->
            and LEFT ( e.insure_reg_code, 4 ) = LEFT ( t.insuplc_admdvs, 4 )
        </if>
        <if test="isRemote == '1'.toString()"> <!-- 省内异地 -->
            and LEFT ( e.insure_reg_code, 4 ) != LEFT ( t.insuplc_admdvs, 4 ) and LEFT ( e.insure_reg_code, 2 ) = LEFT ( t.insuplc_admdvs, 2 )
        </if>
        <if test="isRemote == '2'.toString()"> <!-- 省外异地 -->
            and LEFT ( e.insure_reg_code, 2 ) != LEFT ( t.insuplc_admdvs, 2 )
        </if>
        /*开始日期*/
        <if test="startDate != null and startDate != '' ">
            and date(e.crte_time) &gt;= date(#{startDate})
        </if>
        /*结束日期*/
        <if test="endDate != null and endDate != ''">
            and date(e.crte_time) &lt;= date(#{endDate})
        </if>
        GROUP BY
        se_vi_id
        ) A GROUP BY insuplcAdmdvs,medTypeName
    </select>

    <select id="queryDeclareInfos" resultType="java.util.Map" parameterType="java.util.Map">
        SELECT DISTINCT
        c.aac003 AS psnName,
        c.aac002 AS idCard,
        c.bka035_name AS psnType,
        c.bka008 insureUnit,
        DATE_FORMAT(e.crte_time,'%Y-%m-%d') AS crteTime,
        DATE_FORMAT(e.crte_time,'%Y-%m-%d') AS crteDate,
        Round(e.total_price,2) AS totalPrice,
        Round(e.portion_price,2) AS portionPrice,
        Round(e.starting_price,2) AS startingPrice,
        Round(e.insure_price,2) AS insurePrice,
        Round(e.plan_account_price,2) AS planAccountPrice,
        Round(e.plan_price,2) AS planPrice,
        Round(e.serious_price,2) AS seriousPrice,
        Round(e.civil_price,2) AS civilPrice,
        Round(e.retire_price,2) AS retirePrice,
        Round(e.personal_price,2) AS personalPrice,
        Round(e.person_price,2) AS personPrice,
        Round(e.hosp_price,2) AS hospPrice,
        Round(e.rests_price,2) AS restsPrice,
        Round(ifnull(e.maf_pay,0.00),2) AS mafPay,
        Round(ifnull(e.thb_pay ,0),2)AS thbPay,
        Round(( e.insure_price - e.personal_price ),2) AS planSumPrice,
        Round(ifnull(e.hosp_exem_amount,0),2) AS hospExemAmount,
        Round(ifnull(e.government_pay,0),2) AS governmentPay,
        Round(ifnull(e.retired_pay,0),2) AS retiredPay,
        e.clr_optins AS clrOptins,
        e.clr_type AS clrType,
        (select name from insure_dict where insure_reg_code = e.insure_reg_code and code = 'CLR_TYPE' and e.clr_type = value ) as clrTypeName,
        (select name from insure_dict where insure_reg_code = e.insure_reg_code and code = 'MED_TYPE' and e.aka130 = value ) as medTypeName,
        e.medicine_org_code AS medicineOrgCode,
        t.insure_reg_code AS setlOptins,
        t.aac001 AS psnNo,
        t.medical_reg_no AS mdtrtId,
        t.is_hospital AS isHospital,
        c.aae140 AS insutype,
        ( CONCAT( e.settle_id, e.visit_id ) ) se_vi_id,
        IF
        (
        LEFT ( e.insure_reg_code, 4 ) = LEFT ( t.insuplc_admdvs, 4 ),
        '本市参保',
        IF
        (
        LEFT ( e.insure_reg_code, 4 ) != LEFT ( t.insuplc_admdvs, 4 )
        AND LEFT ( e.insure_reg_code, 2 ) = LEFT ( t.insuplc_admdvs, 2 ),
        '省内异地',
        '跨省异地'
        )
        ) type,
        e.insure_reg_code AS insureRegCode,
        Round(e.all_portion_price,2) as allPortionPrice,
        Round(e.over_self_price,2) as overSelfPrice,
        Round(e.preselfpay_amt,2) as preselfpayAmt,
        Round(e.inscp_scp_amt,2) as inscpScpAmt,
        Round(e.pool_prop_selfpay,2) as poolPropSelfpay,
        t.insuplc_admdvs as insuplcAdmdvs,
        ia.admdvs_name as insuplcAdmdvsName,
        (select tt.out_dept_name from inpt_visit tt where e.visit_id = tt.id) as outDeptName,
        (select tt.out_disease_name from inpt_visit tt where e.visit_id = tt.id) as outDiseaseName,
        (select DATE_FORMAT(tt.in_time,'%Y-%m-%d') from inpt_visit tt where e.visit_id = tt.id) as inTime,
        (select DATE_FORMAT(tt.out_time,'%Y-%m-%d') from inpt_visit tt where e.visit_id = tt.id) as outTime,
        (select tt.in_no from inpt_visit tt where e.visit_id = tt.id) as inNo,
        (select IF
        (
        LEFT ( tt.in_time, 10 ) = LEFT ( tt.out_time, 10 ),
        1,
        DATEDIFF( tt.out_time, tt.in_time )
        ) from inpt_visit tt where e.visit_id = tt.id) as inDay,
        c.aac004 AS sex,
        (select name from insure_dict where insure_reg_code = e.insure_reg_code and code = 'GEND' and c.aac004 = value ) as sexName,
        (select name from insure_dict where insure_reg_code = e.insure_reg_code and code = 'PSN_TYPE' and c.bka035 = value) as psnAttrName
        FROM
        insure_individual_settle e,
        insure_individual_visit t,
        insure_individual_basic c,
        insure_admdvs ia
        WHERE
        e.hosp_code = t.hosp_code
        AND e.visit_id = t.visit_id
        AND c.hosp_code = t.hosp_code
        AND c.id = t.mib_id
        AND c.aae140 IS NOT NULL
        AND e.settle_state = '1'
        AND e.insureSettleId IS NOT NULL
        AND e.state = '0'
        AND e.insure_reg_code = #{insureRegCode}
        AND e.hosp_code = #{hospCode}
        AND e.insure_price > 0
        AND t.insuplc_admdvs = ia.admdvs_code
        <if test="isValidOneSettle == '1'.toString()">
            and ifnull(t.is_one_settle,'0') != '1'
        </if>
        <if test="insutype != null and insutype != '' ">
            and c.aae140 = #{insutype}
        </if>
        <if test="medType != null and medType != '' ">
            and e.aka130 = #{medType}
        </if>
        <if test="isHospital != null and isHospital != '' ">
            and t.is_hospital = #{isHospital}
        </if>
        <if test="clrOptins != null and clrOptins != '' ">
            and e.clr_optins = #{clrOptins}
        </if>
        <if test="clrType != null and clrType != '' ">
            and e.clr_type = #{clrType}
        </if>
        <if test="isRemote == '0'.toString()"> <!-- 本市参保 -->
            and LEFT ( e.insure_reg_code, 4 ) = LEFT ( t.insuplc_admdvs, 4 )
        </if>
        <if test="isRemote == '1'.toString()"> <!-- 省内异地 -->
            and LEFT ( e.insure_reg_code, 4 ) != LEFT ( t.insuplc_admdvs, 4 ) and LEFT ( e.insure_reg_code, 2 ) = LEFT ( t.insuplc_admdvs, 2 )
        </if>
        <if test="isRemote == '2'.toString()"> <!-- 省外异地 -->
            and LEFT ( e.insure_reg_code, 2 ) != LEFT ( t.insuplc_admdvs, 2 )
        </if>
        /*开始日期*/
        <if test="startDate != null and startDate != '' ">
            and date(e.crte_time) &gt;= date(#{startDate})
        </if>
        /*结束日期*/
        <if test="endDate != null and endDate != ''">
            and date(e.crte_time) &lt;= date(#{endDate})
        </if>
        GROUP BY
        se_vi_id
    </select>

</mapper>