<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.hsa.module.phar.pharoutbackdrug.dao.OutBackDrugDAO">

    <resultMap type="cn.hsa.module.phar.pharoutdistribute.dto.PharOutDistributeDTO" id="PharOutDistributeMap">
        <result property="id" column="id" jdbcType="VARCHAR"/>
        <result property="hospCode" column="hosp_code" jdbcType="VARCHAR"/>
        <result property="orderNo" column="order_no" jdbcType="VARCHAR"/>
        <result property="visitId" column="visit_id" jdbcType="VARCHAR"/>
        <result property="settleId" column="settle_id" jdbcType="VARCHAR"/>
        <result property="totalPrice" column="total_price" jdbcType="DECIMAL"/>
        <result property="pharId" column="phar_id" jdbcType="VARCHAR"/>
        <result property="windowId" column="window_id" jdbcType="VARCHAR"/>
        <result property="assignUserId" column="assign_user_id" jdbcType="VARCHAR"/>
        <result property="assignUserName" column="assign_user_name" jdbcType="VARCHAR"/>
        <result property="assignTime" column="assign_time" jdbcType="TIMESTAMP"/>
        <result property="distUserId" column="dist_user_id" jdbcType="VARCHAR"/>
        <result property="distUserName" column="dist_user_name" jdbcType="VARCHAR"/>
        <result property="distTime" column="dist_time" jdbcType="TIMESTAMP"/>
        <result property="deptId" column="dept_id" jdbcType="VARCHAR"/>
        <result property="crteId" column="crte_id" jdbcType="VARCHAR"/>
        <result property="crteName" column="crte_name" jdbcType="VARCHAR"/>
        <result property="crteTime" column="crte_time" jdbcType="TIMESTAMP"/>
        <result property="name" column="name" jdbcType="VARCHAR"/>
        <result property="statusCode" column="status_code" jdbcType="VARCHAR"/>
    </resultMap>

    <resultMap type="cn.hsa.module.phar.pharoutdistribute.dto.PharOutDistributeDetailDTO" id="PharOutDistributeDetailMap">
        <result property="id" column="id" jdbcType="VARCHAR"/>
        <result property="hospCode" column="hosp_code" jdbcType="VARCHAR"/>
        <result property="distributeId" column="distribute_id" jdbcType="VARCHAR"/>
        <result property="opId" column="op_id" jdbcType="VARCHAR"/>
        <result property="opdId" column="opd_id" jdbcType="VARCHAR"/>
        <result property="oldCostId" column="old_cost_id" jdbcType="VARCHAR"/>
        <result property="costId" column="cost_id" jdbcType="VARCHAR"/>
        <result property="itemCode" column="item_code" jdbcType="VARCHAR"/>
        <result property="itemId" column="item_id" jdbcType="VARCHAR"/>
        <result property="itemName" column="item_name" jdbcType="VARCHAR"/>
        <result property="spec" column="spec" jdbcType="VARCHAR"/>
        <result property="dosage" column="dosage" jdbcType="DECIMAL"/>
        <result property="dosageUnitCode" column="dosage_unit_code" jdbcType="VARCHAR"/>
        <result property="num" column="num" jdbcType="DECIMAL"/>
        <result property="unitCode" column="unit_code" jdbcType="VARCHAR"/>
        <result property="price" column="price" jdbcType="DECIMAL"/>
        <result property="splitRatio" column="split_ratio" jdbcType="DECIMAL"/>
        <result property="splitUnitCode" column="split_unit_code" jdbcType="VARCHAR"/>
        <result property="splitPrice" column="split_price" jdbcType="DECIMAL"/>
        <result property="splitNum" column="split_num" jdbcType="DECIMAL"/>
        <result property="totalPrice" column="total_price" jdbcType="DECIMAL"/>
        <result property="chineseDrugNum" column="chinese_drug_num" jdbcType="DECIMAL"/>
        <result property="usageCode" column="usage_code" jdbcType="VARCHAR"/>
        <result property="useCode" column="use_code" jdbcType="VARCHAR"/>
        <result property="stockDetailId" column="stock_detail_id" jdbcType="VARCHAR"/>
        <result property="batchNo" column="batch_no" jdbcType="VARCHAR"/>
        <result property="backNum" column="back_num" jdbcType="DECIMAL"/>
        <result property="totalBackNum" column="total_back_num" jdbcType="DECIMAL"/>
        <result property="upBatchSurplusNum" column="up_batch_surplus_num" jdbcType="DECIMAL"/>
        <result property="batchSurplusNum" column="batch_surplus_num" jdbcType="DECIMAL"/>
        <result property="upBuyPriceAll" column="up_buy_price_all" jdbcType="DECIMAL"/>
        <result property="buyPriceAll" column="buy_price_all" jdbcType="DECIMAL"/>
        <result property="upSellPriceAll" column="up_sell_price_all" jdbcType="DECIMAL"/>
        <result property="sellPriceAll" column="sell_price_all" jdbcType="DECIMAL"/>
        <result property="oldDistId" column="old_dist_id" jdbcType="VARCHAR"/>
        <result property="statusCode" column="status_code" jdbcType="VARCHAR"/>
        <result property="currUnitCode" column="curr_unit_code" jdbcType="VARCHAR"/>
    </resultMap>

<!--    门诊退药的sql-->
    <select id="getOutBackDrugPeopleById" resultMap="PharOutDistributeMap">
      select id,order_no, hosp_code, visit_id, settle_id, total_price, phar_id, window_id, assign_user_id,
      assign_user_name, assign_time, dist_user_id, dist_user_name, dist_time, dept_id, crte_id, crte_name, crte_time,status_code
      from phar_out_distribute
      where hosp_code = #{hospCode} and id = #{id}
    </select>

    <update id="updatePharOutDistributeS">
        update phar_out_distribute
        <set>
                status_code = #{statusCode}
        </set>
        where id = #{id} and hosp_code = #{hospCode}
    </update>

    <!--查询有退药记录的人-->
    <select id="queryOutBackDrugPeoplePage" resultMap="PharOutDistributeMap" >
        select * from (
         select
         pod.id,
         pod.order_no,
         pod.hosp_code,
         pod.visit_id,
         pod.settle_id,
         pod.total_price,
         pod.phar_id,
         pod.window_id,
         pod.assign_user_id,
         pod.assign_user_name,
         pod.assign_time,
         pod.dist_user_id,
         pod.dist_user_name,
         pod.dist_time,
         pod.dept_id,
         pod.crte_id,
         pod.crte_name,
         pod.crte_time,
         pod.status_code,
         outpt.name as name,
         outpt.gender_code as genderCode,
         outpt.age as age,
         outpt.age_unit_code as ageUnitCode,
         outpt.cert_no as certNo,
         outpt.phone as phone,
         outpt.visit_no as visitNo,
         ad.total_back_num as totalBackNum,
         (select name from base_window where window_id = base_window.id and base_window.hosp_code = #{hospCode})as windowName,
           case when pod.total_price >=0 then '发药'
               else '退药'  end as type,
         ((case when ad.curr_unit_code = ad.unit_code then ad.num else ad.split_num end) - ifnull(ad.total_back_num,0) > 0) as detailNum
          from phar_out_distribute pod left join outpt_visit outpt on pod.hosp_code = outpt.hosp_code and pod.visit_id = outpt.id
          left join phar_out_distribute_all_detail ad on ad.hosp_code = #{hospCode} and ad.distribute_id = pod.id
        <where>
                and pod.hosp_code = #{hospCode} and pod.status_code = '0'
                <if test="id != null and id != ''">
                    and pod.id = #{id}
                </if>
                <if test="orderNo != null and orderNo != ''">
                    and pod.order_no = #{orderNo}
                </if>
                <if test="visitId != null and visitId != ''">
                    and pod.visit_id = #{visitId}
                </if>
                <if test="settleId != null and settleId != ''">
                    and pod.settle_id = #{settleId}
                </if>
                <if test="totalPrice != null">
                    and pod.total_price = #{totalPrice}
                </if>
                <if test="pharId != null and pharId != ''">
                    and pod.phar_id = #{pharId}
                </if>
                <if test="windowId != null and windowId != ''">
                    and pod.window_id = #{windowId}
                </if>
                <if test="assignUserId != null and assignUserId != ''">
                    and pod.assign_user_id = #{assignUserId}
                </if>
                <if test="assignUserName != null and assignUserName != ''">
                    and pod.assign_user_name = #{assignUserName}
                </if>
                <if test="assignTime != null">
                    and pod.assign_time = #{assignTime}
                </if>
                <if test="distUserId != null and distUserId != ''">
                    and pod.dist_user_id = #{distUserId}
                </if>
                <if test="distUserName != null and distUserName != ''">
                    and pod.dist_user_name = #{distUserName}
                </if>
                <if test="distTime != null">
                    and pod.dist_time = #{distTime}
                </if>
                <if test="deptId != null and deptId != ''">
                    and pod.dept_id = #{deptId}
                </if>
                <if test="crteId != null and crteId != ''">
                    and pod.crte_id = #{crteId}
                </if>
                /*开始日期*/
                <if test="startDate != null">
                  and pod.crte_time &gt;=#{startDate}
                </if>
                /*结束日期*/
                <if test="endDate != null">
                  and pod.crte_time &lt;= DATE_FORMAT(DATE_ADD(#{endDate},INTERVAL 1 DAY),'%Y-%m-%d')
                </if>
                <if test="keyword != null and keyword!= ''">
                    and (outpt.name like concat('%',#{keyword},'%')
                     or outpt.phone like concat('%',#{keyword},'%')
                     or outpt.cert_no like concat('%',#{keyword},'%')
                     or order_no like concat('%',#{keyword},'%'))
                </if>
            </where>
        ) a
        where
        1 = 1
        <choose>
            <when test="orderStatus != null and orderStatus == 0">
                and  detailNum > 0
            </when>
            <when test="orderStatus != null and orderStatus == 1">
                and  totalBackNum > 0
            </when>
        </choose>
        GROUP BY a.id
        order by crte_time desc
    </select>

    <!--根据发药ID 查询出此人的所有发药记录-->
    <select id="queryOutBackDrugDetailPage" resultMap="PharOutDistributeDetailMap">
         select
            p.id, p.hosp_code, p.distribute_id, p.op_id, p.opd_id, p.old_cost_id, p.cost_id, p.item_code, p.item_id, p.item_name, p.spec,
            p.dosage, p.dosage_unit_code, p.num, p.unit_code, p.price, p.split_ratio, p.split_unit_code, p.split_price, p.split_num,
            p.total_price, p.chinese_drug_num, p.usage_code, p.use_code, p.back_num, p.total_back_num, p.old_dist_id, p.status_code,
            p.curr_unit_code,
            case
                when p.curr_unit_code = p.unit_code
                    then p.num
                    else p.split_num
                    end as num,
            (select (rp.num - ifnull(cs.back_num,0)) from outpt_refund_apply rp where rp.status = '2' and rp.refund_code = '1' and rp.cost_id = cs.id) as backNumOk
            from phar_out_distribute_all_detail p
            join outpt_cost cs on cs.distribute_all_detail_id = p.id and cs.hosp_code = p.hosp_code and cs.status_code = '0'
            where p.distribute_id = #{id} and p.hosp_code = #{hospCode} and p.num > 0
    </select>

    <select id="queryOutBackDrugDetailPageForSelect" resultMap="PharOutDistributeDetailMap">
     select *from (select
        id, hosp_code, distribute_id, op_id, opd_id, old_cost_id, cost_id, item_code, item_id, item_name, spec,
        dosage, dosage_unit_code, num, unit_code, price, split_ratio, split_unit_code, split_price, split_num,
        total_price, chinese_drug_num, usage_code, use_code, back_num, total_back_num, old_dist_id, status_code,
        curr_unit_code,
        case when
        ((case when curr_unit_code = unit_code then num else split_num end) - ifnull(total_back_num,0))>=0
        then ((case when curr_unit_code = unit_code then num else split_num end) - ifnull(total_back_num,0))
             else 0 end
        as backNumOk
        from phar_out_distribute_all_detail where distribute_id = #{id} and hosp_code = #{hospCode} and num >0) a
        where a.backNumOk > 0
    </select>


    <!--根据发药ID 查询出此人的所有发药记录 可退数量为门诊医生申请退费指定的数量-->
    <select id="queryOutBackDrugDetailRefundApplyPage1" resultMap="PharOutDistributeDetailMap">
     select
        p.id, p.hosp_code, p.distribute_id, p.op_id, p.opd_id, p.old_cost_id, p.cost_id, p.item_code, p.item_id, p.item_name, p.spec, p.dosage, p.dosage_unit_code,
        case
            when p.curr_unit_code = p.unit_code
                then p.num
                else p.split_num
                end as num,
        p.unit_code, p.price, p.split_ratio, p.split_unit_code, p.split_price, p.split_num, p.total_price,
        p.chinese_drug_num, p.usage_code, p.use_code, p.stock_detail_id, p.batch_no, p.back_num, p.total_back_num,
        p.up_batch_surplus_num, p.batch_surplus_num, p.up_buy_price_all, p.buy_price_all, p.up_sell_price_all, p.sell_price_all,
        p.old_dist_id, p.status_code,
        case when ifnull(a.status, '0') = '2'
        then
            case
                when ifnull(a.num, 0) = 0
                then 0
                else (case
                    when (ifnull((select sum(num) from outpt_refund_apply where p.cost_id = cost_id or p.old_cost_id = cost_id),0) - ifnull(p.total_back_num,0))>0
                        then (ifnull((select sum(num) from outpt_refund_apply where p.cost_id = cost_id or p.old_cost_id = cost_id),0) - ifnull(p.total_back_num,0))
                        else 0
                        end
                    )
            end
        else 0
        end
        as backNumOk,
        p.curr_unit_code
        from phar_out_distribute_detail p
            left join
            outpt_refund_apply a
            on p.cost_id = a.cost_id
        where p.distribute_id = #{id} and p.hosp_code = #{hospCode}
    </select>

    <!--根据发药ID 查询出此人的所有发药记录 可退数量为门诊医生申请退费指定的数量-->
    <select id="queryOutBackDrugDetailRefundApplyPage" resultType="cn.hsa.module.phar.pharoutdistribute.dto.PharOutDistributeAllDetailDTO">
     select *from (select
        p.id, p.hosp_code, p.distribute_id, p.op_id, p.opd_id, p.old_cost_id, p.cost_id, p.item_code, p.item_id, p.item_name, p.spec,
        p.dosage, p.dosage_unit_code,p.unit_code, p.price, p.split_ratio, p.split_unit_code, p.split_price, p.split_num,
        p.total_price, p.chinese_drug_num, p.usage_code, p.use_code, p.back_num, p.total_back_num, p.old_dist_id, p.status_code,
        p.curr_unit_code,
        case
            when p.curr_unit_code = p.unit_code
                then p.num
                else p.split_num
                end as num,
        (select (rp.num - ifnull(cs.back_num,0)) from outpt_refund_apply rp where rp.status = '2' and rp.refund_code = '1' and rp.cost_id = cs.id) as backNumOk
        from phar_out_distribute_all_detail p
        join outpt_cost cs on cs.distribute_all_detail_id = p.id and cs.hosp_code = p.hosp_code and cs.status_code = '0'
        where p.distribute_id = #{id} and p.hosp_code = #{hospCode} and p.num > 0) a where  a.backNumOk > 0

    </select>


    <!--根据发药明细ID 查询发药明细记录-->
    <select id="getOutBackDrugDetailById" resultMap="PharOutDistributeDetailMap">
     select
        a.id, a.hosp_code, a.distribute_id, a.op_id, a.opd_id, a.old_cost_id, a.cost_id, a.item_code, a.item_id,
        a.item_name, a.spec,a.dosage,a.dosage_unit_code,
        case when a.curr_unit_code = a.unit_code then a.num else a.split_num end num,
        a.unit_code, a.price, a.split_ratio, a.split_unit_code, a.split_price, a.split_num, a.total_price,
        a.chinese_drug_num, a.usage_code, a.use_code, a.stock_detail_id, a.batch_no, a.back_num, a.total_back_num,
        a.up_batch_surplus_num, a.batch_surplus_num, a.up_buy_price_all, a.buy_price_all, a.up_sell_price_all,
        a.sell_price_all,a.old_dist_id, a.status_code,
        case when ((case when a.curr_unit_code = a.unit_code then a.num else a.split_num end) - ifnull(a.total_back_num,0))>=0 then ((case when a.curr_unit_code = a.unit_code then a.num else a.split_num end) - ifnull(a.total_back_num,0))
             else 0 end
        as backNumOk, a.curr_unit_code,
        (select dp.name from base_dept dp where dp.id = p.phar_id and dp.hosp_code = p.hosp_code) as invoicingTargetName
        from phar_out_distribute_detail a
        left join phar_out_distribute p on p.id = a.distribute_id and p.hosp_code = a.hosp_code
        where a.id = #{id} and a.hosp_code =#{hospCode}
    </select>

    <!--门诊退药，更新退药数量和累计退药数量-->
    <update id="updateBackNumAndTotalBackNum">
        <foreach collection="list" item="item" index="index" separator=";">
            update phar_out_distribute_detail
            <set>
                back_num = #{item.backNum},
                total_back_num = #{item.totalBackNum}
            </set>
            where hosp_code = #{item.hospCode} and status_code = '0' and id = #{item.id}
        </foreach>
    </update>

    <insert id="insertDistribute" keyProperty="id" useGeneratedKeys="true">
        insert into phar_out_distribute(id,hosp_code,order_no, visit_id, settle_id, total_price, phar_id, window_id, assign_user_id,
         assign_user_name, assign_time, dist_user_id, dist_user_name, dist_time, dept_id, crte_id, crte_name, crte_time,status_code)
        values (#{id},#{hospCode},#{orderNo}, #{visitId}, #{settleId}, #{totalPrice}, #{pharId}, #{windowId}, #{assignUserId}, #{assignUserName}, #{assignTime}, #{distUserId}, #{distUserName}, #{distTime}, #{deptId}, #{crteId}, #{crteName}, #{crteTime},#{statusCode})
    </insert>

    <insert id="insertDistributeDetailList">
        insert into phar_out_distribute_detail(id,hosp_code, distribute_id, op_id, opd_id, old_cost_id, cost_id,
         item_code, item_id, item_name, spec, dosage, dosage_unit_code, num, unit_code, price, split_ratio,
         split_unit_code, split_price, split_num, total_price, chinese_drug_num, usage_code, use_code, stock_detail_id,
          batch_no, back_num, total_back_num, up_batch_surplus_num, batch_surplus_num, up_buy_price_all, buy_price_all,
           up_sell_price_all, sell_price_all, old_dist_id, status_code, curr_unit_code )
        values
        <foreach collection="list" item="item" separator=",">
            (#{item.id},#{item.hospCode}, #{item.distributeId}, #{item.opId}, #{item.opdId}, #{item.oldCostId}, #{item.costId}, #{item.itemCode}, #{item.itemId},
             #{item.itemName}, #{item.spec}, #{item.dosage}, #{item.dosageUnitCode}, #{item.num}, #{item.unitCode}, #{item.price}, #{item.splitRatio},
             #{item.splitUnitCode}, #{item.splitPrice}, #{item.splitNum}, #{item.totalPrice}, #{item.chineseDrugNum}, #{item.usageCode},
             #{item.useCode}, #{item.stockDetailId}, #{item.batchNo}, #{item.backNum}, #{item.totalBackNum}, #{item.upBatchSurplusNum},
             #{item.batchSurplusNum}, #{item.upBuyPriceAll}, #{item.buyPriceAll}, #{item.upSellPriceAll}, #{item.sellPriceAll}, #{item.oldDistId},
             #{item.statusCode}, #{item.currUnitCode})
        </foreach>
    </insert>

    <select id="getOutptCostBackNumById" parameterType="cn.hsa.module.outpt.fees.dto.OutptCostDTO" resultType="cn.hsa.module.outpt.fees.dto.OutptCostDTO">
        select * from outpt_cost where hosp_code = #{hospCode} and status_code ='0' and distribute_all_detail_id = #{distributeAllDetailId}
    </select>

  <!--根据批次发药汇总查询发药明细数据-->
  <select id="queryOutBackDrugDetail" resultMap="PharOutDistributeDetailMap">
     select
        a.id, a.hosp_code, a.distribute_id, a.op_id, a.opd_id, a.old_cost_id, a.cost_id, a.item_code, a.item_id,
        a.item_name, a.spec,a.dosage,a.dosage_unit_code,
        case when a.curr_unit_code = a.unit_code then a.num else a.split_num end num,
        a.unit_code, a.price, a.split_ratio, a.split_unit_code, a.split_price, a.split_num, a.total_price,
        a.chinese_drug_num, a.usage_code, a.use_code, a.stock_detail_id, a.batch_no, a.back_num, a.total_back_num,
        a.up_batch_surplus_num, a.batch_surplus_num, a.up_buy_price_all, a.buy_price_all, a.up_sell_price_all,
        a.sell_price_all,a.old_dist_id, a.status_code,a.curr_unit_code
        from phar_out_distribute_detail a where a.hosp_code = #{hospCode} and a.num > 0
        and a.distribute_all_detail_id = #{id}
        order by a.stock_detail_id desc
  </select>
    <!--领药申请未退药的病人，如果不对id进行分组，有可能产生多条重复的数据-->
    <select id="queryOutBackDrugPeopleRefundApplyPage"
            resultMap="PharOutDistributeMap">
        select * from (
        select
        pod.id,
        pod.order_no,
        pod.hosp_code,
        pod.visit_id,
        pod.settle_id,
        pod.total_price,
        pod.phar_id,
        pod.window_id,
        pod.assign_user_id,
        pod.assign_user_name,
        pod.assign_time,
        pod.dist_user_id,
        pod.dist_user_name,
        pod.dist_time,
        pod.dept_id,
        pod.crte_id,
        pod.crte_name,
        pod.crte_time,
        pod.status_code,
        outpt.name as name,
        outpt.gender_code as genderCode,
        outpt.age as age,
        outpt.age_unit_code as ageUnitCode,
        outpt.cert_no as certNo,
        outpt.phone as phone,
        outpt.visit_no as visitNo,
        ad.total_back_num as totalBackNum,
        (select name from base_window where window_id = base_window.id and base_window.hosp_code = #{hospCode})as windowName,
        case when pod.total_price >=0 then '发药'
        else '退药'  end as type,
        (select (rp.num - ifnull(cs.back_num,0)) from outpt_refund_apply rp where rp.status = '2' and rp.refund_code = '1' and rp.cost_id = cs.id) as backNumOk
        from phar_out_distribute pod left join outpt_visit outpt
        on pod.hosp_code = outpt.hosp_code and pod.visit_id = outpt.id
        left join phar_out_distribute_all_detail ad on ad.hosp_code = #{hospCode} and ad.distribute_id = pod.id
        left join outpt_cost cs on cs.distribute_all_detail_id = ad.id and cs.status_code = '0'
        <where>
            and pod.hosp_code = #{hospCode} and pod.status_code = '0'
            <if test="id != null and id != ''">
                and pod.id = #{id}
            </if>
            <if test="orderNo != null and orderNo != ''">
                and pod.order_no = #{orderNo}
            </if>
            <if test="visitId != null and visitId != ''">
                and pod.visit_id = #{visitId}
            </if>
            <if test="settleId != null and settleId != ''">
                and pod.settle_id = #{settleId}
            </if>
            <if test="totalPrice != null">
                and pod.total_price = #{totalPrice}
            </if>
            <if test="pharId != null and pharId != ''">
                and pod.phar_id = #{pharId}
            </if>
            <if test="windowId != null and windowId != ''">
                and pod.window_id = #{windowId}
            </if>
            <if test="assignUserId != null and assignUserId != ''">
                and pod.assign_user_id = #{assignUserId}
            </if>
            <if test="assignUserName != null and assignUserName != ''">
                and pod.assign_user_name = #{assignUserName}
            </if>
            <if test="assignTime != null">
                and pod.assign_time = #{assignTime}
            </if>
            <if test="distUserId != null and distUserId != ''">
                and pod.dist_user_id = #{distUserId}
            </if>
            <if test="distUserName != null and distUserName != ''">
                and pod.dist_user_name = #{distUserName}
            </if>
            <if test="distTime != null">
                and pod.dist_time = #{distTime}
            </if>
            <if test="deptId != null and deptId != ''">
                and pod.dept_id = #{deptId}
            </if>
            <if test="crteId != null and crteId != ''">
                and pod.crte_id = #{crteId}
            </if>
            /*开始日期*/
            <if test="startDate != null">
                and pod.crte_time &gt;=#{startDate}
            </if>
            /*结束日期*/
            <if test="endDate != null">
                and pod.crte_time &lt;= DATE_FORMAT(DATE_ADD(#{endDate},INTERVAL 1 DAY),'%Y-%m-%d')
            </if>
            <if test="keyword != null and keyword!= ''">
                and (outpt.name like concat('%',#{keyword},'%')
                or outpt.phone like concat('%',#{keyword},'%')
                or outpt.cert_no like concat('%',#{keyword},'%')
                or order_no like concat('%',#{keyword},'%'))
            </if>
        </where>
        ) a
        where
         1 = 1
         <choose>
             <when test="orderStatus != null and orderStatus == 0">
                 and  backNumOk > 0
             </when>
             <when test="orderStatus != null and orderStatus == 1">
                 and  totalBackNum > 0
             </when>
         </choose>
         GROUP BY a.id
         order by crte_time desc
    </select>
    <select id="queryOutBackDrugDetailRefundApplyPageById"
            resultMap="PharOutDistributeDetailMap">
    select
        p.id, p.hosp_code, p.distribute_id, p.op_id, p.opd_id, p.old_cost_id, p.cost_id, p.item_code, p.item_id, p.item_name, p.spec,
        p.dosage, p.dosage_unit_code,p.unit_code, p.price, p.split_ratio, p.split_unit_code, p.split_price, abs(p.split_num) as split_num,
        abs(p.total_price) as total_price, p.chinese_drug_num, p.usage_code, p.use_code, p.back_num, p.total_back_num, p.old_dist_id, p.status_code,
        p.curr_unit_code,p.crte_time,
        case
            when p.curr_unit_code = p.unit_code
                then abs(p.num)
                else abs(p.split_num)
                end as num
        from phar_out_distribute_all_detail p
        where p.distribute_id = #{id} and p.hosp_code = #{hospCode} and p.num &lt; 0
    </select>

    <update id="updateBatchBackNumAndTotalBackNum">
    <foreach collection="list" item="item" index="index" separator=";">
      update phar_out_distribute_all_detail
      <set>
        back_num = #{item.backNum},
        total_back_num = #{item.totalBackNum}
      </set>
      where hosp_code = #{item.hospCode} and status_code = '0' and id = #{item.id}
    </foreach>
  </update>

  <update id="updateCostBcakNumByDsitirId">
    <foreach collection="list" item="item" index="index" separator=";">
      update outpt_cost
      <set>
        back_num = #{item.backNum}
      </set>
      where hosp_code = #{item.hospCode} and status_code = '0' and distribute_all_detail_id = #{item.distributeAllDetailId}
    </foreach>
  </update>

  <update id="updateDistributeAllDetailId">
    <foreach collection="list" item="item" separator=";">
      update phar_out_distribute_detail a set a.distribute_all_detail_id =
      (select b.id from phar_out_distribute_all_detail b where b.old_dist_id in
      (select A.distribute_all_detail_id from
      (select c.distribute_all_detail_id from phar_out_distribute_detail c where c.id = #{item.oldDistId}) as A
      ) order by b.crte_time desc limit 1
      )
      where a.id = #{item.id} and a.hosp_code = #{item.hospCode}
    </foreach>
  </update>


</mapper>
