<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.hsa.module.stro.purchase.dao.StroPurchaseDAO" >
  <resultMap id="BaseResultMap" type="cn.hsa.module.stro.purchase.dto.StroPurchaseDTO" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="hosp_code" property="hospCode" jdbcType="VARCHAR" />
    <result column="biz_id" property="bizId" jdbcType="VARCHAR" />
    <result column="order_no" property="orderNo" jdbcType="VARCHAR" />
    <result column="supplier_id" property="supplierId" jdbcType="VARCHAR" />
    <result column="buy_price_all" property="buyPriceAll" jdbcType="DECIMAL" />
    <result column="sell_price_all" property="sellPriceAll" jdbcType="DECIMAL" />
    <result column="audit_code" property="auditCode" jdbcType="VARCHAR" />
    <result column="audit_id" property="auditId" jdbcType="VARCHAR" />
    <result column="audit_name" property="auditName" jdbcType="VARCHAR" />
    <result column="audit_time" property="auditTime" jdbcType="TIMESTAMP" />
    <result column="crte_id" property="crteId" jdbcType="VARCHAR" />
    <result column="crte_name" property="crteName" jdbcType="VARCHAR" />
    <result column="crte_time" property="crteTime" jdbcType="TIMESTAMP" />
    <result column="supplierName" property="supplierName" jdbcType="VARCHAR" />
    <result column="bizName" property="bizName" jdbcType="VARCHAR" />
  </resultMap>

  <resultMap type="cn.hsa.module.base.bmm.dto.BaseMaterialDTO" id="BaseMaterialMap">
    <result property="id" column="id" jdbcType="VARCHAR"/>
    <result property="hospCode" column="hosp_code" jdbcType="VARCHAR"/>
    <result property="typeCode" column="type_code" jdbcType="VARCHAR"/>
    <result property="bfcCode" column="bfc_code" jdbcType="INTEGER"/>
    <result property="code" column="code" jdbcType="VARCHAR"/>
    <result property="name" column="name" jdbcType="VARCHAR"/>
    <result property="spec" column="spec" jdbcType="VARCHAR"/>
    <result property="price" column="price" jdbcType="NUMERIC"/>
    <result property="unitCode" column="unit_code" jdbcType="VARCHAR"/>
    <result property="splitRatio" column="split_ratio" jdbcType="INTEGER"/>
    <result property="splitUnitCode" column="split_unit_code" jdbcType="VARCHAR"/>
    <result property="splitPrice" column="split_price" jdbcType="NUMERIC"/>
    <result property="isSuppCurtain" column="is_supp_curtain" jdbcType="VARCHAR"/>
    <result property="useCode" column="use_code" jdbcType="VARCHAR"/>
    <result property="remark" column="remark" jdbcType="VARCHAR"/>
    <result property="prodCode" column="prod_code" jdbcType="INTEGER"/>
    <result property="regCertNo" column="reg_cert_no" jdbcType="VARCHAR"/>
    <result property="pym" column="pym" jdbcType="VARCHAR"/>
    <result property="wbm" column="wbm" jdbcType="VARCHAR"/>
    <result property="isValid" column="is_valid" jdbcType="VARCHAR"/>
    <result property="crteId" column="crte_id" jdbcType="VARCHAR"/>
    <result property="crteName" column="crte_name" jdbcType="VARCHAR"/>
    <result property="crteTime" column="crte_time" jdbcType="TIMESTAMP"/>
    <result property="bfcName" column="bfcName" jdbcType="VARCHAR"/>
    <result property="prodName" column="prodName" jdbcType="VARCHAR"/>
    <result property="stockNum" column="stockNum" javaType="DECIMAL"/>
  </resultMap>

  <resultMap type="cn.hsa.module.base.drug.dto.BaseDrugDTO" id="BaseDrugMap">
    <result property="id" column="id" jdbcType="VARCHAR"/>
    <result property="hospCode" column="hosp_code" jdbcType="VARCHAR"/>
    <result property="bfcCode" column="bfc_code" jdbcType="VARCHAR"/>
    <result property="typeCode" column="type_code" jdbcType="VARCHAR"/>
    <result property="code" column="code" jdbcType="VARCHAR"/>
    <result property="usualName" column="usual_name" jdbcType="VARCHAR"/>
    <result property="goodName" column="good_name" jdbcType="VARCHAR"/>
    <result property="spec" column="spec" jdbcType="VARCHAR"/>
    <result property="prepCode" column="prep_code" jdbcType="VARCHAR"/>
    <result property="dosage" column="dosage" jdbcType="NUMERIC"/>
    <result property="dosageUnitCode" column="dosage_unit_code" jdbcType="VARCHAR"/>
    <result property="outUnitCode" column="out_unit_code" jdbcType="VARCHAR"/>
    <result property="inUnitCode" column="in_unit_code" jdbcType="VARCHAR"/>
    <result property="rateCode" column="rate_code" jdbcType="VARCHAR"/>
    <result property="price" column="price" jdbcType="NUMERIC"/>
    <result property="unitCode" column="unit_code" jdbcType="VARCHAR"/>
    <result property="splitRatio" column="split_ratio" jdbcType="INTEGER"/>
    <result property="splitUnitCode" column="split_unit_code" jdbcType="VARCHAR"/>
    <result property="splitPrice" column="split_price" jdbcType="NUMERIC"/>
    <result property="isOut" column="is_out" jdbcType="VARCHAR"/>
    <result property="isIn" column="is_in" jdbcType="VARCHAR"/>
    <result property="isLvp" column="is_lvp" jdbcType="VARCHAR"/>
    <result property="usageCode" column="usage_code" jdbcType="VARCHAR"/>
    <result property="insureCode" column="insure_code" jdbcType="VARCHAR"/>
    <result property="nationCode" column="nation_code" jdbcType="VARCHAR"/>
    <result property="drugRemark" column="drug_remark" jdbcType="VARCHAR"/>
    <result property="drugImgPath" column="drug_img_path" jdbcType="VARCHAR"/>
    <result property="maxDosage" column="max_dosage" jdbcType="NUMERIC"/>
    <result property="minDosage" column="min_dosage" jdbcType="NUMERIC"/>
    <result property="ddd" column="ddd" jdbcType="VARCHAR"/>
    <result property="isSkin" column="is_skin" jdbcType="VARCHAR"/>
    <result property="isBasic" column="is_basic" jdbcType="VARCHAR"/>
    <result property="basicCode" column="basic_code" jdbcType="VARCHAR"/>
    <result property="dan" column="dan" jdbcType="VARCHAR"/>
    <result property="prodCode" column="prod_code" jdbcType="VARCHAR"/>
    <result property="usualPym" column="usual_pym" jdbcType="VARCHAR"/>
    <result property="usualWbm" column="usual_wbm" jdbcType="VARCHAR"/>
    <result property="goodPym" column="good_pym" jdbcType="VARCHAR"/>
    <result property="goodWbm" column="good_wbm" jdbcType="VARCHAR"/>
    <result property="isValid" column="is_valid" jdbcType="VARCHAR"/>
    <result property="crteId" column="crte_id" jdbcType="VARCHAR"/>
    <result property="crteName" column="crte_name" jdbcType="VARCHAR"/>
    <result property="crteTime" column="crte_time" jdbcType="TIMESTAMP"/>
    <result property="outDeptName" column="outDeptName" jdbcType="VARCHAR"/>
    <result property="inDeptName" column="inDeptName" jdbcType="VARCHAR"/>
    <result property="stockNum" column="stockNum" jdbcType="INTEGER"/>
    <result property="itemCode" column="itemCode" jdbcType="VARCHAR"/>
    <result property="itemCodeName" column="itemCodeName" jdbcType="VARCHAR"/>
  </resultMap>


    <sql id="Base_Column_List" >
      id, hosp_code, biz_id, order_no, supplier_id, buy_price_all, sell_price_all, audit_code,
      audit_id, audit_name, audit_time, crte_id, crte_name, crte_time
    </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String">
      select
      <include refid="Base_Column_List" />
      from stro_purchase
      where id = #{id,jdbcType=VARCHAR}
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
      delete from stro_purchase
      where id = #{id,jdbcType=VARCHAR}
    </delete>

    <insert id="insert" parameterType="cn.hsa.module.stro.purchase.entity.StroPurchaseDO" >
      insert into stro_purchase (id, hosp_code, biz_id,
        order_no, supplier_id, buy_price_all,
        sell_price_all, audit_code, audit_id,
        audit_name, audit_time, crte_id,
        crte_name, crte_time)
      values (#{id,jdbcType=VARCHAR}, #{hospCode,jdbcType=VARCHAR}, #{bizId,jdbcType=VARCHAR},
        #{orderNo,jdbcType=VARCHAR}, #{supplierId,jdbcType=VARCHAR}, #{buyPriceAll,jdbcType=DECIMAL},
        #{sellPriceAll,jdbcType=DECIMAL}, #{auditCode,jdbcType=VARCHAR}, #{auditId,jdbcType=VARCHAR},
        #{auditName,jdbcType=VARCHAR}, #{auditTime,jdbcType=TIMESTAMP}, #{crteId,jdbcType=VARCHAR},
        #{crteName,jdbcType=VARCHAR}, #{crteTime,jdbcType=TIMESTAMP})
    </insert>

    <insert id="insertSelective" parameterType="cn.hsa.module.stro.purchase.entity.StroPurchaseDO" >
      insert into stro_purchase
      <trim prefix="(" suffix=")" suffixOverrides="," >
        <if test="id != null" >
          id,
        </if>
        <if test="hospCode != null" >
          hosp_code,
        </if>
        <if test="bizId != null" >
          biz_id,
        </if>
        <if test="orderNo != null" >
          order_no,
        </if>
        <if test="supplierId != null" >
          supplier_id,
        </if>
        <if test="buyPriceAll != null" >
          buy_price_all,
        </if>
        <if test="sellPriceAll != null" >
          sell_price_all,
        </if>
        <if test="auditCode != null" >
          audit_code,
        </if>
        <if test="auditId != null" >
          audit_id,
        </if>
        <if test="auditName != null" >
          audit_name,
        </if>
        <if test="auditTime != null" >
          audit_time,
        </if>
        <if test="crteId != null" >
          crte_id,
        </if>
        <if test="crteName != null" >
          crte_name,
        </if>
        <if test="crteTime != null" >
          crte_time,
        </if>
      </trim>
      <trim prefix="values (" suffix=")" suffixOverrides="," >
        <if test="id != null" >
          #{id,jdbcType=VARCHAR},
        </if>
        <if test="hospCode != null" >
          #{hospCode,jdbcType=VARCHAR},
        </if>
        <if test="bizId != null" >
          #{bizId,jdbcType=VARCHAR},
        </if>
        <if test="orderNo != null" >
          #{orderNo,jdbcType=VARCHAR},
        </if>
        <if test="supplierId != null" >
          #{supplierId,jdbcType=VARCHAR},
        </if>
        <if test="buyPriceAll != null" >
          #{buyPriceAll,jdbcType=DECIMAL},
        </if>
        <if test="sellPriceAll != null" >
          #{sellPriceAll,jdbcType=DECIMAL},
        </if>
        <if test="auditCode != null" >
          #{auditCode,jdbcType=VARCHAR},
        </if>
        <if test="auditId != null" >
          #{auditId,jdbcType=VARCHAR},
        </if>
        <if test="auditName != null" >
          #{auditName,jdbcType=VARCHAR},
        </if>
        <if test="auditTime != null" >
          #{auditTime,jdbcType=TIMESTAMP},
        </if>
        <if test="crteId != null" >
          #{crteId,jdbcType=VARCHAR},
        </if>
        <if test="crteName != null" >
          #{crteName,jdbcType=VARCHAR},
        </if>
        <if test="crteTime != null" >
          #{crteTime,jdbcType=TIMESTAMP},
        </if>
      </trim>
    </insert>

    <update id="updateByPrimaryKeySelective" parameterType="cn.hsa.module.stro.purchase.dto.StroPurchaseDTO" >
      update stro_purchase
      <set >
        <if test="hospCode != null" >
          hosp_code = #{hospCode,jdbcType=VARCHAR},
        </if>
        <if test="bizId != null" >
          biz_id = #{bizId,jdbcType=VARCHAR},
        </if>
        <if test="orderNo != null" >
          order_no = #{orderNo,jdbcType=VARCHAR},
        </if>
        <if test="supplierId != null" >
          supplier_id = #{supplierId,jdbcType=VARCHAR},
        </if>
        <if test="buyPriceAll != null" >
          buy_price_all = #{buyPriceAll,jdbcType=DECIMAL},
        </if>
        <if test="sellPriceAll != null" >
          sell_price_all = #{sellPriceAll,jdbcType=DECIMAL},
        </if>
        <if test="auditCode != null" >
          audit_code = #{auditCode,jdbcType=VARCHAR},
        </if>
        <if test="auditId != null" >
          audit_id = #{auditId,jdbcType=VARCHAR},
        </if>
        <if test="auditName != null" >
          audit_name = #{auditName,jdbcType=VARCHAR},
        </if>
        <if test="auditTime != null" >
          audit_time = #{auditTime,jdbcType=TIMESTAMP},
        </if>
        <if test="crteId != null" >
          crte_id = #{crteId,jdbcType=VARCHAR},
        </if>
        <if test="crteName != null" >
          crte_name = #{crteName,jdbcType=VARCHAR},
        </if>
        <if test="crteTime != null" >
          crte_time = #{crteTime,jdbcType=TIMESTAMP},
        </if>
      </set>
      <where>
        <if test="id != null and id != ''">
          id = #{id,jdbcType=VARCHAR}
        </if>
        <if test="ids != null">
          id in (
          <foreach collection="ids" item="id" separator=",">
            #{id}
          </foreach>
          )
        </if>
      </where>
    </update>

    <update id="updateByPrimaryKey" parameterType="cn.hsa.module.stro.purchase.entity.StroPurchaseDO" >
      update stro_purchase
      set hosp_code = #{hospCode,jdbcType=VARCHAR},
        biz_id = #{bizId,jdbcType=VARCHAR},
        order_no = #{orderNo,jdbcType=VARCHAR},
        supplier_id = #{supplierId,jdbcType=VARCHAR},
        buy_price_all = #{buyPriceAll,jdbcType=DECIMAL},
        sell_price_all = #{sellPriceAll,jdbcType=DECIMAL},
        audit_code = #{auditCode,jdbcType=VARCHAR},
        audit_id = #{auditId,jdbcType=VARCHAR},
        audit_name = #{auditName,jdbcType=VARCHAR},
        audit_time = #{auditTime,jdbcType=TIMESTAMP},
        crte_id = #{crteId,jdbcType=VARCHAR},
        crte_name = #{crteName,jdbcType=VARCHAR},
        crte_time = #{crteTime,jdbcType=TIMESTAMP}
      where id = #{id,jdbcType=VARCHAR}
    </update>

    <!-- 查询采购计划结果集 -->
    <select id="queryStroPurchaseList" parameterType="cn.hsa.module.stro.purchase.dto.StroPurchaseDTO" resultMap="BaseResultMap">
      SELECT
          b.name supplierName,
          d.name bizName,
          s.id,
          s.hosp_code,
          s.biz_id,
          s.order_no,
          s.supplier_id,
          s.buy_price_all,
          s.sell_price_all,
          s.audit_code,
          s.audit_id,
          s.audit_name,
          s.audit_time,
          s.crte_id,
          s.crte_name,
          s.crte_time
      FROM
          stro_purchase s
          left join base_supplier b
          on s.supplier_id = b.id
          left join base_dept d
          on s.biz_id = d.id
      where
          s.hosp_code = #{hospCode,jdbcType=VARCHAR}
        <if test="bizId != null and bizId!=''" >
          AND s.biz_id = #{bizId,jdbcType=VARCHAR}
        </if>
        <if test="keyword != null and keyword!=''" >
          AND (s.order_no like concat('%',#{keyword},'%')
          or b.name like concat('%',#{keyword},'%')
          or b.abbr_pym like concat('%',#{keyword},'%') or b.abbr_wbm like concat('%',#{keyword},'%'))
        </if>
        <if test="supplierId != null and supplierId!=''" >
          AND s.supplier_id = #{supplierId,jdbcType=VARCHAR}
        </if>
        <if test="buyPriceAll != null and buyPriceAll!=''" >
          AND s.buy_price_all = #{buyPriceAll,jdbcType=DECIMAL}
        </if>
        <if test="sellPriceAll != null and sellPriceAll!=''" >
          AND s.sell_price_all = #{sellPriceAll,jdbcType=DECIMAL}
        </if>
        <if test="auditCode != null and auditCode!=''" >
          AND s.audit_code = #{auditCode,jdbcType=VARCHAR}
        </if>
        <if test="auditId != null and auditId!=''" >
          AND s.audit_id = #{auditId,jdbcType=VARCHAR}
        </if>
        <if test="auditName != null and auditName!=''" >
          AND s.audit_name = #{auditName,jdbcType=VARCHAR}
        </if>
        <if test="auditTime != null" >
          AND s.audit_time = #{auditTime,jdbcType=TIMESTAMP}
        </if>
        <if test="crteId != null and crteId!=''" >
          AND s.crte_id = #{crteId,jdbcType=VARCHAR}
        </if>
        <if test="crteName != null and crteName!=''" >
          AND s.crte_name = #{crteName,jdbcType=VARCHAR}
        </if>
        <if test="crteTime != null" >
          AND s.crte_time = #{crteTime,jdbcType=TIMESTAMP}
        </if>
        <if test="auditTimeStart != null">
          AND date(s.crte_time) &gt;= date(#{auditTimeStart})
        </if>
        <if test="auditTimeEnd != null">
         AND date(s.crte_time) &lt;= date(#{auditTimeEnd})
        </if>
         order by s.crte_time desc
    </select>
    <!-- 批量删除采购计划 -->
    <delete id="delPurchaseByIds">
      DELETE
      FROM
          stro_purchase
      where
      id IN(
      <foreach collection="ids" item="id" separator=",">
        #{id}
      </foreach>
      )
    </delete>

    <!-- 查询药品 -->
    <select id="queryBaseDrugByPage" parameterType="cn.hsa.module.base.drug.dto.BaseDrugDTO" resultMap="BaseDrugMap">
      SELECT
      a.id,
        '1' as itemCode,
      '药品' as itemCodeName,
        a.hosp_code,
        a.bfc_code,
        a.type_code,
        a.CODE,
        a.good_name as itemName,
        a.spec,
        a.price,
        a.unit_code,
        a.split_ratio,
        a.split_unit_code,
        a.last_buy_price,
        a.split_price,
        a.prod_code,
        a.good_pym,
        a.good_wbm,
        a.is_valid,
        a.crte_id,
        a.crte_name,
        a.crte_time,
        (select name from base_product p where p.code = a.prod_code and p.hosp_code = #{hospCode}) as prodName,
        (select id from base_product p where p.code = a.prod_code and p.hosp_code = #{hospCode}) as prodId,
        (select c.num from stro_stock c where a.id = c.item_id and c.hosp_code = #{hospCode} and c.biz_id = #{bizId}) AS stockNum
      FROM
        base_drug a
      where a.hosp_code = #{hospCode} and a.is_valid = '1'
        <if test="bigTypeCodeLsit != null and bigTypeCodeLsit.size() > 0">
        and a.big_type_code in
        <foreach collection="bigTypeCodeLsit" item="item" separator="," open="(" close=")">
          #{item}
        </foreach>
        </if>
        <if test="keyword !=null and keyword != ''">
          and (a.good_name like concat('%',#{keyword},'%')
          or a.usual_name like concat('%',#{keyword},'%')
          or a.good_pym like concat('%',#{keyword},'%')
          or a.good_wbm like concat('%',#{keyword},'%')
          or a.usual_pym like concat('%',#{keyword},'%')
          or a.usual_wbm like concat('%',#{keyword},'%'))
        </if>
    </select>
    <!-- 查询材料信息 -->
    <select id="queryMaterialPage" parameterType="cn.hsa.module.base.bmm.dto.BaseMaterialDTO" resultMap="BaseMaterialMap">
      SELECT
        a.id,
        '2' as itemCode,
        '材料' as itemCodeName,
        a.hosp_code,
        a.type_code,
        a.bfc_code,
        a.CODE,
        a.name as itemName,
        a.spec,
        a.price,
        a.unit_code,
        a.split_ratio,
        a.split_unit_code,
        a.last_buy_price,
        a.split_price,
        a.prod_code,
        a.pym good_pym,
        a.wbm good_wbm,
        a.is_valid,
        a.crte_id,
        a.crte_name,
        a.crte_time,
        (select name from base_product p where p.code = a.prod_code and p.hosp_code = #{hospCode}) as prodName,
        (select id from base_product p where p.code = a.prod_code and p.hosp_code = #{hospCode}) as prodId,
        (select c.num from stro_stock c where c.item_id = a.id and c.hosp_code = #{hospCode} and c.biz_id = #{bizId}) AS stockNum
        FROM
          base_material a
        where a.hosp_code = #{hospCode} and a.is_valid = '1'
          <if test="typeCode != null and typeCode != ''">
            AND a.type_code = #{typeCode}
          </if>
          <if test="keyword != null and keyword!=''" >
            and (a.name like concat('%',#{keyword},'%')
                 or a.pym like concat('%',#{keyword},'%')
                 or a.wbm like concat('%',#{keyword},'%'))
          </if>
    </select>

    <select id="queryDrugMaterialPage" parameterType="cn.hsa.module.base.drug.dto.BaseDrugDTO" resultMap="BaseDrugMap">
      SELECT
        A.*
      FROM
        (SELECT id,'1' itemCode,'药品' itemCodeName,hosp_code,bfc_code,type_code,CODE,good_name as itemName,spec,price,
         unit_code,split_ratio,split_unit_code,split_price,usage_code,drug_remark,dan,prod_code,good_pym,good_wbm,is_valid,
         crte_id,crte_name, crte_time,
         (select id from base_product p where p.code = prod_code and p.hosp_code = #{hospCode}) as prodId,
         (select num from stro_stock where item_id = id and hosp_code = #{hospCode} and biz_id = #{bizId}) AS stockNum,
         (select name from base_product c where prod_code = c.id and c.hosp_code = #{hospCode}) as prodName
        FROM
          base_drug where hosp_code = #{hospCode}
      <if test="bigTypeCodeLsit != null and bigTypeCodeLsit.size() > 0">
          and big_type_code in
          <foreach collection="bigTypeCodeLsit" item="item" separator="," open="(" close=")">
            #{item}
          </foreach>
      </if>
        UNION ALL
      SELECT id,'2' itemCode,'材料' itemCodeName,hosp_code,type_code,bfc_code,CODE,name as itemName,spec,price,unit_code,
         split_ratio,split_unit_code,split_price,use_code as usage_code,remark as drug_remark,reg_cert_no as dan,prod_code,
         pym good_pym,wbm good_wbm,is_valid,crte_id,crte_name,crte_time,
        (select id from base_product p where p.code = prod_code and p.hosp_code = #{hospCode}) as prodId,
        (select c.num from stro_stock c where item_id = c.id and c.hosp_code = #{hospCode} and c.biz_id = #{bizId}) AS stockNum,
        (select name from base_product c where prod_code = c.id and c.hosp_code = #{hospCode}) as prodName
      FROM
      base_material
      ) A
      WHERE A.hosp_code = #{hospCode} and A.is_valid = '1'
      <if test="keyword != null and keyword != ''">
        and (a.name like concat('%',#{keyword},'%')
        or a.pym like concat('%',#{keyword},'%')
        or a.wbm like concat('%',#{keyword},'%'))
      </if>
    </select>
    <!-- 查询供应商 -->
    <select id="queryBaseSupplierAll" parameterType="cn.hsa.module.base.bspl.dto.BaseSupplierDTO" resultType="cn.hsa.module.base.bspl.dto.BaseSupplierDTO">
      SELECT
        id,
        hosp_code,
        type_code,
        CODE,
        abbr,
        NAME,
        contact,
        phone,
        fax,
        post_code,
        email,
        bank,
        account,
        tax_num,
        address,
        remark,
        abbr_pym,
        abbr_wbm,
        name_pym,
        name_wbm,
        is_valid,
        crte_id,
        crte_name,
        crte_time
      FROM
        base_supplier
      where
      hosp_code = #{hospCode}
    </select>

    <select id="selectByPrimaryKeys" resultMap="BaseResultMap">
      select
      <include refid="Base_Column_List" />
      from stro_purchase
      where hosp_code = #{hospCode} and id in(
      <foreach collection="ids" separator="," item="id">
        #{id,jdbcType=VARCHAR}
      </foreach>
      )
    </select>

    <!-- 查询药库中库存不足需要按下限补充得项目 -->
    <select id="queryNeedSupplement" parameterType="java.util.Map" resultType="cn.hsa.module.stro.purchase.dto.StroPurchaseDetailDTO">
      SELECT
        a.item_id as itemId,
        (a.stock_min - a.num) as num,
        a.item_name as itemName,
        a.item_code as itemCode,
        a.num as stockNum,
        a.hosp_code as hospCode,
        a.spec,
        a.biz_id as bizId,
        a.unit_code as unitCode,
        case a.item_code when '1' then b.price when '2' then c.price end sellPrice,
        case a.item_code when '1' then b.last_buy_price when '2' then c.last_buy_price end buyPrice,
        case a.item_code when '1' then  b.price *(a.stock_min - a.num) when '2' then c.price *(a.stock_min - a.num) end sellPriceAll,
        case a.item_code when '1' then  b.last_buy_price *(a.stock_min - a.num) when '2' then c.last_buy_price *(a.stock_min - a.num) end buyPriceAll,
        (select p.id from base_product p where p.hosp_code = #{hospCode} and p.code = b.prod_code) as productId,
        (select supplier_id from stro_in s where s.hosp_code = #{hospCode} and a.biz_id = s.stock_id and s.id in
        (select d.in_id from stro_in_detail d where d.hosp_code = #{hospCode} and d.item_id = a.item_id) order by crte_time DESC limit 1) as supplierId
        FROM
        stro_stock a
        LEFT JOIN base_drug b ON a.item_id = b.id and a.hosp_code = b.hosp_code
        LEFT JOIN base_material c ON a.item_id = c.id and a.hosp_code = c.hosp_code
        where a.hosp_code = #{hospCode} and a.num &lt; a.stock_min and a.biz_id = #{bizId}
    </select>

    <!-- 查询药库中库存不足需要按上限补充项目 -->
    <select id="queryNeedSupplementUp" parameterType="java.util.Map" resultType="cn.hsa.module.stro.purchase.dto.StroPurchaseDetailDTO">
        SELECT
          a.item_id as itemId,
          (a.stock_max - a.num) as num,
          a.item_name as itemName,
          a.item_code as itemCode,
          a.num as stockNum,
          a.hosp_code as hospCode,
          a.spec,
          a.biz_id as bizId,
          a.unit_code as unitCode,
          case a.item_code when '1' then b.price when '2' then c.price end sellPrice,
          case a.item_code when '1' then b.last_buy_price when '2' then c.last_buy_price end buyPrice,
          case a.item_code when '1' then  b.price *(a.stock_max - a.num) when '2' then c.price *(a.stock_max - a.num) end sellPriceAll,
          case a.item_code when '1' then  b.last_buy_price *(a.stock_max - a.num) when '2' then c.last_buy_price *(a.stock_max - a.num) end buyPriceAll,
          (select p.id from base_product p where p.hosp_code = #{hospCode} and p.code = b.prod_code) as productId,
          (select supplier_id from stro_in s where s.hosp_code = #{hospCode} and a.biz_id = s.stock_id and s.id in
          (select d.in_id from stro_in_detail d where d.hosp_code = #{hospCode} and d.item_id = a.item_id) order by crte_time DESC limit 1) as supplierId
          FROM
          stro_stock a
          LEFT JOIN base_drug b ON a.item_id = b.id and a.hosp_code = b.hosp_code
          LEFT JOIN base_material c ON a.item_id = c.id and a.hosp_code = c.hosp_code
          where a.hosp_code = #{hospCode} and a.num &lt; a.stock_max and a.biz_id = #{bizId}
      </select>

     <select id="addSupplementStroByDate" parameterType="java.util.Map" resultType="cn.hsa.module.stro.purchase.dto.StroPurchaseDetailDTO">
        select
          a.biz_id as bizId,
          a.item_id as itemId,
          max(a.item_code) as itemCode,
          sum(a.num) as num,
          max(a.hosp_code) as hospCode,
          case max(a.item_code) when '1' then abs(sum(a.num) * d.price) when '2' then abs(sum(a.num) * c.price) end sellPriceAll,
          case max(a.item_code) when '1' then abs(sum(a.num) * d.last_buy_price) when '2' then abs(sum(a.num) * c.last_buy_price) end buyPriceAll,
          case max(a.item_code) when '1' then d.spec when '2' then c.spec end spec,
          max(a.item_name) as itemName,
          max(a.unit_code) as unitCode,
          case max(a.item_code) when '1' then d.last_buy_price when '2' then c.last_buy_price end buyPrice,
          case max(a.item_code) when '1' then d.price when '2' then c.price end sellPrice,
          (select c.id from base_product c where c.hosp_code = #{hospCode} and c.code = d.prod_code) as productId,
          (select supplier_id from stro_in s where s.hosp_code = #{hospCode} and a.biz_id = s.stock_id and s.id in
          (select d.in_id from stro_in_detail d where d.hosp_code = #{hospCode} and d.item_id = a.item_id) order by crte_time DESC limit 1) as supplierId,
          (select num from stro_stock st where st.hosp_code = #{hospCode} and st.item_id = a.item_id and st.biz_id = a.biz_id) as stockNum
          from stro_invoicing a
          left join base_drug d on a.hosp_code = d.hosp_code and a.item_id = d.id
          left join base_material c on a.item_id = c.id and a.hosp_code = c.hosp_code
          where a.hosp_code = #{hospCode} and a.outin_code in ('4','5','21') and a.biz_id = #{bizId}
           <if test="startDate != null and startDate!=''" >
             AND a.crte_time >= #{startDate}
           </if>
           <if test="startDate != null and startDate!=''" >
             <![CDATA[ AND a.crte_time <= DATE_ADD(STR_TO_DATE(#{endDate},'%Y-%m-%d'),INTERVAL 1 day)]]>
           </if>
          group by a.item_id,a.biz_id
     </select>
</mapper>
