<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.hsa.module.outpt.outptrefundapply.dao.OutptRefundApplyDAO">


    <insert id="saveOutptRefundAppy" parameterType="java.util.List">
        insert into outpt_refund_apply
            (id, hosp_code, cost_id, item_code, item_id, item_name, price, num, num_unit_code, refund_xplain, refund_code, crte_id, crte_name, crte_time, status, one_settle_id, settle_id)
        values
        <foreach collection="list" item="dto" index="index" separator=",">
            (
                #{dto.id},
                #{dto.hospCode},
                #{dto.costId},
                #{dto.itemCode},
                #{dto.itemId},
                #{dto.itemName},
                #{dto.price},
                #{dto.num},
                #{dto.numUnitCode},
                #{dto.refundXplain},
                #{dto.refundCode},
                #{dto.crteId},
                #{dto.crteName},
                #{dto.crteTime},
                #{dto.status},
                #{dto.oneSettleId},
                #{dto.settleId}
            )
        </foreach>

    </insert>

    <!-- 批量删除门诊退费申请数据 -->
    <delete id="deleteOutptRefundApplyByCostId" parameterType="java.util.List">
        delete from outpt_refund_apply where cost_id in
        <foreach collection="costIdList" item="item" index="index" open="(" separator="," close=")">
            #{item}
        </foreach>
    </delete>

    <select id="queryOutChargePage" resultType="cn.hsa.module.outpt.fees.dto.OutptSettleDTO" parameterType="cn.hsa.module.outpt.fees.dto.OutptSettleDTO">
        SELECT
        a.id,
        a.red_id,
        a.visit_id,
        a.settle_no,
        b.name,
        b.visit_no,
        b.gender_code,
        b.age,
        b.cert_no,
        b.out_profile,
        b.age_unit_code,
        a.patient_code,
        b.dept_name,
        b.doctor_name,
        a.total_price,
        a.total_price as invoice_price,
        IFNULL(a.self_price,0) as self_price,
        IFNULL(a.mi_price,0) as mi_price,
        a.is_settle,
        a.crte_name,
        a.settle_time,
        a.source_pay_code,
        a.order_no,
        a.status_code,
        a.actual_price,
        a.reality_price,
        d.name as preferentialTypeName,
        a.crte_time,
        ifnull(m.status, '0') as status,
        a.card_price as cardPrice
        FROM
        outpt_settle a
        left join outpt_visit b on a.visit_id = b.id
        left join base_preferential_type d on b.preferential_type_id = d.id
        left join (select settle_id, max(status) as status from outpt_refund_apply where hosp_code = #{hospCode} GROUP BY settle_id) m
            on m.settle_id = a.id
        where 1=1 and a.hosp_code = #{hospCode} and b.id is not null
        <if test="keyword != null and keyword != ''">
            and (b.name LIKE CONCAT('%',#{keyword},'%') or
            b.cert_no LIKE CONCAT('%',#{keyword},'%'))
        </if>
        <if test="startTime != null and startTime != ''">
            and a.settle_time &gt;= DATE_FORMAT(#{startTime},'%Y-%m-%d %H:%i:%s')
        </if>
        <if test="endTime != null and endTime != ''">
            and a.settle_time &lt;= DATE_FORMAT(#{endTime},'%Y-%m-%d %H:%i:%s')
        </if>
        <if test="doctorId != null and doctorId != ''">
            and b.doctor_id = #{doctorId}
        </if>
        <if test="deptId != null and deptId != ''">
            and b.dept_id = #{deptId}
        </if>
        <if test="isSettle != null and isSettle != ''">
            and a.is_settle = #{isSettle}
        </if>
        order by a.settle_no desc, a.settle_time desc
    </select>

    <select id="queryOutptPrescribes" resultType="cn.hsa.module.outpt.fees.dto.OutptCostDTO" parameterType="cn.hsa.module.outpt.fees.dto.OutptSettleDTO">
        SELECT
            a.*,
            ifnull(m.num, 0) as backNum,
            c.code as bfc_code,
            c.name as bfc_name,
            d.name as phar_name,
            e.name as exec_dept_name,
            b.content
        FROM
            outpt_cost a
            left join outpt_prescribe_detail b ON a.opd_id = b.id
            left join base_finance_classify c on a.bfc_id = c.id
            left join base_dept d on a.phar_id = d.id
            left join base_dept e on a.exec_dept_id = e.id
            left join outpt_refund_apply m on m.cost_id = a.id and m.hosp_code = a.hosp_code
        WHERE a.hosp_code = #{hospCode} and a.visit_id = #{visitId}
            and a.status_code = #{statusCode} and a.settle_id = #{id}
    </select>

    <update id="updateOutptRefundAppyStatus" parameterType="cn.hsa.module.outpt.fees.dto.OutptSettleDTO" >
        update outpt_refund_apply set status = '2' where settle_id = #{id} and hosp_code = #{hospCode}
    </update>

    <update id="updateUnconfirmedOutptRefundAppy" parameterType="cn.hsa.module.outpt.fees.dto.OutptSettleDTO" >
        update outpt_refund_apply set status = '1' where settle_id = #{id} and hosp_code = #{hospCode}
    </update>

    <delete id="deleteOutptRefundAppy" parameterType="cn.hsa.module.outpt.fees.dto.OutptSettleDTO" >
        delete from outpt_refund_apply  where settle_id = #{id} and hosp_code = #{hospCode} and status ='1'
    </delete>

    <select id="queryUncostList" resultType="cn.hsa.module.outpt.fees.dto.OutptCostDTO">
        select * from outpt_cost where settle_id =#{id} and hosp_code = #{hospCode}
        and id in
        <foreach collection="costIdList" item="item" index="index" open="(" separator="," close=")">
            #{item}
        </foreach>
        and status_code ='0'
    </select>

</mapper>