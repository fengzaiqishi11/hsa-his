<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<mapper namespace="cn.hsa.module.outpt.statement.dao.PatientCostLedgerDAO">

    <resultMap type="cn.hsa.module.inpt.doctor.dto.InptVisitDTO" id="InptVisitMap">
        <result property="id" column="id" jdbcType="VARCHAR"/>
        <result property="hospCode" column="hosp_code" jdbcType="VARCHAR"/>
        <result property="profileId" column="profile_id" jdbcType="VARCHAR"/>
        <result property="inProfile" column="in_profile" jdbcType="VARCHAR"/>
        <result property="inNo" column="in_no" jdbcType="VARCHAR"/>
        <result property="name" column="name" jdbcType="VARCHAR"/>
        <result property="genderCode" column="gender_code" jdbcType="VARCHAR"/>
        <result property="age" column="age" jdbcType="INTEGER"/>
        <result property="ageUnitCode" column="age_unit_code" jdbcType="VARCHAR"/>
        <result property="birthday" column="birthday" jdbcType="OTHER"/>
        <result property="nationCode" column="nation_code" jdbcType="VARCHAR"/>
        <result property="certCode" column="cert_code" jdbcType="VARCHAR"/>
        <result property="certNo" column="cert_no" jdbcType="VARCHAR"/>
        <result property="marryCode" column="marry_code" jdbcType="VARCHAR"/>
        <result property="phone" column="phone" jdbcType="VARCHAR"/>
        <result property="address" column="address" jdbcType="VARCHAR"/>
        <result property="preferentialTypeId" column="preferential_type_id" jdbcType="VARCHAR"/>
        <result property="patientCode" column="patient_code" jdbcType="VARCHAR"/>
        <result property="receiveHospName" column="receive_hosp_name" jdbcType="VARCHAR"/>
        <result property="bedId" column="bed_id" jdbcType="VARCHAR"/>
        <result property="bedName" column="bed_name" jdbcType="VARCHAR"/>
        <result property="nursingCode" column="nursing_code" jdbcType="VARCHAR"/>
        <result property="dietType" column="diet_type" jdbcType="VARCHAR"/>
        <result property="illnessCode" column="Illness_code" jdbcType="VARCHAR"/>
        <result property="statusCode" column="status_code" jdbcType="VARCHAR"/>
        <result property="inWardId" column="in_ward_id" jdbcType="VARCHAR"/>
        <result property="inDeptId" column="in_dept_id" jdbcType="VARCHAR"/>
        <result property="inDeptName" column="in_dept_name" jdbcType="VARCHAR"/>
        <result property="inTime" column="in_time" jdbcType="TIMESTAMP"/>
        <result property="zzDoctorId" column="zz_doctor_id" jdbcType="VARCHAR"/>
        <result property="zzDoctorName" column="zz_doctor_name" jdbcType="VARCHAR"/>
        <result property="jzDoctorId" column="jz_doctor_id" jdbcType="VARCHAR"/>
        <result property="jzDoctorName" column="jz_doctor_name" jdbcType="VARCHAR"/>
        <result property="zgDoctorId" column="zg_doctor_id" jdbcType="VARCHAR"/>
        <result property="zgDoctorName" column="zg_doctor_name" jdbcType="VARCHAR"/>
        <result property="inRemark" column="in_remark" jdbcType="VARCHAR"/>
        <result property="inModeCode" column="in_mode_code" jdbcType="VARCHAR"/>
        <result property="inDiseaseId" column="in_disease_id" jdbcType="VARCHAR"/>
        <result property="inDiseaseName" column="in_disease_name" jdbcType="VARCHAR"/>
        <result property="inDiseaseIcd10" column="in_disease_icd10" jdbcType="VARCHAR"/>
        <result property="inSituationCode" column="in_situation_code" jdbcType="VARCHAR"/>
        <result property="outptVisitNo" column="outpt_visit_no" jdbcType="VARCHAR"/>
        <result property="outptDoctorId" column="outpt_doctor_id" jdbcType="VARCHAR"/>
        <result property="outptDoctorName" column="outpt_doctor_name" jdbcType="VARCHAR"/>
        <result property="outptDiseaseId" column="outpt_disease_id" jdbcType="VARCHAR"/>
        <result property="outptDiseaseName" column="outpt_disease_name" jdbcType="VARCHAR"/>
        <result property="outptDiseaseIcd10" column="outpt_disease_icd10" jdbcType="VARCHAR"/>
        <result property="outWardId" column="out_ward_id" jdbcType="VARCHAR"/>
        <result property="outDeptId" column="out_dept_id" jdbcType="VARCHAR"/>
        <result property="outDeptName" column="out_dept_name" jdbcType="VARCHAR"/>
        <result property="outTime" column="out_time" jdbcType="TIMESTAMP"/>
        <result property="outDiseaseId" column="out_disease_id" jdbcType="VARCHAR"/>
        <result property="outDiseaseName" column="out_disease_name" jdbcType="VARCHAR"/>
        <result property="outDiseaseIcd10" column="out_disease_icd10" jdbcType="VARCHAR"/>
        <result property="outOperId" column="out_oper_id" jdbcType="VARCHAR"/>
        <result property="outOperName" column="out_oper_name" jdbcType="VARCHAR"/>
        <result property="outOperTime" column="out_oper_time" jdbcType="TIMESTAMP"/>
        <result property="outSituationCode" column="out_situation_code" jdbcType="VARCHAR"/>
        <result property="outRemark" column="out_remark" jdbcType="VARCHAR"/>
        <result property="outModeCode" column="out_mode_code" jdbcType="VARCHAR"/>
        <result property="isArchive" column="is_archive" jdbcType="VARCHAR"/>
        <result property="archiveTime" column="archive_time" jdbcType="TIMESTAMP"/>
        <result property="archiveId" column="archive_id" jdbcType="VARCHAR"/>
        <result property="archiveName" column="archive_name" jdbcType="VARCHAR"/>
        <result property="insureCode" column="insure_code" jdbcType="VARCHAR"/>
        <result property="insureOrgCode" column="insure_org_code" jdbcType="VARCHAR"/>
        <result property="insureNo" column="insure_no" jdbcType="VARCHAR"/>
        <result property="insureBizCode" column="insure_biz_code" jdbcType="VARCHAR"/>
        <result property="insureTreatCode" column="insure_treat_code" jdbcType="VARCHAR"/>
        <result property="insurePatientId" column="insure_patient_id" jdbcType="VARCHAR"/>
        <result property="insureRemark" column="insure_remark" jdbcType="VARCHAR"/>
        <result property="totalAdvance" column="total_advance" jdbcType="NUMERIC"/>
        <result property="totalCost" column="total_cost" jdbcType="NUMERIC"/>
        <result property="totalBalance" column="total_balance" jdbcType="NUMERIC"/>
        <result property="crteId" column="crte_id" jdbcType="VARCHAR"/>
        <result property="crteName" column="crte_name" jdbcType="VARCHAR"/>
        <result property="inTimestring" column="in_time" jdbcType="TIMESTAMP"/>
        <result property="inTime" column="in_time" jdbcType="TIMESTAMP"/>
        <result property="crteTime" column="crte_time" jdbcType="TIMESTAMP"/>
        <result property="keyword" column="keyword" jdbcType="VARCHAR"/>
        <result property="sourceTjCode" column="source_tj_code" jdbcType="VARCHAR"/>
        <result property="selfPrice" column="self_price" jdbcType="NUMERIC"/>
        <result property="miPrice" column="mi_price" jdbcType="NUMERIC"/>
    </resultMap>

    <resultMap id="dynamicTableMap" type="cn.hsa.base.DynamicTable">
        <id property="id" column="id" jdbcType="VARCHAR"></id>
        <result property="label" column="label" jdbcType="VARCHAR"></result>

        <collection property="children" ofType="cn.hsa.base.DynamicTableChildren" javaType="java.util.List">
            <id property="prop" column="prop" jdbcType="VARCHAR"></id>
            <result property="label" column="labelBfc" jdbcType="VARCHAR"></result>
            <result property="showSummary" column="showSummary" jdbcType="BOOLEAN"></result>
            <result property="toFixed" column="toFixed" jdbcType="VARCHAR"></result>
        </collection>
    </resultMap>

    <!--病人台账标题-->
    <select id="getVisitTitle" resultType="cn.hsa.module.inpt.doctor.dto.InptCostDTO" parameterType="cn.hsa.module.inpt.doctor.dto.InptVisitDTO">
        select
        a.bfc_id,c.name as bfcName
        from inpt_cost a
        left join inpt_settle b on a.settle_id = b.id and a.hosp_code = b.hosp_code and b.status_code = '0'
        join base_finance_classify c on a.bfc_id = c.id and a.hosp_code = c.hosp_code
        join inpt_visit d on a.visit_id = d.id and a.hosp_code = d.hosp_code
        where a.hosp_code = #{hospCode}
        <if test="statusCode != null and statusCode != ''">
            and d.status_code = #{statusCode}
            <if test="statusCode =='7'">
                and b.id is not null
                <if test="startDate != null">
                    and date(b.settle_time) &gt;= date(#{startDate})
                </if>
                <if test="endDate != null">
                    and date(b.settle_time) &lt;= date(#{endDate})
                </if>
            </if>
            <if test="statusCode =='5'">
                <if test="startDate != null">
                    and date(d.out_time) &gt;= date(#{startDate})
                </if>
                <if test="endDate != null">
                    and date(d.out_time) &lt;= date(#{endDate})
                </if>
            </if>
            <if test="statusCode =='2'">
                <if test="startDate != null">
                    and date(d.in_time) &gt;= date(#{startDate})
                </if>
                <if test="endDate != null">
                    and date(d.in_time) &lt;= date(#{endDate})
                </if>
            </if>
        </if>
        <!--过滤条件增加医生名称-->
        <if test="doctorName != null and doctorName != ''">
            and (
            d.outpt_doctor_name like concat('%', #{doctorName}, '%')
            or d.zz_doctor_name like concat('%', #{doctorName}, '%')
            or d.jz_doctor_name like concat('%', #{doctorName}, '%')
            or d.zg_doctor_name like concat('%', #{doctorName}, '%')
            )
        </if>
        group by a.bfc_id,c.name
    </select>

    <!--病人明细-->
    <select id="queryPatirntCostLedger" resultType="java.util.Map" parameterType="cn.hsa.module.inpt.doctor.dto.InptVisitDTO">
        select a.id,
        a.hosp_code,
        a.profile_id,
        a.in_profile,
        a.in_no,
        case when ib.id is null then a.name else ib.name end as name,
        case when ib.id is null then a.gender_code else ib.gender_code end as gender_code,
        case when ib.id is null then a.age else 0 end as age,
        a.age_unit_code,
        a.birthday,
        a.nation_code,
        a.cert_code,
        a.cert_no,
        a.marry_code,
        a.phone,
        a.address,
        a.preferential_type_id,
        case when ib.id is null then a.patient_code else '' end as patient_code,
        a.receive_hosp_name,
        a.bed_id,
        a.bed_name,
        a.nursing_code,
        a.diet_type,
        a.Illness_code,
        a.status_code,
        a.in_ward_id,
        a.in_dept_id,
        a.in_dept_name,
        case when ib.id is null then a.in_time else ib.birth_time end as in_time,
        a.zz_doctor_id,
        a.zz_doctor_name,
        a.jz_doctor_id,
        a.jz_doctor_name,
        a.zg_doctor_id,
        a.zg_doctor_name,
        a.in_remark,
        a.in_mode_code,
        a.in_disease_id,
        case when ib.id is null then a.in_disease_name else '' end as in_disease_name,
        a.in_disease_icd10,
        a.in_situation_code,
        a.outpt_visit_no,
        a.outpt_doctor_id,
        a.outpt_doctor_name,
        a.outpt_disease_id,
        a.outpt_disease_name,
        a.outpt_disease_icd10,
        a.out_ward_id,
        a.out_dept_id,
        a.out_dept_name,
        a.out_time,
        a.out_disease_id,
        a.out_disease_name,
        a.out_disease_icd10,
        a.out_oper_id,
        a.out_oper_name,
        a.out_oper_time,
        a.out_situation_code,
        a.out_remark,
        a.out_mode_code,
        a.is_archive,
        a.archive_time,
        a.archive_id,
        a.archive_name,
        a.insure_code,
        a.insure_org_code,
        a.insure_no,
        a.insure_biz_code,
        a.insure_treat_code,
        a.insure_patient_id,
        a.insure_remark,
        case when ib.id is null then a.total_advance else 0 end as total_advance,
        a.total_cost,
        a.total_balance,
        a.crte_id,
        a.crte_name,
        a.crte_time,
        c.settle_time,
        c.reality_price totalCost,
        c.settle_take_price as settleTakePrice,
        c.settle_back_price as settleBackPrice,
        c.mi_price as miPrice,
        case when ib.id is null then (case when a.out_time is null or DATEDIFF(ifnull(a.out_time, now()),a.in_time)=0 then 1 else DATEDIFF(ifnull(a.out_time, now()),a.in_time) end)
        else (case when a.out_time is null or DATEDIFF(ifnull(a.out_time, now()),ib.birth_time)=0 then 1 else DATEDIFF(ifnull(a.out_time, now()),ib.birth_time) end) end as inDay,
        b.*
        from inpt_visit a
        left join inpt_settle c on a.id = c.visit_id and a.hosp_code = c.hosp_code and c.status_code = '0'
        left join (
        select ${sqlStr} d.id visistID, c.baby_id
        from inpt_visit d
        join inpt_cost a on a.visit_id = d.id and a.hosp_code = d.hosp_code
        left join inpt_settle c on a.hosp_code = c.hosp_code and  a.visit_id = c.visit_id and c.id = a.settle_id
        where a.hosp_code = #{hospCode}
        <if test="statusCode != null and statusCode != ''">
            and d.status_code = #{statusCode}
            <if test="statusCode =='7'.toString()">

                <if test="startDate != null">
                    and date(c.settle_time) &gt;= date(#{startDate})
                </if>
                <if test="endDate != null">
                    and date(c.settle_time) &lt;= date(#{endDate})
                </if>
            </if>
            <if test="statusCode =='5'.toString()">
                <if test="startDate != null">
                    and date(d.out_time) &gt;= date(#{startDate})
                </if>
                <if test="endDate != null">
                    and date(d.out_time) &lt;= date(#{endDate})
                </if>
            </if>
            <if test="statusCode =='2'.toString()">
                <if test="startDate != null">
                    and date(d.in_time) &gt;= date(#{startDate})
                </if>
                <if test="endDate != null">
                    and date(d.in_time) &lt;= date(#{endDate})
                </if>
            </if>
        </if>
        <!--过滤条件增加医生名称-->
        <if test="doctorName != null and doctorName != ''">
            and (
            d.outpt_doctor_name like concat('%', #{doctorName}, '%')
            or d.zz_doctor_name like concat('%', #{doctorName}, '%')
            or d.jz_doctor_name like concat('%', #{doctorName}, '%')
            or d.zg_doctor_name like concat('%', #{doctorName}, '%')
            )
        </if>
        group by c.baby_id, d.id
        ) b on c.visit_id = b.visistID and (c.baby_id = b.baby_id || (b.baby_id is null and c.baby_id is null) )
        left join inpt_baby ib on ib.hosp_code = a.hosp_code and ib.visit_id = a.id and ib.id = c.baby_id
        where a.hosp_code = #{hospCode}
        <if test="statusCode != null and statusCode != ''">
            and a.status_code = #{statusCode}
            <if test="statusCode =='7'.toString()">
                <if test="startDate != null">
                    and date(c.settle_time) &gt;= date(#{startDate})
                </if>
                <if test="endDate != null">
                    and date(c.settle_time) &lt;= date(#{endDate})
                </if>
            </if>
            <if test="statusCode =='5'.toString()">
                <if test="startDate != null">
                    and date(a.out_time) &gt;= date(#{startDate})
                </if>
                <if test="endDate != null">
                    and date(a.out_time) &lt;= date(#{endDate})
                </if>
            </if>
            <if test="statusCode =='2'.toString()">
                <if test="startDate != null">
                    and date(a.in_time) &gt;= date(#{startDate})
                </if>
                <if test="endDate != null">
                    and date(a.in_time) &lt;= date(#{endDate})
                </if>
            </if>
        </if>
        <!--过滤条件增加医生名称-->
        <if test="doctorName != null and doctorName != ''">
            and (
            a.outpt_doctor_name like concat('%', #{doctorName}, '%')
            or a.zz_doctor_name like concat('%', #{doctorName}, '%')
            or a.jz_doctor_name like concat('%', #{doctorName}, '%')
            or a.zg_doctor_name like concat('%', #{doctorName}, '%')
            )
        </if>
        order by a.out_time desc
    </select>

    <!--病人科室-->
    <select id="queryPatirntCostDeptLedger" resultType="java.util.Map" parameterType="cn.hsa.module.inpt.doctor.dto.InptVisitDTO">
        select max(a.out_dept_name) outDeptName,
        a.out_dept_id outDeptId,
        count(a.id) peopleNum,
        sum(c.reality_price) totalCost,
        sum(c.settle_take_price) as settleTakePriceAll,
        sum(c.settle_back_price) as settleBackPriceAll,
        b.*
        from inpt_visit a
        join (
        select ${sqlStr} d.out_dept_id
        from inpt_visit d
        join inpt_cost a on a.visit_id = d.id and a.hosp_code = d.hosp_code
        left join inpt_settle c on a.visit_id = c.visit_id and a.hosp_code = c.hosp_code
        where a.hosp_code = #{hospCode}
        <if test="statusCode != null and statusCode != ''">
            and d.status_code = #{statusCode}
            <if test="statusCode =='7'.toString()">
                and c.id is not null
                <if test="startDate != null">
                    and date(c.settle_time) &gt;= date(#{startDate})
                </if>
                <if test="endDate != null">
                    and date(c.settle_time) &lt;= date(#{endDate})
                </if>
            </if>
            <if test="statusCode =='5'.toString()">
                <if test="startDate != null">
                    and date(d.out_time) &gt;= date(#{startDate})
                </if>
                <if test="endDate != null">
                    and date(d.out_time) &lt;= date(#{endDate})
                </if>
            </if>
            <if test="statusCode =='2'.toString()">
                <if test="startDate != null">
                    and date(d.in_time) &gt;= date(#{startDate})
                </if>
                <if test="endDate != null">
                    and date(d.in_time) &lt;= date(#{endDate})
                </if>
            </if>
        </if>
        <!--过滤条件增加医生名 称-->
        <if test="doctorName != null and doctorName != ''">
            and (
            d.outpt_doctor_name like concat('%', #{doctorName}, '%')
            or d.zz_doctor_name like concat('%', #{doctorName}, '%')
            or d.jz_doctor_name like concat('%', #{doctorName}, '%')
            or d.zg_doctor_name like concat('%', #{doctorName}, '%')
            )
        </if>
        group by d.out_dept_id
        ) b on a.out_dept_id = b.out_dept_id
        left join inpt_settle c on a.id = c.visit_id and a.hosp_code = c.hosp_code and c.status_code = '0'
        where a.hosp_code = #{hospCode}
        <if test="statusCode != null and statusCode != ''">
            and a.status_code = #{statusCode}
            <if test="statusCode =='7'.toString()">

                <if test="startDate != null">
                    and date(c.settle_time) &gt;= date(#{startDate})
                </if>
                <if test="endDate != null">
                    and date(c.settle_time) &lt;= date(#{endDate})
                </if>
            </if>
            <if test="statusCode =='5'.toString()">
                <if test="startDate != null">
                    and date(a.out_time) &gt;= date(#{startDate})
                </if>
                <if test="endDate != null">
                    and date(a.out_time) &lt;= date(#{endDate})
                </if>
            </if>
            <if test="statusCode =='2'.toString()">
                <if test="startDate != null">
                    and date(a.in_time) &gt;= date(#{startDate})
                </if>
                <if test="endDate != null">
                    and date(a.in_time) &lt;= date(#{endDate})
                </if>
            </if>
        </if>
        <!--过滤条件增加医生名称-->
        <if test="doctorName != null and doctorName != ''">
            and (
            a.outpt_doctor_name like concat('%', #{doctorName}, '%')
            or a.zz_doctor_name like concat('%', #{doctorName}, '%')
            or a.jz_doctor_name like concat('%', #{doctorName}, '%')
            or a.zg_doctor_name like concat('%', #{doctorName}, '%')
            )
        </if>
        group by a.out_dept_id
    </select>


    <!--查询病人费用-->
    <select id="queryPatirntCostDetail" resultType="cn.hsa.module.inpt.doctor.dto.InptCostDTO" parameterType="cn.hsa.module.inpt.doctor.dto.InptCostDTO">
        select id, hosp_code, visit_id, baby_id, iat_id, iatd_group_no, iatd_seq_no, advice_exec_id, source_code, source_id, old_cost_id, source_dept_id,
        in_dept_id, bfc_id, item_code, item_id, item_name, price, num, spec, prep_code, dosage, dosage_unit_code, usage_code, rate_id, speed_code, use_days,
        num_unit_code, total_num, total_num_unit_code, herb_note_code, use_code, herb_num, total_price, preferential_price, reality_price, back_num,
        doctor_id, doctor_name, dept_id, phar_id, is_dist, is_give, back_code, is_ok, ok_id, ok_name, ok_time, settle_code, settle_id, is_check,
        check_id, check_name, check_time, zz_doctor_id, zz_doctor_name, jz_doctor_id, jz_doctor_name, zg_doctor_id, zg_doctor_name,
        exec_id, exec_name, exec_time, exec_dept_id, plan_exec_time, status_code, is_cost, cost_time, crte_id, crte_name, crte_time,
        (select b.name from base_finance_classify b where bfc_id = b.id and b.hosp_code = #{hospCode}) as bfcName
        from inpt_cost a
        where a.hosp_code = #{hospCode}
        <if test="visitId != null and visitId != ''">
            and a.visit_id = #{visitId}
        </if>
        <if test="sourceDeptId != null and sourceDeptId != ''">
            and source_dept_id = #{sourceDeptId}
        </if>
        <if test="startTime != null">
            and date(crte_time) &gt;= date(#{startTime})
        </if>
        <if test="stopTime != null">
            and date(crte_time) &lt;= date(#{stopTime})
        </if>
        <if test="ids != null and ids.size()>0">
            and a.visit_id in
            <foreach collection="ids" item="id" separator="," open="(" close=")">
                #{id}
            </foreach>
        </if>
    </select>
    <!--按科室病人费用查询报表统计-->
    <select id="queryCostByDept" resultType="java.util.Map">
      select
         a.out_dept_id as outDeptId,
         max(a.out_dept_name) as outDeptName,
         count(0) as peopleNum,
         sum(a.total_cost) as totalCost,
         sum(b.settle_take_price) as settleTakePriceAll,
         sum(b.settle_back_price) as settleBackPriceAll
         from inpt_visit a left join inpt_settle b on a.id = b.visit_id and a.hosp_code = b.hosp_code
         where a.hosp_code = #{hospCode} and a.status_code = #{statusCode}
         group by a.out_dept_id
    </select>
    <!--药库实时进销存报表/按零售价-->
    <select id="queryStroInvoicingLedger" resultType="java.util.Map" parameterType="cn.hsa.module.stro.stroinvoicing.dto.StroInvoicingDTO">
        SELECT
        a.item_id itemId,
        max(a.item_name) itemName,
        max(a.unit_code) unitCode,
        (select b.name from base_dept b where b.id = max(a.biz_id) and b.hosp_code = #{hospCode}) deptName,
        case max(a.item_code) when '1' then max(b.spec) when '2' then max(c.spec) end spec,
        case max(a.item_code) when '1' then max(b.code) when '2' then max(c.code) end drugCode,
        ifnull((select d.up_sell_price_all/d.up_surplus_num from stro_invoicing d where d.item_id = a.item_id and d.id = min(a.id)),0)upSellPrice,
        (select d.sell_price from stro_invoicing d where d.item_id = a.item_id and d.hosp_code = #{hospCode} and d.id = max(a.id)) sellPrice,
        (select d.surplus_num from stro_invoicing d where d.item_id = a.item_id and d.hosp_code = #{hospCode} and d.id = max(a.id)) num,
        (select d.sell_price_all from stro_invoicing d where d.item_id = a.item_id and d.hosp_code = #{hospCode} and d.id = max(a.id)) sellPriceAll,
        (select d.up_surplus_num from stro_invoicing d where d.item_id = a.item_id and d.hosp_code = #{hospCode} and d.id = min(a.id)) upNum,
        ifnull((select d.up_sell_price_all from stro_invoicing d where d.item_id = a.item_id and d.hosp_code = #{hospCode} and d.id = min(a.id)),0) upSellPriceAll,
        sum(if( a.outin_code='2',a.sell_price * a.num,0)) stroInNumPriceAll,
        sum(if( a.outin_code='2',a.num,0)) stroInNum,
        sum(if( a.outin_code='3',a.sell_price * a.num,0)) returnSuplPriceAll,
        sum(if( a.outin_code='3',a.num,0))  returnSuplPriceNum,
        sum(if( a.outin_code='4',a.sell_price * a.num,0)) stroToDeptPriAll,
        sum(if( a.outin_code='4',a.num,0)) stroToDeptPriNum,
        sum(if( a.outin_code='5',a.sell_price * a.num,0)) stroToPharPriAll,
        sum(if( a.outin_code='5',a.num,0)) stroToPharPriNum,
        sum(if( a.outin_code='8',a.sell_price * a.num,0)) reportLossesPriAll,
        sum(if( a.outin_code='8',a.num,0)) reportLossesNum,
        sum(if( a.outin_code='21',a.sell_price * a.num,0)) pharReturnStroPriAll,
        sum(if( a.outin_code='21',a.num,0)) pharReturnStroNum,
        sum(if( a.outin_code='24' and a.sell_price_all > a.up_sell_price_all,a.sell_price_all - a.up_sell_price_all,0)) adjustProfitPriAll,
        sum(if( a.outin_code='24' and a.sell_price_all &lt; a.up_sell_price_all, a.sell_price_all - a.up_sell_price_all,0)) adjustLossPriAll,
        sum(if( a.outin_code='7' and a.num &lt; 0,a.sell_price * a.num,0)) takeStockSubtractPriAll,
        sum(if( a.outin_code='7' and a.num &lt; 0,a.num,0)) takeStockSubtractNum,
        sum(if( a.outin_code='7' and a.num > 0,a.sell_price * a.num,0)) takeStockAddPriAll,
        sum(if( a.outin_code='7' and a.num > 0, a.num,0)) takeStockAddNum
        FROM
        stro_invoicing a
        left join base_drug b on a.item_id = b.id and a.hosp_code = b.hosp_code and a.item_code = "1"
        left join base_material c on a.item_id = c.id and a.hosp_code = c.hosp_code and a.item_code = "2"
        where a.hosp_code = #{hospCode}
        and a.outin_code in ('2','3','4','5','7','8','21','24')
        and a.biz_id in (select p.id from base_dept p where p.type_code in ("13","3") and p.hosp_code = #{hospCode})
        <if test="drugType != null and drugType != ''">
            and b.type_code = #{drugType}
        </if>
        <if test="materialType != null and materialType != ''">
            and c.type_code = #{materialType}
        </if>
        <if test="bizId != null and bizId != ''">
            and a.biz_id = #{bizId}
        </if>
        /*开始日期*/
        <if test="startDate != null">
            and date(a.crte_time) &gt;=date(#{startDate})
        </if>
        /*结束日期*/
        <if test="endDate != null">
            and date(a.crte_time) &lt;= date(#{endDate})
        </if>
        <if test="keyword != null and keyword != ''">
            and (
            a.item_name like concat('%', #{keyword}, '%')
            or b.usual_pym like concat('%', #{keyword}, '%')
            or b.usual_wbm like concat('%', #{keyword}, '%')
            or c.pym like concat('%', #{keyword}, '%')
            or c.wbm like concat('%', #{keyword}, '%'))
        </if>
        group by a.item_id
    </select>
    <!--药库实时进销存报表/按购进价-->
    <select id="queryStroInvoicingLedgerBuy" resultType="java.util.Map" parameterType="cn.hsa.module.stro.stroinvoicing.dto.StroInvoicingDTO">
        SELECT
        a.item_id itemId,
        max(a.item_name) itemName,
        max(a.unit_code) unitCode,
        (select b.name from base_dept b where b.id = max(a.biz_id) and b.hosp_code = #{hospCode}) deptName,
        case max(a.item_code) when '1' then max(b.spec) when '2' then max(c.spec) end spec,
        case max(a.item_code) when '1' then max(b.code) when '2' then max(c.code) end drugCode,
        ifnull((select d.up_buy_price_all/d.up_surplus_num from stro_invoicing d where d.item_id = a.item_id and d.id = min(a.id)),0)upSellPrice,
        (select d.buy_price from stro_invoicing d where d.item_id = a.item_id and d.hosp_code = #{hospCode} and d.id = max(a.id)) sellPrice,
        (select d.surplus_num from stro_invoicing d where d.item_id = a.item_id and d.hosp_code = #{hospCode} and d.id = max(a.id)) num,
        (select d.buy_price_all from stro_invoicing d where d.item_id = a.item_id and d.hosp_code = #{hospCode} and d.id = max(a.id)) sellPriceAll,
        (select d.up_surplus_num from stro_invoicing d where d.item_id = a.item_id and d.hosp_code = #{hospCode} and d.id = min(a.id)) upNum,
        ifnull((select d.up_buy_price_all from stro_invoicing d where d.item_id = a.item_id and d.hosp_code = #{hospCode} and d.id = min(a.id)),0) upSellPriceAll,
        sum(if( a.outin_code='2',a.buy_price * a.num,0)) stroInNumPriceAll,
        sum(if( a.outin_code='2',a.num,0)) stroInNum,
        sum(if( a.outin_code='3',a.buy_price * a.num,0)) returnSuplPriceAll,
        sum(if( a.outin_code='3',a.num,0))  returnSuplPriceNum,
        sum(if( a.outin_code='4',a.buy_price * a.num,0)) stroToDeptPriAll,
        sum(if( a.outin_code='4',a.num,0)) stroToDeptPriNum,
        sum(if( a.outin_code='5',a.buy_price * a.num,0)) stroToPharPriAll,
        sum(if( a.outin_code='5',a.num,0)) stroToPharPriNum,
        sum(if( a.outin_code='8',a.buy_price * a.num,0)) reportLossesPriAll,
        sum(if( a.outin_code='8',a.num,0)) reportLossesNum,
        sum(if( a.outin_code='21',a.buy_price * a.num,0)) pharReturnStroPriAll,
        sum(if( a.outin_code='21',a.num,0)) pharReturnStroNum,
        sum(if( a.outin_code='24' and a.buy_price_all > a.up_buy_price_all,a.buy_price_all - a.up_buy_price_all,0)) adjustProfitPriAll,
        sum(if( a.outin_code='24' and a.buy_price_all &lt; a.up_buy_price_all, a.buy_price_all - a.up_buy_price_all,0)) adjustLossPriAll,
        sum(if( a.outin_code='7' and a.num &lt; 0,a.buy_price * a.num,0)) takeStockSubtractPriAll,
        sum(if( a.outin_code='7' and a.num &lt; 0,a.num,0)) takeStockSubtractNum,
        sum(if( a.outin_code='7' and a.num > 0,a.buy_price * a.num,0)) takeStockAddPriAll,
        sum(if( a.outin_code='7' and a.num > 0, a.num,0)) takeStockAddNum
        FROM
        stro_invoicing a
        left join base_drug b on a.item_id = b.id and a.hosp_code = b.hosp_code and a.item_code = "1"
        left join base_material c on a.item_id = c.id and a.hosp_code = c.hosp_code and a.item_code = "2"
        where a.hosp_code = #{hospCode}
        and a.outin_code in ('2','3','4','5','7','8','21','24')
        and a.biz_id in (select p.id from base_dept p where p.type_code in ("13","3") and p.hosp_code = #{hospCode})
        <if test="drugType != null and drugType != ''">
            and b.type_code = #{drugType}
        </if>
        <if test="materialType != null and materialType != ''">
            and c.type_code = #{materialType}
        </if>
        <if test="bizId != null and bizId != ''">
            and a.biz_id = #{bizId}
        </if>
        /*开始日期*/
        <if test="startDate != null">
            and date(a.crte_time) &gt;=date(#{startDate})
        </if>
        /*结束日期*/
        <if test="endDate != null">
            and date(a.crte_time) &lt;= (#{endDate})
        </if>

        <if test="keyword != null and keyword != ''">
            and (
            a.item_name like concat('%', #{keyword}, '%')
            or b.usual_pym like concat('%', #{keyword}, '%')
            or b.usual_wbm like concat('%', #{keyword}, '%')
            or c.pym like concat('%', #{keyword}, '%')
            or c.wbm like concat('%', #{keyword}, '%'))
        </if>
        group by a.item_id
    </select>
    <!--药房实时进销存报表/按零售价-->
    <select id="queryPharInvoicingLedger" resultType="java.util.Map" parameterType="cn.hsa.module.stro.stroinvoicing.dto.StroInvoicingDTO">
        SELECT
        a.item_id itemId,
        max(a.item_name) itemName,
        max(a.unit_code) unitCode,
        (select b.name from base_dept b where b.id = max(a.biz_id) and b.hosp_code = #{hospCode}) deptName,
        case max(a.item_code) when '1' then max(b.spec) when '2' then max(c.spec) end spec,
        case max(a.item_code) when '1' then max(b.code) when '2' then max(c.code) end drugCode,
        ifnull((select d.up_sell_price_all/d.up_surplus_num from stro_invoicing d where d.item_id = a.item_id and d.hosp_code = #{hospCode} and id = min(a.id)),0)upSellPrice,
        (select d.sell_price from stro_invoicing d where d.item_id = a.item_id and d.hosp_code = #{hospCode} and d.id = max(a.id)) sellPrice,
        (select d.surplus_num from stro_invoicing d where d.item_id = a.item_id and d.hosp_code = #{hospCode} and d.id = max(a.id)) num,
        (select d.sell_price_all from stro_invoicing d where d.item_id = a.item_id and d.hosp_code = #{hospCode} and d.id = max(a.id)) sellPriceAll,
        (select d.up_surplus_num from stro_invoicing d where d.item_id = a.item_id and d.hosp_code = #{hospCode} and d.id = min(a.id)) upNum,
        ifnull((select d.up_sell_price_all from stro_invoicing d where d.item_id = a.item_id and d.hosp_code = #{hospCode} and d.id = min(a.id)),0) upSellPriceAll,
        sum(if( a.outin_code='20',a.sell_price * a.num,0)) pharInNumPriceAll,    /**药房入库确认总金额**/
        sum(if( a.outin_code='20',a.num,0)) pharInNum,                           /**药房入库确认总数量**/
        sum(if( a.outin_code='8',a.sell_price * a.num,0)) reportLossesPriAll,    /**药房报损总金额**/
        sum(if( a.outin_code='8',a.num,0)) reportLossesNum,                      /**药房报损总数量**/
        sum(if( a.outin_code='6',a.sell_price * a.num,0)) pharReturnStroPriAll, /**药房退药库库总金额**/
        sum(if( a.outin_code='6',a.num,0)) pharReturnStroNum,                   /**药房退药库总数量**/
        sum(if( a.outin_code='7' and a.num &lt; 0,a.sell_price * a.num,0)) takeStockSubtractPriAll,  /**药房盘亏总金额**/
        sum(if( a.outin_code='7' and a.num &lt; 0,a.num,0)) takeStockSubtractNum,                    /**药房盘亏总数量**/
        sum(if( a.outin_code='7' and a.num > 0,a.sell_price * a.num,0)) takeStockAddPriAll, /**药房盘盈总金额**/
        sum(if( a.outin_code='7' and a.num > 0, a.num,0)) takeStockAddNum,                   /**药房盘盈总数量**/
        sum(if((a.outin_code='23' or a.outin_code='25'),a.sell_price * a.num,0)) outSalesPriAll,    /**门诊销售总金额**/
        sum(if((a.outin_code='23' or a.outin_code='25'),a.num,0)) outSalesNum,                  /**门诊销售总数量**/
        sum(if((a.outin_code='27' or a.outin_code='28'),a.sell_price * a.num,0)) inSalesPriAll,     /**住院销售总金额**/
        sum(if((a.outin_code='27' or a.outin_code='28'),a.num,0)) inSalesNum                   /**住院销售总数量**/
        FROM
        stro_invoicing a
        left join base_drug b on a.item_id = b.id and a.hosp_code = b.hosp_code and a.item_code = "1"
        left join base_material c on a.item_id = c.id and a.hosp_code = c.hosp_code and a.item_code = "2"
        where a.hosp_code = #{hospCode}
        and a.outin_code in ( '7', '8', '20', '23', '25','6', '27', '28' )
        and a.biz_id in (select p.id from base_dept p where p.type_code in ("4","5") and p.hosp_code = #{hospCode})
        <if test="drugType != null and drugType != ''">
            and b.type_code = #{drugType}
        </if>
        <if test="materialType != null and materialType != ''">
            and c.type_code = #{materialType}
        </if>
        <if test="bizId != null and bizId != ''">
            and a.biz_id = #{bizId}
        </if>
        /*开始日期*/
        <if test="startDate != null">
            and date(a.crte_time) &gt;=date(#{startDate})
        </if>
        /*结束日期*/
        <if test="endDate != null">
            and date(a.crte_time) &lt;= (#{endDate})
        </if>
        <if test="keyword != null and keyword != ''">
            and (
            a.item_name like concat('%', #{keyword}, '%')
            or b.usual_pym like concat('%', #{keyword}, '%')
            or b.usual_wbm like concat('%', #{keyword}, '%')
            or c.pym like concat('%', #{keyword}, '%')
            or c.wbm like concat('%', #{keyword}, '%'))
        </if>
        group by a.item_id
    </select>
    <!--药房实时进销存报表/按购进价-->
    <select id="queryPharInvoicingLedgerBuy" resultType="java.util.Map" parameterType="cn.hsa.module.stro.stroinvoicing.dto.StroInvoicingDTO">
        SELECT
        a.item_id itemId,
        max(a.item_name) itemName,
        max(a.unit_code) unitCode,
        (select b.name from base_dept b where b.id = max(a.biz_id) and b.hosp_code = #{hospCode}) deptName,
        case max(a.item_code) when '1' then max(b.spec) when '2' then max(c.spec) end spec,
        case max(a.item_code) when '1' then max(b.code) when '2' then max(c.code) end drugCode,
        ifnull((select d.up_buy_price_all/d.up_surplus_num from stro_invoicing d where d.item_id = a.item_id and d.hosp_code = #{hospCode} and d.id = min(a.id)),0)upSellPrice,
        (select d.buy_price from stro_invoicing d where d.item_id = a.item_id and d.hosp_code = #{hospCode} and d.id = max(a.id)) sellPrice,
        (select d.surplus_num from stro_invoicing d where d.item_id = a.item_id and d.hosp_code = #{hospCode} and d.id = max(a.id)) num,
        (select d.buy_price_all from stro_invoicing d where d.item_id = a.item_id and d.hosp_code = #{hospCode} and d.id = max(a.id)) sellPriceAll,
        (select d.up_surplus_num from stro_invoicing d where d.item_id = a.item_id and d.hosp_code = #{hospCode} and d.id = min(a.id)) upNum,
        ifnull((select d.up_buy_price_all from stro_invoicing d where d.item_id = a.item_id and d.hosp_code = #{hospCode} and d.id = min(a.id)),0) upSellPriceAll,
        sum(if( a.outin_code='20',a.buy_price * a.num,0)) pharInNumPriceAll,    /**药房入库确认总金额**/
        sum(if( a.outin_code='20',a.num,0)) pharInNum,                           /**药房入库确认总数量**/
        sum(if( a.outin_code='8',a.buy_price * a.num,0)) reportLossesPriAll,    /**药房报损总金额**/
        sum(if( a.outin_code='8',a.num,0)) reportLossesNum,                      /**药房报损总数量**/
        sum(if( a.outin_code='6',a.buy_price * a.num,0)) pharReturnStroPriAll, /**药房退药库库总金额**/
        sum(if( a.outin_code='6',a.num,0)) pharReturnStroNum,                   /**药房退药库总数量**/
        sum(if( a.outin_code='7' and a.num &lt; 0,a.buy_price * a.num,0)) takeStockSubtractPriAll,  /**药房盘亏总金额**/
        sum(if( a.outin_code='7' and a.num &lt; 0,a.num,0)) takeStockSubtractNum,                    /**药房盘亏总数量**/
        sum(if( a.outin_code='7' and a.num > 0,a.buy_price * a.num,0)) takeStockAddPriAll, /**药房盘盈总金额**/
        sum(if( a.outin_code='7' and a.num > 0, a.num,0)) takeStockAddNum,                   /**药房盘盈总数量**/
        sum(if((a.outin_code='23' or a.outin_code='25'),a.buy_price * a.num,0)) outSalesPriAll,    /**门诊销售总金额**/
        sum(if((a.outin_code='23' or a.outin_code='25'),a.num,0)) outSalesNum,                  /**门诊销售总数量**/
        sum(if((a.outin_code='27' or a.outin_code='28'),a.buy_price * a.num,0)) inSalesPriAll,     /**住院销售总金额**/
        sum(if((a.outin_code='27' or a.outin_code='28'),a.num,0)) inSalesNum                   /**住院销售总数量**/
        FROM
        stro_invoicing a
        left join base_drug b on a.item_id = b.id and a.hosp_code = b.hosp_code and a.item_code = "1"
        left join base_material c on a.item_id = c.id and a.hosp_code = c.hosp_code and a.item_code = "2"
        where a.hosp_code = #{hospCode}
        and a.outin_code in ( '7', '8', '20', '23', '25','6','27','28' )
        and a.biz_id in (select p.id from base_dept p where p.type_code in ("4","5") and p.hosp_code = #{hospCode})
        <if test="drugType != null and drugType != ''">
            and b.type_code = #{drugType}
        </if>
        <if test="materialType != null and materialType != ''">
            and c.type_code = #{materialType}
        </if>
        <if test="bizId != null and bizId != ''">
            and a.biz_id = #{bizId}
        </if>
        /*开始日期*/
        <if test="startDate != null">
            and date(a.crte_time) &gt;=date(#{startDate})
        </if>
        /*结束日期*/
        <if test="endDate != null">
            and date(a.crte_time) &lt;= date(#{endDate})
        </if>
        <if test="keyword != null and keyword != ''">
            and (
            a.item_name like concat('%', #{keyword}, '%')
            or b.usual_pym like concat('%', #{keyword}, '%')
            or b.usual_wbm like concat('%', #{keyword}, '%')
            or c.pym like concat('%', #{keyword}, '%')
            or c.wbm like concat('%', #{keyword}, '%'))
        </if>
        group by a.item_id
    </select>
    <!--药房门诊退药报表查询-->
    <select id="queryReturnOutDrugLedger" resultType="java.util.Map" parameterType="cn.hsa.module.phar.pharoutdistribute.dto.PharOutDistributeDTO">
        select a.id as id,a.item_name as itemName,a.spec,a.price,a.split_price as splitPrice,
        a.curr_unit_code as currUnitCode,a.unit_code as unitCode,a.split_unit_code as splitUnitCode,a.split_num as splitNum,
        case when a.curr_unit_code = a.unit_code then a.num else a.split_num end num,a.crte_time as crteTime,a.crte_name as crteName,
        a.item_code as itemCode, a.item_id as itemId,"门诊退药" as retrunType,
        (select name from base_dept where hosp_code = b.hosp_code and id = b.phar_id) as pharName,
        (concat(v.name, '/',(ifnull((select e.name from sys_code_detail e where e.value=v.gender_code and e.c_code='XB'),'') ), '/',ifnull(v.age,''),
        (ifnull((select name from sys_code_detail where c_code='NLDW' and value=v.age_unit_code and hosp_code=v.hosp_code),'')))) patientInfo
        from phar_out_distribute_all_detail a
        left join phar_out_distribute b on b.id = a.distribute_id and b.hosp_code = a.hosp_code
        left join outpt_visit v on v.id = b.visit_id and v.hosp_code = b.hosp_code
        left join base_drug bd on a.item_id = bd.id and a.hosp_code = bd.hosp_code and a.item_code = "1"
        left join base_material c on a.item_id = c.id and a.hosp_code = c.hosp_code and a.item_code = "2"
        where
        ifnull(a.num,0) &lt; 0
        and a.hosp_code = #{hospCode}
        <if test="startTime != null">
            and date(a.crte_time) >= date(#{startTime})
        </if>
        <if test="endTime != null">
            and date(a.crte_time) &lt;= date(#{endTime})
        </if>
        <if test="pharId != null and pharId !=''">
            and b.phar_id = #{pharId}
        </if>
        <if test="keyword != null and keyword != ''">
            and (
            a.item_name like concat('%', #{keyword}, '%')
            or bd.usual_pym like concat('%', #{keyword}, '%')
            or bd.usual_wbm like concat('%', #{keyword}, '%')
            or c.pym like concat('%', #{keyword}, '%')
            or c.wbm like concat('%', #{keyword}, '%')
            or b.crte_name like concat('%', #{keyword}, '%')
            or v.name like concat('%', #{keyword}, '%'))
        </if>
        order by a.crte_time desc
    </select>
    <!--药房住院退药报表查询-->
    <select id="queryReturnInDrugLedger" resultType="java.util.Map" parameterType="cn.hsa.module.phar.pharoutdistribute.dto.PharOutDistributeDTO">
        select
        e.id as id,e.item_name as itemName,e.spec,e.price,e.split_price as splitPrice,
        e.curr_unit_code as currUnitCode,e.unit_code as unitCode,e.split_unit_code as splitUnitCode,e.split_num as splitNum,
        case when e.curr_unit_code = e.unit_code then e.num else e.split_num end num,e.crte_time as crteTime,
        e.crte_name as crteName,e.item_code as itemCode, e.item_id as itemId,"住院退药" as retrunType,
        (select name from base_dept where hosp_code = d.hosp_code and id = d.phar_id) as pharName,
        (concat(v.name, '/',(ifnull((select name from sys_code_detail where value = v.gender_code and c_code='XB' and hosp_code = e.hosp_code),'') ), '/',v.age,
        (ifnull((select name from sys_code_detail where c_code='NLDW' and value=v.age_unit_code and hosp_code=v.hosp_code),'岁')))) patientInfo
        from phar_in_distribute_all_detail e
        join phar_in_distribute d on e.hosp_code = d.hosp_code and d.id = e.distribute_id
        left join inpt_visit v on v.id = e.visit_id and v.hosp_code = e.hosp_code
        left join base_drug b on e.item_id = b.id and e.hosp_code = b.hosp_code and e.item_code = "1"
        left join base_material c on e.item_id = c.id and e.hosp_code = c.hosp_code and e.item_code = "2"
        WHERE e.hosp_code = #{hospCode} and ifnull(e.num,0) &lt; 0
        <if test="startTime != null">
            and date(e.crte_time) >= date(#{startTime})
        </if>
        <if test="endTime != null">
            and date(e.crte_time) &lt;= date(#{endTime})
        </if>
        <if test="pharId != null and pharId !=''">
            and d.phar_id = #{pharId}
        </if>
        <if test="keyword != null and keyword != ''">
            and (
            e.item_name like concat('%', #{keyword}, '%')
            or b.usual_pym like concat('%', #{keyword}, '%')
            or b.usual_wbm like concat('%', #{keyword}, '%')
            or c.pym like concat('%', #{keyword}, '%')
            or c.wbm like concat('%', #{keyword}, '%')
            or d.crte_name like concat('%', #{keyword}, '%')
            or v.name like concat('%', #{keyword}, '%'))
        </if>
        order by e.crte_time desc
    </select>
    <!--药房住院，门诊退药合计报表查询-->
    <select id="queryReturnAllDrugLedger" resultType="java.util.Map" parameterType="cn.hsa.module.phar.pharoutdistribute.dto.PharOutDistributeDTO">
        select * from (
        select
        e.id as id,e.item_name as itemName,e.spec,e.price,e.split_price as splitPrice,
        e.curr_unit_code as currUnitCode,e.unit_code as unitCode,e.split_unit_code as splitUnitCode,e.split_num as splitNum,
        case when e.curr_unit_code = e.unit_code then e.num else e.split_num end num,e.crte_time as crteTime,
        e.crte_name as crteName,e.item_code as itemCode, e.item_id as itemId,"住院退药" as retrunType,
        (select name from base_dept where hosp_code = d.hosp_code and id = d.phar_id) as pharName,
        (concat(v.name, '/',(ifnull((select name from sys_code_detail sc where hosp_code = v.hosp_code and sc.value=v.gender_code and sc.c_code='XB'),'') ), '/',v.age,
        (ifnull((select name from sys_code_detail where c_code='NLDW' and value=v.age_unit_code and hosp_code=v.hosp_code),'')))) patientInfo
        FROM phar_in_distribute_all_detail e
        left join phar_in_distribute d on e.hosp_code = d.hosp_code and d.id = e.distribute_id
        left join inpt_visit v on v.id = e.visit_id and v.hosp_code = e.hosp_code
        left join base_drug b on e.item_id = b.id and e.hosp_code = b.hosp_code and e.item_code = "1"
        left join base_material c on e.item_id = c.id and e.hosp_code = c.hosp_code and e.item_code = "2"
        WHERE e.hosp_code = #{hospCode} and ifnull(e.num,0) &lt; 0
        <if test="startTime != null">
            and date(e.crte_time) >= date(#{startTime})
        </if>
        <if test="endTime != null">
            and date(e.crte_time) &lt;= date(#{endTime})
        </if>
        <if test="pharId != null and pharId !=''">
            and d.phar_id = #{pharId}
        </if>
        <if test="keyword != null and keyword != ''">
            and (
            e.item_name like concat('%', #{keyword}, '%')
            or b.usual_pym like concat('%', #{keyword}, '%')
            or b.usual_wbm like concat('%', #{keyword}, '%')
            or c.pym like concat('%', #{keyword}, '%')
            or c.wbm like concat('%', #{keyword}, '%')
            or d.crte_name like concat('%', #{keyword}, '%')
            or v.name like concat('%', #{keyword}, '%'))
        </if>
        union all
        select a.id as id,a.item_name as itemName,a.spec,a.price,a.split_price as splitPrice,
        a.curr_unit_code as currUnitCode,a.unit_code as unitCode,a.split_unit_code as splitUnitCode,a.split_num as splitNum,
        case when a.curr_unit_code = a.unit_code then a.num else a.split_num end num,a.crte_time as crteTime,a.crte_name as crteName,
        a.item_code as itemCode, a.item_id as itemId,"门诊退药" as retrunType,
        (select name from base_dept where hosp_code = b.hosp_code and id = b.phar_id) as pharName,
        (concat(v.name, '/',(ifnull((select e.name from sys_code_detail e where e.value=v.gender_code and e.c_code='XB'),'') ), '/',v.age,
        (ifnull((select name from sys_code_detail where c_code='NLDW' and value=v.age_unit_code and hosp_code=v.hosp_code),'')))) patientInfo
        from phar_out_distribute_all_detail a
        left join phar_out_distribute b on b.id = a.distribute_id and b.hosp_code = a.hosp_code
        left join outpt_visit v on v.id = b.visit_id and v.hosp_code = b.hosp_code
        left join base_drug bd on a.item_id = bd.id and a.hosp_code = bd.hosp_code and a.item_code = "1"
        left join base_material c on a.item_id = c.id and a.hosp_code = c.hosp_code and a.item_code = "2"
        where ifnull(a.num,0) &lt; 0 and a.hosp_code = #{hospCode}
        <if test="startTime != null">
            and date(a.crte_time) >= date(#{startTime})
        </if>
        <if test="endTime != null">
            and date(a.crte_time) &lt;= date(#{endTime})
        </if>
        <if test="pharId != null and pharId !=''">
            and b.phar_id = #{pharId}
        </if>
        <if test="keyword != null and keyword != ''">
            and (
            a.item_name like concat('%', #{keyword}, '%')
            or bd.usual_pym like concat('%', #{keyword}, '%')
            or bd.usual_wbm like concat('%', #{keyword}, '%')
            or c.pym like concat('%', #{keyword}, '%')
            or c.wbm like concat('%', #{keyword}, '%')
            or b.crte_name like concat('%', #{keyword}, '%')
            or v.name like concat('%', #{keyword}, '%'))
        </if>
        ) tab
        order by tab.crteName desc
    </select>

    <!--住院收费员收如统计-按结算时间-->
    <select id="queryCollectorInComeSta" resultType="java.util.Map">
        select
        sum(a.reality_price) as realityPrice,            /**queryInPatient应结费用**/
        sum(a.actual_price) as actualPrice,             /**实收金额**/
        sum(a.self_price) as selfPrice,                 /**个人支付**/
        sum(a.ap_offset_price) as apOffsetPrice,          /**预交金抵充**/
        sum(a.settle_take_price) as settleTakePrice,     /**结算补收**/
        sum(a.settle_back_price) as settleBackPrice,     /**结算退款**/
        max(a.crte_name) as crteName,
        sum(a.mi_price) as miPrice,
        (select sum(c.price) from inpt_advance_pay c where c.hosp_code = a.hosp_code and c.status_code = '0' and c.is_settle = '0'
        and c.crte_id = a.crte_id
        <if test="startDate != null">
            and date(c.crte_time) &gt;=date(#{startDate})
        </if>
        <if test="endDate != null">
            and date(c.crte_time) &lt;= date(#{endDate})
        </if>
        group by c.crte_id
        ) settledAdvancePay,
        sum(a.ap_total_price) as unSettledAdvancePay

        from inpt_settle a
        where a.hosp_code = #{hospCode} and a.is_settle = '1'
        /*开始日期*/
        <if test="startDate != null">
            and date(a.settle_time) &gt;=date(#{startDate})
        </if>
        /*结束日期*/
        <if test="endDate != null">
            and date(a.settle_time) &lt;= date(#{endDate})
        </if>
        group by a.crte_id
    </select>

    <!--住院收费员收如统计-按缴款时间-->
    <select id="queryCollectorInComeStaZYJK" resultType="java.util.Map">
        select
        sum(a.total_price) as realityPrice,            /**queryInPatient应结费用**/
        sum(a.reality_total_price) as actualPrice,             /**实收金额**/
        0 as selfPrice,                 /**个人支付**/
        sum(a.yjcd_total_price) as apTotalPrice,          /**预交金抵充**/
        0 as settleTakePrice,     /**结算补收**/
        sum(a.back_total_price) as settleBackPrice,     /**结算退款**/
        max(a.crte_name) as crteName,
        sum(a.insure_total_price) as miPrice,
        sum(a.yjss_total_price) as settledAdvancePay,
        sum(a.yjjs_total_price) as  unSettledAdvancePay

        from outin_daily a
        where a.hosp_code = #{hospCode} and a.type_code = '2'
        /*开始日期*/
        <if test="startDate != null">
            and date(a.end_time) &gt;=date(#{startDate})
        </if>
        /*结束日期*/
        <if test="endDate != null">
            and date(a.end_time) &lt;= date(#{endDate})
        </if>
        group by a.crte_id
    </select>

    <!--住院收费员收入明细统计-->
    <select id="queryCollectorInComeStaDetail" resultType="java.util.Map">
        select * from
        (
        select a.crte_name as crteName,'住院结账补交款' as inCometype,a.visit_id as visitId,p.price as money,a.settle_time as time,
        a.red_id as redId,a.status_code as statusCode, c.name as payCode,a.settle_no as settleNo,
        (select code from sys_user b where a.crte_id = b.id and b.hosp_code = #{hospCode}) as account,
        (select name from inpt_visit o where o.id = a.visit_id and o.hosp_code = #{hospCode}) as patientName,
        (select daily_no from outin_daily d where a.daily_settle_id = d.id and d.hosp_code = #{hospCode}) as dailyNo
        from inpt_settle a
        join inpt_pay p on p.settle_id = a.id and p.hosp_code = a.hosp_code
        join sys_code_detail c on c.c_code = 'ZFFS' and p.pay_code = c.value and p.hosp_code = c.hosp_code
        where a.hosp_code = #{hospCode}
        /*开始日期*/
        <if test="startDate != null and startDate != ''">
            and date(a.settle_time) &gt;= date(#{startDate})
        </if>
        /*结束日期*/
        <if test="endDate != null and endDate != ''">
            and date(a.settle_time) &lt;= date(#{endDate})
        </if>
        /*开始日期*/
        <if test="keyword != null and keyword != ''">
            and (a.crte_name like concat('%',#{keyword},'%'))
        </if>
        union all
        select a.crte_name as crteName,'住院结账补交款' as inCometype,a.visit_id as visitId,a.trunc_price as money,a.settle_time as time,
        a.red_id as redId,a.status_code as statusCode, '尾款' as payCode,a.settle_no as settleNo,
        (select code from sys_user b where a.crte_id = b.id and b.hosp_code = #{hospCode}) as account,
        (select name from inpt_visit o where o.id = a.visit_id and o.hosp_code = #{hospCode}) as patientName,
        (select daily_no from outin_daily d where a.daily_settle_id = d.id and d.hosp_code = #{hospCode}) as dailyNo
        from inpt_settle a
        where a.hosp_code = #{hospCode}
        /*开始日期*/
        <if test="startDate != null and startDate != ''">
            and date(a.settle_time) &gt;= date(#{startDate})
        </if>
        /*结束日期*/
        <if test="endDate != null and endDate != ''">
            and date(a.settle_time) &lt;= date(#{endDate})
        </if>
        /*开始日期*/
        <if test="keyword != null and keyword != ''">
            and (a.crte_name like concat('%',#{keyword},'%'))
        </if>
        union all
        select a.crte_name as crteName,'住院结账补交款' as inCometype,a.visit_id as visitId,p.total_price as money,a.settle_time as time,
        a.red_id as redId,a.status_code as statusCode, '医保' as payCode,a.settle_no as settleNo,
        (select code from sys_user b where a.crte_id = b.id and b.hosp_code = #{hospCode}) as account,
        (select name from inpt_visit o where o.id = a.visit_id and o.hosp_code = #{hospCode}) as patientName,
        (select daily_no from outin_daily d where a.daily_settle_id = d.id and d.hosp_code = #{hospCode}) as dailyNo
        from inpt_settle a
        join inpt_insure_pay p on p.settle_id = a.id and p.hosp_code = a.hosp_code
        where a.hosp_code = #{hospCode}
        /*开始日期*/
        <if test="startDate != null and startDate != ''">
            and date(a.settle_time) &gt;= date(#{startDate})
        </if>
        /*结束日期*/
        <if test="endDate != null and endDate != ''">
            and date(a.settle_time) &lt;= date(#{endDate})
        </if>
        /*开始日期*/
        <if test="keyword != null and keyword != ''">
            and (a.crte_name like concat('%',#{keyword},'%'))
        </if>
        union all
        select a.crte_name as crteName,'住院结账补交款' as inCometype,a.visit_id as visitId,p.hosp_price as money,a.settle_time as time,
        a.red_id as redId,a.status_code as statusCode, '医院垫付' as payCode,a.settle_no as settleNo,
        (select code from sys_user b where a.crte_id = b.id and b.hosp_code = #{hospCode}) as account,
        (select name from inpt_visit o where o.id = a.visit_id and o.hosp_code = #{hospCode}) as patientName,
        (select daily_no from outin_daily d where a.daily_settle_id = d.id and d.hosp_code = #{hospCode}) as dailyNo
        from inpt_settle a
        join insure_individual_settle p on p.settle_id = a.id and p.hosp_code = a.hosp_code
        where a.hosp_code = #{hospCode}
        /*开始日期*/
        <if test="startDate != null and startDate != ''">
            and date(a.settle_time) &gt;= date(#{startDate})
        </if>
        /*结束日期*/
        <if test="endDate != null and endDate != ''">
            and date(a.settle_time) &lt;= date(#{endDate})
        </if>
        /*开始日期*/
        <if test="keyword != null and keyword != ''">
            and (a.crte_name like concat('%',#{keyword},'%'))
        </if>
        union all
        select a.crte_name as crteName,'住院预交款' as inCometype,a.visit_id as visitId,a.price as money,a.crte_time as time,
        a.red_id as redId,a.status_code as statusCode,c.name as payCode,a.ap_order_no as settleNo,
        (select code from sys_user b where a.crte_id = b.id and b.hosp_code = #{hospCode}) as account,
        (select name from inpt_visit o where o.id = a.visit_id and o.hosp_code = #{hospCode}) as patientName,
        (select daily_no from outin_daily d where a.daily_settle_id = d.id and d.hosp_code = #{hospCode}) as dailyNo
        from inpt_advance_pay a
        join sys_code_detail c on c.c_code = 'ZFFS' and a.pay_code = c.value and a.hosp_code = c.hosp_code
        where a.hosp_code = #{hospCode}
        /*开始日期*/
        <if test="startDate != null and startDate != ''">
            and date(a.crte_time) &gt;= date(#{startDate})
        </if>
        /*结束日期*/
        <if test="endDate != null and endDate != ''">
            and date(a.crte_time) &lt;= date(#{endDate})
        </if>
        <if test="keyword != null and keyword != ''">
            and (a.crte_name like concat('%',#{keyword},'%'))
        </if>
        union all
        select a.crte_name as crteName,'挂号' as inCometype,rs.visit_id as visitId,p.price as money,a.settle_time as time,
        '' as redId,a.status_code as statusCode,c.name as payCode,a.register_id as settleNo,
        (select code from sys_user b where a.crte_id = b.id and b.hosp_code = #{hospCode}) as account,
        rs.name as patientName,
        (select daily_no from outin_daily d where a.daily_settle_id = d.id and d.hosp_code = #{hospCode}) as dailyNo
        from outpt_register_settle a
        left join outpt_register_pay p on p.rs_id = a.id and p.hosp_code = a.hosp_code
        left join outpt_register rs on rs.id = a.register_id and rs.hosp_code = a.hosp_code
        join sys_code_detail c on c.c_code = 'ZFFS' and p.pay_code = c.value and p.hosp_code = c.hosp_code
        where a.hosp_code = #{hospCode}
        /*开始日期*/
        <if test="startDate != null and startDate != ''">
            and date(a.settle_time) &gt;= date(#{startDate})
        </if>
        /*结束日期*/
        <if test="endDate != null and endDate != ''">
            and date(a.settle_time) &lt;= date(#{endDate})
        </if>
        <if test="keyword != null and keyword != ''">
            and (a.crte_name like concat('%',#{keyword},'%'))
        </if>
        union all
        select a.crte_name as crteName,'门诊收费' as inCometype,a.visit_id as visitId,p.price as money,a.settle_time as time,
        a.red_id as redId,a.status_code as statusCode,c.name as payCode,a.settle_no as settleNo,
        (select code from sys_user b where a.crte_id = b.id and b.hosp_code = #{hospCode}) as account,
        (select name from outpt_visit o where o.id = a.visit_id and o.hosp_code = #{hospCode}) as patientName,
        (select daily_no from outin_daily d where a.daily_settle_id = d.id and d.hosp_code = #{hospCode}) as dailyNo
        from outpt_settle a
        join outpt_pay p on p.settle_id = a.id and p.hosp_code = a.hosp_code
        join sys_code_detail c on c.c_code = 'ZFFS' and p.pay_code = c.value and p.hosp_code = c.hosp_code
        where a.hosp_code = #{hospCode} and a.is_settle = '1'
        /*开始日期*/
        <if test="startDate != null and startDate != ''">
            and date(a.settle_time) &gt;= date(#{startDate})
        </if>
        /*结束日期*/
        <if test="endDate != null and endDate != ''">
            and date(a.settle_time) &lt;= date(#{endDate})
        </if>
        <if test="keyword != null and keyword != ''">
            and (a.crte_name like concat('%',#{keyword},'%'))
        </if>
        union all
        select a.crte_name as crteName,'门诊收费' as inCometype,a.visit_id as visitId,a.trunc_price as money,a.settle_time as time,
        a.red_id as redId,a.status_code as statusCode,'尾数' as payCode,a.settle_no as settleNo,
        (select code from sys_user b where a.crte_id = b.id and b.hosp_code = #{hospCode}) as account,
        (select name from outpt_visit o where o.id = a.visit_id and o.hosp_code = #{hospCode}) as patientName,
        (select daily_no from outin_daily d where a.daily_settle_id = d.id and d.hosp_code = #{hospCode}) as dailyNo
        from outpt_settle a
        where a.hosp_code = #{hospCode} and a.is_settle = '1'
        /*开始日期*/
        <if test="startDate != null and startDate != ''">
            and date(a.settle_time) &gt;= date(#{startDate})
        </if>
        /*结束日期*/
        <if test="endDate != null and endDate != ''">
            and date(a.settle_time) &lt;= date(#{endDate})
        </if>
        <if test="keyword != null and keyword != ''">
            and (a.crte_name like concat('%',#{keyword},'%'))
        </if>
        union all
        select a.crte_name as crteName,'门诊收费' as inCometype,a.visit_id as visitId,p.total_price as money,a.settle_time as time,
        a.red_id as redId,a.status_code as statusCode,'医保' as payCode,a.settle_no as settleNo,
        (select code from sys_user b where a.crte_id = b.id and b.hosp_code = #{hospCode}) as account,
        (select name from outpt_visit o where o.id = a.visit_id and o.hosp_code = #{hospCode}) as patientName,
        (select daily_no from outin_daily d where a.daily_settle_id = d.id and d.hosp_code = #{hospCode}) as dailyNo
        from outpt_settle a
        join outpt_insure_pay p on p.settle_id = a.id and p.hosp_code = a.hosp_code
        where a.hosp_code = #{hospCode} and a.is_settle = '1'
        /*开始日期*/
        <if test="startDate != null and startDate != ''">
            and date(a.settle_time) &gt;= date(#{startDate})
        </if>
        /*结束日期*/
        <if test="endDate != null and endDate != ''">
            and date(a.settle_time) &lt;= date(#{endDate})
        </if>
        <if test="keyword != null and keyword != ''">
            and (a.crte_name like concat('%',#{keyword},'%'))
        </if>
        union all
        select a.crte_name as crteName,'门诊收费' as inCometype,a.visit_id as visitId,p.hosp_price as money,a.settle_time as time,
        a.red_id as redId,a.status_code as statusCode,'医院垫付' as payCode,a.settle_no as settleNo,
        (select code from sys_user b where a.crte_id = b.id and b.hosp_code = #{hospCode}) as account,
        (select name from outpt_visit o where o.id = a.visit_id and o.hosp_code = #{hospCode}) as patientName,
        (select daily_no from outin_daily d where a.daily_settle_id = d.id and d.hosp_code = #{hospCode}) as dailyNo
        from outpt_settle a
        join insure_individual_settle p on p.settle_id = a.id and p.hosp_code = a.hosp_code
        where a.hosp_code = #{hospCode} and a.is_settle = '1'
        /*开始日期*/
        <if test="startDate != null and startDate != ''">
            and date(a.settle_time) &gt;= date(#{startDate})
        </if>
        /*结束日期*/
        <if test="endDate != null and endDate != ''">
            and date(a.settle_time) &lt;= date(#{endDate})
        </if>
        <if test="keyword != null and keyword != ''">
            and (a.crte_name like concat('%',#{keyword},'%'))
        </if>
        ) as A   where 1=1

        <if test="payCode != null and payCode != ''">
            and A.payCode = #{payCode}
        </if>
        <if test="payType != null and payType != ''">
            and A.inCometype like concat('%',#{payType},'%')
        </if>
        order by A.account,A.time

    </select>

    <!--病人查询报表（在院/出院）-->
    <select id="queryInPatient" resultType="cn.hsa.module.inpt.doctor.dto.InptVisitDTO" parameterType="cn.hsa.module.inpt.doctor.dto.InptVisitDTO">
        SELECT
        a.id,
        a.hosp_code,
        a.profile_id,
        a.in_profile,
        a.in_no,
        a.name,
        a.gender_code,
        a.age,
        a.age_unit_code,
        a.birthday,
        a.nation_code,
        a.cert_code,
        a.cert_no,
        a.marry_code,
        a.phone,
        a.address,
        a.preferential_type_id,
        a.patient_code,
        a.receive_hosp_name,
        a.bed_id,
        a.bed_name,
        a.nursing_code,
        a.diet_type,
        a.Illness_code,
        a.status_code,
        a.in_ward_id,
        a.in_dept_id,
        a.in_dept_name,
        a.in_time,
        a.zz_doctor_id,
        a.zz_doctor_name,
        a.jz_doctor_id,
        a.jz_doctor_name,
        a.zg_doctor_id,
        a.zg_doctor_name,
        a.in_remark,
        a.in_mode_code,
        a.in_disease_id,
        a.in_disease_name,
        a.in_disease_icd10,
        a.in_situation_code,
        a.outpt_visit_no,
        a.outpt_doctor_id,
        a.outpt_doctor_name,
        a.outpt_disease_id,
        a.outpt_disease_name,
        a.outpt_disease_icd10,
        a.out_ward_id,
        a.out_dept_id,
        a.out_dept_name,
        a.out_time,
        a.out_disease_id,
        a.out_disease_name,
        a.out_disease_icd10,
        a.out_oper_id,
        a.out_oper_name,
        a.out_oper_time,
        a.out_situation_code,
        a.out_remark,
        a.out_mode_code,
        a.is_archive,
        a.archive_time,
        a.archive_id,
        a.archive_name,
        a.insure_code,
        a.insure_org_code,
        a.insure_no,
        a.insure_biz_code,
        a.insure_treat_code,
        a.insure_patient_id,
        a.insure_remark,
        a.total_advance,
        (case s.id when null then a.total_cost else s.reality_price end) total_cost,
        (case when s.settle_take_price != '0' then s.settle_take_price
        when s.settle_back_price != '0' then s.settle_back_price else '0' end) as bu_tui_fei,
        a.total_balance,
        a.crte_id,
        a.crte_name,
        a.crte_time,
        s.settle_time as settleTime,
        s.self_price,
        s.mi_price,
        (select sum(total_price) from inpt_cost c where c.hosp_code = #{hospCode} and c.item_code = '1' and a.id = c.visit_id) as drugCost,
        (select sum(total_price) from inpt_cost c where c.hosp_code = #{hospCode} and c.item_code = '1' and a.id = c.visit_id)/a.total_cost as drugCostRate,
        (select name from base_dept b where b.id = a.in_ward_id and b.hosp_code = a.hosp_code) as wardName,
        bpf.source_tj_code,
        bpf.total_in
        from inpt_visit a
        left join inpt_settle s on a.id=s.visit_id and a.hosp_code=s.hosp_code and s.is_settle='1' and s.status_code = '0'
        left join base_profile_file bpf on a.profile_id = bpf.id
        where a.hosp_code = #{hospCode}
        <if test="statusCode != null and statusCode != ''">
            and a.status_code = #{statusCode}
        </if>
        <if test="keyword != null and keyword != ''">
            and (a.name like concat('%',#{keyword},'%') or a.in_no like concat('%',#{keyword},'%') or a.in_profile like concat('%',#{keyword},'%') or a.in_disease_name like concat('%',#{keyword},'%') or a.zz_doctor_name like concat('%',#{keyword},'%') or a.jz_doctor_name like concat('%',#{keyword},'%') or a.zg_doctor_name like concat('%',#{keyword},'%') or a.outpt_doctor_name like concat('%',#{keyword},'%') )
        </if>
        <if test="inDeptId != null and inDeptId != ''">
            and a.in_dept_id = #{inDeptId}
        </if>
        <if test="inWardId != null and inWardId != ''">
            and a.in_ward_id = #{inWardId}
        </if>
        <if test="inDiseaseName != null and inDiseaseName != ''">
            and a.in_disease_name like concat('%',#{inDiseaseName},'%')
        </if>
        /*开始日期*/
        <if test="startDate != null and timeFlag == '0'.toString()">
            and DATE_FORMAT(a.in_time,'%Y-%m-%d') &gt;= DATE_FORMAT(#{startDate},'%Y-%m-%d')
        </if>
        /*结束日期*/
        <if test="endDate != null and timeFlag == '0'.toString()">
            and DATE_FORMAT(a.in_time,'%Y-%m-%d') &lt;= DATE_FORMAT(#{endDate},'%Y-%m-%d')
        </if>
        /*开始日期*/
        <if test="startDate != null and timeFlag == '1'.toString()">
            and DATE_FORMAT(a.out_time,'%Y-%m-%d') &gt;= DATE_FORMAT(#{startDate},'%Y-%m-%d')
        </if>
        /*结束日期*/
        <if test="endDate != null and timeFlag == '1'.toString() ">
            and DATE_FORMAT(a.out_time,'%Y-%m-%d') &lt;= DATE_FORMAT(#{endDate},'%Y-%m-%d')
        </if>
        /*开始日期*/
        <if test="startDate != null and timeFlag == '2'.toString()">
            and DATE_FORMAT(s.crte_time,'%Y-%m-%d') &gt;= DATE_FORMAT(#{startDate},'%Y-%m-%d')
        </if>
        /*结束日期*/
        <if test="endDate != null and timeFlag == '2'.toString() ">
            and DATE_FORMAT(s.crte_time,'%Y-%m-%d') &lt;= DATE_FORMAT(#{endDate},'%Y-%m-%d')
        </if>
        <if test="zgDoctorId != null and zgDoctorId != ''">
            and a.zg_doctor_id = #{zgDoctorId}
        </if>
    </select>

    <!--门诊住院项目使用量统计查询,按业务类型、项目、开方医生分组-->
    <select id="queryHospitalItemReportInfoGroupThree" resultType="java.util.LinkedHashMap">
        select t.bizCode,
        t.item_type,
        t.item_id,
        t.bfc_id ,
        t.bfc_name ,
        t.item_code ,
        t.item_name,
        t.spec,
        t.num_unit_code,
        t.price,
        t.doctor_id,
        t.doctor_name,
        sum( t.reality_price ) AS reality_price,
        sum( t.num ) AS num from (
        <include refid="MzZyItemPatientSql"/>
        ) t
        where 1=1
        <if test="tyepCodeList != null and tyepCodeList.size() > 0">
            and t.bizCode IN
            <foreach collection="tyepCodeList" separator="," open="(" close=")" item="item">
                #{item}
            </foreach>
        </if>
        <if test="userId != null and userId != ''">
            and t.doctor_id = #{userId}
        </if>
        <if test="keyword != null and keyword != ''">
            and t.item_name  like '%${keyword}%'
        </if> GROUP BY  t.bizCode,
        t.item_type,
        t.item_id,
        t.bfc_id ,
        t.bfc_name ,
        t.item_code ,
        t.item_name,
        t.spec,
        t.num_unit_code,
        t.price,
        t.doctor_id,
        t.doctor_name ORDER BY t.item_type,t.bfc_id,t.item_code,t.item_id
    </select>

    <select id = "queryHospitalItemReportInfoGroupFour" resultType="java.util.LinkedHashMap">
        select *,(select name from base_dept a where a.id = dept_id) as dept_name from (
        <include refid="MzZyItemPatientSql"/>
        ) t
        where 1=1
        <if test="tyepCodeList != null and tyepCodeList.size() > 0">
            and t.bizCode IN
            <foreach collection="tyepCodeList" separator="," open="(" close=")" item="item">
                #{item}
            </foreach>
        </if>
        <if test="bfcId != null and bfcId != ''">
            and t.bfc_id = #{bfcId}
        </if>
        <if test="userId != null and userId != ''">
            and t.doctor_id = #{userId}
        </if>
        <if test="keyword != null and keyword != ''">
            and t.item_name  like '%${keyword}%'
        </if>
        ORDER BY t.item_type ,t.visit_id,t.bfc_id,t.item_code,t.item_id
    </select>
    <select id = "queryHospitalItemReportInfoGroupFourSum" resultType="java.util.LinkedHashMap">
        select sum(reality_price) as 'reality_priceSum',sum(num) as 'numSum' from (
        <include refid="MzZyItemPatientSql"/>
        ) t
        where 1=1
        <if test="tyepCodeList != null and tyepCodeList.size() > 0">
            and t.bizCode IN
            <foreach collection="tyepCodeList" separator="," open="(" close=")" item="item">
                #{item}
            </foreach>
        </if>
        <if test="bfcId != null and bfcId != ''">
            and t.bfc_id = #{bfcId}
        </if>
        <if test="keyword != null and keyword != ''">
            and t.item_name  like '%${keyword}%'
        </if>
        ORDER BY t.bizCode ,t.visit_id
    </select>

    <!--门诊住院项目使用量统计查询,按业务类型、项目、开方医生分组合计-->
    <select id="queryHospitalItemReportInfoGroupThreeSum" resultType="java.util.LinkedHashMap">
        select sum(reality_price) as 'reality_priceSum',sum(num) as 'numSum' from (
        <include refid="MzZyItemPatientSql"/>
        ) t
        where 1=1
        <if test="tyepCodeList != null and tyepCodeList.size() > 0">
            and t.bizCode IN
            <foreach collection="tyepCodeList" separator="," open="(" close=")" item="item">
                #{item}
            </foreach>
        </if>
        <if test="userId != null and userId != ''">
            and t.doctor_id = #{userId}
        </if>
        <if test="keyword != null and keyword != ''">
            and t.item_name  like '%${keyword}%'
        </if>
    </select>

    <!--门诊住院项目使用量统计查询,按业务类型、项目-->
    <select id="queryHospitalItemReportInfoGroupTwo" resultType="java.util.LinkedHashMap">
        select
        t.item_type,
        t.bizCode,
        t.item_id,
        t.bfc_id ,
        t.bfc_name,
        t.item_code,
        t.item_name,
        t.spec,
        t.num_unit_code,
        t.price,
        sum( t.reality_price ) AS reality_price,
        sum( t.num ) AS num
        from (
        <include refid="MzZyItemPatientSql"></include>
        ) t
        where 1=1
        <if test="tyepCodeList != null and tyepCodeList.size() > 0">
            and t.bizCode IN
            <foreach collection="tyepCodeList" separator="," open="(" close=")" item="item">
                #{item}
            </foreach>
        </if>
        <if test="keyword != null and keyword != ''">
            and t.item_name  like '%${keyword}%'
        </if>
        group by  t.item_type,
        t.bizCode,
        t.item_id,
        t.bfc_id ,
        t.bfc_name,
        t.item_code,
        t.item_name,
        t.spec,
        t.num_unit_code,
        t.price  ORDER BY t.item_type,t.bfc_id,t.item_code,t.item_id
    </select>

    <!--门诊住院项目使用量统计查询,按业务类型、项目、统计总数-->
    <select id="queryHospitalItemReportInfoGroupTwoSum" resultType="java.util.LinkedHashMap">
        select sum(reality_price) as 'reality_priceSum',sum(num) as 'numSum' from (
        <include refid="MzZyItemPatientSql"></include>
        ) e
        where 1=1
        <if test="tyepCodeList != null and tyepCodeList.size() > 0">
            and e.bizCode IN
            <foreach collection="tyepCodeList" separator="," open="(" close=")" item="item">
                #{item}
            </foreach>
        </if>
        <if test="keyword != null and keyword != ''">
            and e.item_name  like '%${keyword}%'
        </if>
    </select>

    <sql id="MzZyItemPatientSql">
        SELECT
        'ZY' bizCode,
        '住院' item_type,
        a.in_no,
        a.name,
        a.gender_code,
        a.age,
        a.patient_code,
        DATE_FORMAT(a.in_time , '%Y-%m-%d %H:%i:%s') as visit_time,
        DATE_FORMAT(a.in_time , '%Y-%m-%d %H:%i:%s') as in_time,
        DATE_FORMAT(a.out_time , '%Y-%m-%d %H:%i:%s') as out_time,
        DATE_FORMAT(c.settle_time , '%Y-%m-%d %H:%i:%s') as settle_time,
        b.item_id,
        b.bfc_id ,
        e.name as bfc_name,
        b.item_code ,
        b.item_name,
        b.spec,
        b.total_num_unit_code AS num_unit_code,
        b.price,
        b.doctor_id,
        b.doctor_name,
        b.visit_id,
        b.dept_id,
        d.name as dept_name,
        b.reality_price,
        b.total_num AS num
        FROM
        inpt_cost b left join inpt_visit a on a.id = b.visit_id  AND a.hosp_code = b.hosp_code
        left join inpt_settle c  on  b.settle_id = c.id AND b.hosp_code = c.hosp_code
        left join base_dept d  on  b.dept_id = d.id AND b.hosp_code = d.hosp_code
        left join base_finance_classify e  on  b.bfc_id = e.id AND b.hosp_code = e.hosp_code
        WHERE 1=1
        /*开始日期*/
        <if test="startDate != null and startDate != ''">
            and date(b.cost_time) &gt;= date(#{startDate})
        </if>
        /*结束日期*/
        <if test="endDate != null and endDate != ''">
            and date(b.cost_time) &lt;= date(#{endDate})
        </if>
        UNION ALL
        SELECT
        'MZ' as bizCode,
        '门诊' as  item_type,
        a.visit_no as in_no,
        a.name,
        a.gender_code,
        a.age,
        a.patient_code,
        DATE_FORMAT(a.visit_time , '%Y-%m-%d %H:%i:%s') as visit_time,
        null as in_time,
        null as out_time,
        DATE_FORMAT(c.settle_time , '%Y-%m-%d %H:%i:%s') as settle_time,
        b.item_id,
        b.bfc_id ,
        e.name as bfc_name,
        b.item_code ,
        b.item_name,
        b.spec,
        b.num_unit_code,
        b.price,
        b.doctor_id,
        b.doctor_name,
        b.visit_id,
        b.dept_id,
        d.name as dept_name,
        b.reality_price ,
        if(b.reality_price &lt; 0,-b.total_num,b.total_num)  AS num
        FROM outpt_cost   b left join outpt_visit a  on a.id = b.visit_id AND a.hosp_code = b.hosp_code
        left join outpt_settle c  on b.settle_id = c.id AND b.hosp_code = c.hosp_code
        left join base_dept d  on  b.dept_id = d.id AND b.hosp_code = d.hosp_code
        left join base_finance_classify e  on  b.bfc_id = e.id AND b.hosp_code = e.hosp_code
        WHERE 1=1
        /*开始日期*/
        <if test="startDate != null and startDate != ''">
            and date(b.crte_time) &gt;= date(#{startDate})
        </if>
        /*结束日期*/
        <if test="endDate != null and endDate != ''">
            and date(b.crte_time) &lt;= date(#{endDate})
        </if>
        UNION ALL
        SELECT
        'MZ' as bizCode,
        '挂号' as  item_type,
        a.visit_no as in_no,
        a.name,
        a.gender_code,
        a.age,
        a.patient_code,
        DATE_FORMAT(a.visit_time , '%Y-%m-%d %H:%i:%s') as visit_time,
        null as in_time,
        null as out_time,
        DATE_FORMAT(c.settle_time , '%Y-%m-%d %H:%i:%s') as settle_time,
        b.item_id,
        b.bfc_id ,
        e.name as bfc_name,
        b.item_code ,
        b.item_name,
        b.spec,
        b.unit_code,
        b.price,
        b.crte_id as doctor_id,
        b.crte_name as doctor_name,
        b.visit_id,
        a.dept_id,
        d.name as dept_name,
        b.reality_price,
        if (b.reality_price &lt; 0,-b.num,b.num) AS num
        FROM
        outpt_register_detail b left join outpt_visit a   on  a.id = b.visit_id  AND a.hosp_code = b.hosp_code
        left join outpt_register_settle c on b.register_id = c.register_id  AND b.hosp_code = c.hosp_code
        left join base_dept d  on  a.dept_id = d.id AND b.hosp_code = d.hosp_code
        left join base_finance_classify e  on  b.bfc_id = e.id AND b.hosp_code = e.hosp_code
        where 1=1
        /*开始日期*/
        <if test="startDate != null and startDate != ''">
            and date(b.crte_time) &gt;= date(#{startDate})
        </if>
        /*结束日期*/
        <if test="endDate != null and endDate != ''">
            and date(b.crte_time) &lt;= date(#{endDate})
        </if>
    </sql>
    <!--门诊住院项目使用量统计查询,按业务类型、开方医生、项目、就诊病人分组-->
    <select id="queryHospitalItemReportInfoGroupOne" resultType="java.util.LinkedHashMap">
        select
        t.bizCode,
        t.dept_name,
        t.item_type,
        t.in_no,
        t.name,
        t.gender_code,
        t.age,
        t.patient_code,
        DATE_FORMAT(t.visit_time , '%Y-%m-%d %H:%i:%s') as visit_time,
        DATE_FORMAT(t.in_time, '%Y-%m-%d %H:%i:%s') as in_time,
        DATE_FORMAT(t.out_time, '%Y-%m-%d %H:%i:%s') as out_time,
        DATE_FORMAT(t.settle_time, '%Y-%m-%d %H:%i:%s') as settle_time,
        t.item_id,
        t.bfc_name ,
        t.item_code ,
        t.item_name,
        t.spec,
        t.num_unit_code,
        t.price,
        t.doctor_id,
        t.doctor_name,
        t.visit_id,
        t.dept_id,
        sum( t.reality_price ) AS reality_price,
        sum( t.num ) AS num
        from (
            <include refid="MzZyItemPatientSql"/>
        ) t
        where 1=1
        <if test="tyepCodeList != null and tyepCodeList.size() > 0">
            and t.bizCode IN
            <foreach collection="tyepCodeList" separator="," open="(" close=")" item="item">
                #{item}
            </foreach>
        </if>
        <if test="deptId != null and deptId != ''">
            and t.dept_id = #{deptId}
        </if>
        <if test="userId != null and userId != ''">
            and t.doctor_id = #{userId}
        </if>
        <if test="insureCode != null and insureCode != ''">
            and t.patient_code = #{insureCode}
        </if>
        <if test="keyword != null and keyword != ''">
            and t.item_name  like '%${keyword}%'
        </if>
        group by t.item_id,
        t.bfc_name,
        t.item_code,
        t.item_name,
        t.spec,
        t.num_unit_code,
        t.price ,
        t.doctor_id,
        t.doctor_name,
        t.name,
        t.visit_id,
        t.in_no,
        t.gender_code,
        t.age,
        t.patient_code,
        t.in_time,
        t.out_time,
        t.settle_time
        ORDER BY t.item_type,t.visit_time ,t.visit_id,t.bfc_id,t.item_code,t.item_id
    </select>

    <!--门诊住院项目使用量统计查询,按业务类型、开方医生、项目、就诊病人分组合计-->
    <select id="queryHospitalItemReportInfoGroupOneSum" resultType="java.util.LinkedHashMap">
        select sum(num) as numSum ,sum(reality_price) as reality_priceSum from (
        <include refid="MzZyItemPatientSql"/>
        ) t
        where 1=1
        <if test="tyepCodeList != null and tyepCodeList.size() > 0">
            and t.bizCode IN
            <foreach collection="tyepCodeList" separator="," open="(" close=")" item="item">
                #{item}
            </foreach>
        </if>
        <if test="deptId != null and deptId != ''">
            and t.dept_id = #{deptId}
        </if>
        <if test="userId != null and userId != ''">
            and t.doctor_id = #{userId}
        </if>
        <if test="insureCode != null and insureCode != ''">
            and t.patient_code = #{insureCode}
        </if>
        <if test="keyword != null and keyword != ''">
            and t.item_name  like '%${keyword}%'
        </if>
    </select>

    <!--门诊科室/医生收入统计-->
    <select id="queryOutptCostBfcGroup" resultType="cn.hsa.module.outpt.fees.dto.OutptCostDTO">
        SELECT
        a.bfc_id as bfcId,
        b.name as bfcName
        FROM
        outpt_cost a ,
        base_finance_classify	b
        where a.bfc_id = b.id
        and a.bfc_id is not null
        /*开始日期*/
        <if test="startDate != null and startDate != ''">
            and date(a.crte_time) &gt;= date(#{startDate})
        </if>
        /*结束日期*/
        <if test="endDate != null and endDate != ''">
            and date(a.crte_time) &lt;= date(#{endDate})
        </if>
        group by a.bfc_id,b.name
    </select>

    <!--门诊科室/医生收入统计-->
    <select id="queryOutptDeptIncome" resultType="java.util.LinkedHashMap">
        select aaa.reality_price,aaa.dept_name,bbb.* from
        (select  b.name as dept_name,a.dept_id,sum(a.reality_price) reality_price
        from outpt_cost a ,base_dept b
        where a.status_code ='0'
        and a.dept_id = b.id
        and a.hosp_code = #{hospCode}
        /*开始日期*/
        <if test="startTime != null and startTime != ''">
            and date(a.crte_time) &gt;= date(#{startTime})
        </if>
        /*结束日期*/
        <if test="endTime != null and endTime != ''">
            and date(a.crte_time) &lt;= date(#{endTime})
        </if>
        GROUP BY a.dept_id,b.name ) aaa ,  ( select c.dept_id ,
        ${sumSqlStr} from (select b.dept_id,
        ${caseSqlStr}
        from (
        select a.dept_id,a.bfc_id,sum(a.reality_price) as reality_price
        from outpt_cost a  where  a.hosp_code = #{hospCode}
        /*开始日期*/
        <if test="startTime != null and startTime != ''">
            and date(a.crte_time) &gt;= date(#{startTime})
        </if>
        /*结束日期*/
        <if test="endTime != null and endTime != ''">
            and date(a.crte_time) &lt;= date(#{endTime})
        </if>
        GROUP BY a.dept_id ,a.bfc_id ) b ) c group by c.dept_id ) bbb  where aaa.dept_id = bbb.dept_id order by bbb.dept_id
    </select>

    <!--住院科室用药统计-->
    <select id="queryInptMedication" resultType="java.util.LinkedHashMap">
        select A.* from (
        select
        max(a.item_name) as itemName,
        sum(a.num) as num,
        sum(a.split_num) as splitNum,
        sum(a.total_price) as totalPrice,
        max(a.price) as price,
        max(a.split_price) as splitPrice,
        case max(a.item_code) when '1' then max(bd.spec) when '2' then max(bm.spec) end spec,
        case max(a.item_code) when '1' then max(bd.code) when '2' then max(bm.code) end code,
        max(a.unit_code) as unitCode,
        max(a.split_unit_code) as splitUnitCode,
        (select name from base_dept where id = b.dept_id) as deptName
        from phar_in_distribute_all_detail a
        left join phar_in_distribute b on a.distribute_id = b.id
        left join base_drug bd on a.item_id = bd.id and a.hosp_code = bd.hosp_code and a.item_code = '1'
        left join base_material bm on a.item_id = bm.id and a.hosp_code = bm.hosp_code and a.item_code = '2'
        where a.hosp_code = #{hospCode}
        /*开始日期*/
        <if test="startTime != null and startTime != ''">
            and date(a.crte_time) &gt;= date(#{startTime})
        </if>
        /*结束日期*/
        <if test="endTime != null and endTime != ''">
            and date(a.crte_time) &lt;= date(#{endTime})
        </if>
        /*项目名称*/
        <if test="keyword != null and keyword != ''">
            and (a.item_name like concat('%',#{keyword},'%')
            or bd.usual_name like concat('%',#{keyword},'%')
            or bd.good_pym like concat('%',#{keyword},'%')
            or bd.good_wbm like concat('%',#{keyword},'%')
            or bd.usual_pym like concat('%',#{keyword},'%')
            or bd.usual_wbm like concat('%',#{keyword},'%')
            )
        </if>
        group by b.dept_id, a.item_id
        ) A where A.splitNum != 0

    </select>

    <!--药房消耗量统计-->
    <resultMap type="cn.hsa.module.stro.stroinvoicing.dto.StroInvoicingDTO" id="StroInvoicingMap">
        <result property="id" column="id" jdbcType="VARCHAR"/>
        <result property="hospCode" column="hosp_code" jdbcType="VARCHAR"/>
        <result property="outinCode" column="outin_code" jdbcType="VARCHAR"/>
        <result property="orderNo" column="order_no" jdbcType="VARCHAR"/>
        <result property="bizId" column="biz_id" jdbcType="VARCHAR"/>
        <result property="itemCode" column="item_code" jdbcType="VARCHAR"/>
        <result property="itemId" column="item_id" jdbcType="VARCHAR"/>
        <result property="itemName" column="item_name" jdbcType="VARCHAR"/>
        <result property="num" column="num" jdbcType="OTHER"/>
        <result property="unitCode" column="unit_code" jdbcType="VARCHAR"/>
        <result property="currUnitCode" column="curr_unit_code" jdbcType="VARCHAR"/>
        <result property="sellPrice" column="sell_price" jdbcType="OTHER"/>
        <result property="buyPrice" column="buy_price" jdbcType="OTHER"/>
        <result property="splitRatio" column="split_ratio" jdbcType="OTHER"/>
        <result property="splitPrice" column="split_price" jdbcType="OTHER"/>
        <result property="splitNum" column="split_num" jdbcType="OTHER"/>
        <result property="splitUnitCode" column="split_unit_code" jdbcType="VARCHAR"/>
        <result property="batchNo" column="batch_no" jdbcType="VARCHAR"/>
        <result property="batchSurplusNum" column="batch_surplus_num" jdbcType="OTHER"/>
        <result property="upSurplusNum" column="up_surplus_num" jdbcType="OTHER"/>
        <result property="surplusNum" column="surplus_num" jdbcType="OTHER"/>
        <result property="upBuyPriceAll" column="up_buy_price_all" jdbcType="OTHER"/>
        <result property="buyPriceAll" column="buy_price_all" jdbcType="OTHER"/>
        <result property="upSellPriceAll" column="up_sell_price_all" jdbcType="OTHER"/>
        <result property="sellPriceAll" column="sell_price_all" jdbcType="OTHER"/>
        <result property="expiryDate" column="expiry_date" jdbcType="TIMESTAMP"/>
        <result property="crteId" column="crte_id" jdbcType="VARCHAR"/>
        <result property="crteName" column="crte_name" jdbcType="VARCHAR"/>
        <result property="crteTime" column="crte_time" jdbcType="TIMESTAMP"/>
        <result property="bizName" column="bizName" jdbcType="VARCHAR"/>
    </resultMap>



    <!-- 入库汇总统计 按供应商 出库药房汇总统计 按药房  出库科室汇总统计 按科室  -->
    <select id="queryStroBusinessSummary" resultType="java.util.Map">
        select
        bs.name as supplierName, /*供应商名*/
        count(distinct sid.order_no) as mainNum, /*单据总数*/
        count(0) as detailNum, /*明细总数*/
        count(distinct sid.item_id) as itemNum, /*品种总数*/
        count(distinct sid.batch_no) as batchNoNum, /*批次总数*/
        max(sid.crte_time) as lastTime, /*最近入库时间*/
        (sum( sid.num * sid.buy_price) ) / count( DISTINCT sid.order_no ) AS avgMainBuyPrice,/*单据平均购进价*/
        (sum( sid.buy_price * sid.num) ) / count( DISTINCT sid.item_id ) AS avgItemBuyPrice,
        (sum( sid.buy_price * sid.num ) ) AS buyPriceAll,/*购进总金额*/
        (sum( sid.sell_price * sid.num ) ) AS sellPriceAll,/*零售总金额*/
        ( sum( sid.sell_price * sid.num )- sum( sid.buy_price * sid.num )) AS priceSpread /*购零差*/
        from stro_invoicing sid
        ${sql}
        <if test="startDate != null and startDate != ''">
            and date(sid.crte_time) &gt;=date(#{startDate})
        </if>
        /*出院日期*/
        <if test="endDate != null and endDate !='' ">
            and date(sid.crte_time) &lt;=date(#{endDate})
        </if>
        /*药房*/
        <if test="yfids != null and yfids.size()>0">
            and bs.id in
            <foreach collection="yfids" item="id" separator="," open="(" close=")">
                #{id}
            </foreach>
        </if>
        /*科室*/
        <if test="ksids != null and ksids.size()>0">
            and bs.id in
            <foreach collection="ksids" item="id" separator="," open="(" close=")">
                #{id}
            </foreach>
        </if>
        /*供应商*/
        <if test="gysids != null and gysids.size()>0">
            and bs.id in
            <foreach collection="gysids" item="id" separator="," open="(" close=")">
                #{id}
            </foreach>
        </if>
        and
        sid.biz_id in
        <foreach collection="bizIds" item="item" separator="," open="(" close=")">
            #{item}
        </foreach>
        group by supplierName
    </select>
    <!-- 入库汇总统计合计 按供应商 出库药房汇总统计 按药房  出库科室汇总统计 按科室  -->
    <select id="queryStroBusinessSummarySum" resultType="java.util.Map">
        select SUM(mainNum)as mainNumSum,
        SUM(detailNum)as detailNumSum,
        SUM(itemNum)as itemNumSum
        ,SUM(batchNoNum)as batchNoNumSum
        ,SUM(avgMainBuyPrice)as avgMainBuyPriceSum
        ,SUM(avgItemBuyPrice)as avgItemBuyPriceSum
        ,SUM(buyPriceAll)as buyPriceAllSum
        ,SUM(sellPriceAll)as sellPriceAllSum
        ,SUM(priceSpread)as priceSpreadSum
        from(
        select
        bs.name as supplierName, /*供应商名*/
        count(distinct sid.order_no) as mainNum, /*单据总数*/
        count(0) as detailNum, /*明细总数*/
        count(distinct sid.item_id) as itemNum, /*品种总数*/
        count(distinct sid.batch_no) as batchNoNum, /*批次总数*/
        max(sid.crte_time) as lastTime, /*最近入库时间*/
        (sum( sid.num * sid.buy_price) ) / count( DISTINCT sid.order_no ) AS avgMainBuyPrice,/*单据平均购进价*/
        (sum( sid.buy_price * sid.num) ) / count( DISTINCT sid.item_id ) AS avgItemBuyPrice,
        (sum( sid.buy_price * sid.num ) ) AS buyPriceAll,/*购进总金额*/
        (sum( sid.sell_price * sid.num ) ) AS sellPriceAll,/*零售总金额*/
        ( sum( sid.sell_price * sid.num )- sum( sid.buy_price * sid.num )) AS priceSpread /*购零差*/
        from stro_invoicing sid
        ${sql}
        <if test="startDate != null and startDate != ''">
            and date(sid.crte_time) &gt;=date(#{startDate})
        </if>
        /*出院日期*/
        <if test="endDate != null and endDate !='' ">
            and date(sid.crte_time) &lt;=date(#{endDate})
        </if>
        /*药房*/
        <if test="yfids != null and yfids.size()>0">
            and bs.id in
            <foreach collection="yfids" item="id" separator="," open="(" close=")">
                #{id}
            </foreach>
        </if>

        /*科室*/
        <if test="ksids != null and ksids.size()>0">
            and bs.id in
            <foreach collection="ksids" item="id" separator="," open="(" close=")">
                #{id}
            </foreach>
        </if>
        /*供应商*/
        <if test="gysids != null and gysids.size()>0">
            and bs.id in
            <foreach collection="gysids" item="id" separator="," open="(" close=")">
                #{id}
            </foreach>
        </if>
        and
        sid.biz_id in
        <foreach collection="bizIds" item="item" separator="," open="(" close=")">
            #{item}
        </foreach>
        group by supplierName
        )tableSum
    </select>

    <!-- 入库汇总统计 按供应商/入库单据 -->
    <select id="queryStroBusinessSummaryMain" resultType="java.util.Map">
        select
        max(bs.name) as supplierName, /*供应商名*/
        sid.order_no as orderNo, /*单据号*/
        count(0) as detailNum, /*明细笔数*/
        count(distinct sid.item_id) as itemNum, /*品种数*/
        count(distinct sid.batch_no) as batchNoNum, /*批号数*/
        max(sid.outin_code) as outinCode, /*出入方式*/
        (sum( sid.buy_price * sid.num) ) / count( DISTINCT sid.item_id ) AS avgItemBuyPrice,
        (sum( sid.buy_price * sid.num ) ) AS buyPriceAll,/*购进总金额*/
        (sum( sid.sell_price * sid.num ) ) AS sellPriceAll,/*零售总金额*/
        (sum( sid.sell_price * sid.num )- sum( sid.buy_price * sid.num )) AS priceSpread, /*购零差*/
        case max(sid.item_code) when '1' then max(b.big_type_code) when '2' then '3' end typeCode,
        max(sid.crte_time) as crteTime
        from stro_invoicing sid
        left join base_drug b on sid.item_id = b.id and sid.hosp_code = b.hosp_code and sid.item_code = '1'
        left join base_material c on sid.item_id = c.id and sid.hosp_code = c.hosp_code and sid.item_code = '2'
        ${sql}
        <if test="startDate != null and startDate != ''">
            and date(sid.crte_time) &gt;=date(#{startDate})
        </if>
        /*出院日期*/
        <if test="endDate != null and endDate !='' ">
            and date(sid.crte_time) &lt;= date(#{endDate})
        </if>
        /*药房*/
        <if test="yfids != null and yfids.size()>0">
            and bs.id in
            <foreach collection="yfids" item="id" separator="," open="(" close=")">
                #{id}
            </foreach>
        </if>

        /*科室*/
        <if test="ksids != null and ksids.size()>0">
            and bs.id in
            <foreach collection="ksids" item="id" separator="," open="(" close=")">
                #{id}
            </foreach>
        </if>

        /*供应商*/
        <if test="gysids != null and gysids.size()>0">
            and bs.id in
            <foreach collection="gysids" item="id" separator="," open="(" close=")">
                #{id}
            </foreach>
        </if>
        and
        sid.biz_id in
        <foreach collection="bizIds" item="item" separator="," open="(" close=")">
            #{item}
        </foreach>
        group by sid.order_no
        <if test="type != null and type == 'Y'.toString() ">
            ,(case sid.item_code when '1' then b.big_type_code when '2' then '3' end)
        </if>
        order by supplierName
    </select>
    <!-- 入库汇总统计合计 按供应商/入库单据 -->
    <select id="queryStroBusinessSummaryMainSum" resultType="java.util.Map">
        select SUM(detailNum)as detailNumSum,SUM(itemNum)as itemNumSum,SUM(batchNoNum)as batchNoNumSum
        ,SUM(avgItemBuyPrice)as avgItemBuyPriceSum
        ,SUM(buyPriceAll)as buyPriceAllSum
        ,SUM(sellPriceAll)as sellPriceAllSum
        ,SUM(priceSpread)as priceSpreadSum
        from(
        select
        max(bs.name) as supplierName, /*供应商名*/
        sid.order_no as orderNo, /*单据号*/
        count(0) as detailNum, /*明细笔数*/
        count(distinct sid.item_id) as itemNum, /*品种数*/
        count(distinct sid.batch_no) as batchNoNum, /*批号数*/
        max(sid.outin_code) as outinCode, /*出入方式*/
        (sum( sid.buy_price * sid.num) ) / count( DISTINCT sid.item_id ) AS avgItemBuyPrice,
        (sum( sid.buy_price * sid.num ) ) AS buyPriceAll,/*购进总金额*/
        (sum( sid.sell_price * sid.num ) ) AS sellPriceAll,/*零售总金额*/
        (sum( sid.sell_price * sid.num )- sum( sid.buy_price * sid.num )) AS priceSpread, /*购零差*/
        case max(sid.item_code) when '1' then max(b.big_type_code) when '2' then '3' end typeCode
        from stro_invoicing sid
        left join base_drug b on sid.item_id = b.id and sid.hosp_code = b.hosp_code and sid.item_code = '1'
        left join base_material c on sid.item_id = c.id and sid.hosp_code = c.hosp_code and sid.item_code = '2'
        ${sql}
        <if test="startDate != null and startDate != ''">
            and date(sid.crte_time) &gt;=date(#{startDate})
        </if>
        /*出院日期*/
        <if test="endDate != null and endDate !='' ">
            and date(sid.crte_time) &lt;= date(#{endDate})
        </if>
        /*药房*/
        <if test="yfids != null and yfids.size()>0">
            and bs.id in
            <foreach collection="yfids" item="id" separator="," open="(" close=")">
                #{id}
            </foreach>
        </if>

        /*科室*/
        <if test="ksids != null and ksids.size()>0">
            and bs.id in
            <foreach collection="ksids" item="id" separator="," open="(" close=")">
                #{id}
            </foreach>
        </if>

        /*供应商*/
        <if test="gysids != null and gysids.size()>0">
            and bs.id in
            <foreach collection="gysids" item="id" separator="," open="(" close=")">
                #{id}
            </foreach>
        </if>
        and
        sid.biz_id in
        <foreach collection="bizIds" item="item" separator="," open="(" close=")">
            #{item}
        </foreach>
        group by sid.order_no
        <if test="type != null and type == 'Y'.toString() ">
            ,(case sid.item_code when '1' then b.big_type_code when '2' then '3' end)
        </if>
        order by supplierName
        )tableSum
    </select>

    <!-- 入库汇总统计合计 按供应商/入库单据明细 -->
    <select id="queryStroBusinessSummaryMainDeTail" resultType="java.util.Map">
        select
        bs.name as supplierName, /*供应商名*/
        sid.order_no as orderNo, /*单据号*/
        sid.item_name as itemName,
        sid.unit_code as unitCode,
        sid.batch_no as batchNo,
        sid.expiry_date as expiryDate,
        sid.sell_price as sellPrice,
        sid.buy_price as buyPrice,
        sid.split_num as splitNum,
        sid.num as num,
        (sid.num * sid.buy_price) as buyPriceAll,
        (sid.num * sid.sell_price) as sellPriceAll,
        (sid.sell_price - sid.buy_price) * sid.num as priceSpread,
        case sid.item_code when '1' then b.spec when '2' then c.spec end spec,
        case sid.item_code when '1' then b.code when '2' then c.code end code,
        case sid.item_code when '1' then b.big_type_code when '2' then '3' end typeCode,
        sid.crte_time as crteTime,
        case sid.item_code when '1' then (select p.name from base_product p where p.hosp_code = #{hospCode} and p.code = b.prod_code)
        when '2' then (select p.name from base_product p where p.hosp_code = #{hospCode} and p.code = c.prod_code)
        end prodName
        from stro_invoicing sid
        left join base_drug b on sid.item_id = b.id and sid.hosp_code = b.hosp_code and sid.item_code = '1'
        left join base_material c on sid.item_id = c.id and sid.hosp_code = c.hosp_code and sid.item_code = '2'
        ${sql}
        <if test="startDate != null and startDate != ''">
            and date(sid.crte_time) &gt;=date(#{startDate})
        </if>
        /*出院日期*/
        <if test="endDate != null and endDate !='' ">
            and date(sid.crte_time) &lt;= date(#{endDate})
        </if>
        /*药房*/
        <if test="yfids != null and yfids.size()>0">
            and bs.id in
            <foreach collection="yfids" item="id" separator="," open="(" close=")">
                #{id}
            </foreach>
        </if>

        /*科室*/
        <if test="ksids != null and ksids.size()>0">
            and bs.id in
            <foreach collection="ksids" item="id" separator="," open="(" close=")">
                #{id}
            </foreach>
        </if>

        /*供应商*/
        <if test="gysids != null and gysids.size()>0">
            and bs.id in
            <foreach collection="gysids" item="id" separator="," open="(" close=")">
                #{id}
            </foreach>
        </if>
        and
        sid.biz_id in
        <foreach collection="bizIds" item="item" separator="," open="(" close=")">
            #{item}
        </foreach>
        <if test="type != null and type == 'Y'.toString() ">
            ,(case sid.item_code when '1' then b.big_type_code when '2' then '3' end)
        </if>
        order by supplierName
    </select>

    <!-- 入库汇总统计 按供应商/计费类别 -->
    <select id="queryStroBusinessSummaryBfc" resultType="java.util.Map">
        select
        x.supplierName as supplierName,
        max(bfc.name) as bfcName,
        count(distinct x.itemId) as itemNum,
        count(distinct x.batchNo) as batchNoNum,
        sum(x.buyPriceAll)/count(distinct x.itemId) as avgItemBuyPrice,
        sum(x.buyPriceAll) as buyPriceAll,
        sum(x.sellPriceAll) as sellPriceAll,
        <if test="type != null and type == 'Y'.toString() ">
            x.typeCode,
        </if>
        (sum(x.sellPriceAll) - sum(x.buyPriceAll)) as priceSpread
        from (
        select
        bs.name as supplierName,
        sid.item_id as itemId,
        sid.batch_no as batchNo,
        sid.buy_price as buyPrice,
        (sid.buy_price * sid.num) as buyPriceAll,
        (sid.sell_price * sid.num) as sellPriceAll,
        case sid.item_code when '1' then b.bfc_code when '2' then c.bfc_code end as bfcCode,
        case sid.item_code when '1' then b.big_type_code when '2' then '3' end typeCode
        from stro_invoicing sid
        left join base_drug b on sid.item_id = b.id and sid.hosp_code = b.hosp_code and sid.item_code = '1'
        left join base_material c on sid.item_id = c.id and sid.hosp_code = c.hosp_code and sid.item_code = '2'
        ${sql}
        <if test="startDate != null and startDate != ''">
            and date(sid.crte_time) &gt;=date(#{startDate})
        </if>
        /*出院日期*/
        <if test="endDate != null and endDate !='' ">
            and date(sid.crte_time) &lt;= date(#{endDate})
        </if>
        /*药房*/
        <if test="yfids != null and yfids.size()>0">
            and bs.id in
            <foreach collection="yfids" item="id" separator="," open="(" close=")">
                #{id}
            </foreach>
        </if>

        /*科室*/
        <if test="ksids != null and ksids.size()>0">
            and bs.id in
            <foreach collection="ksids" item="id" separator="," open="(" close=")">
                #{id}
            </foreach>
        </if>
        /*供应商*/
        <if test="gysids != null and gysids.size()>0">
            and bs.id in
            <foreach collection="gysids" item="id" separator="," open="(" close=")">
                #{id}
            </foreach>
        </if>
        and
        sid.biz_id in
        <foreach collection="bizIds" item="item" separator="," open="(" close=")">
            #{item}
        </foreach>
        )x left join base_finance_classify bfc on x.bfcCode = bfc.code and bfc.hosp_code = #{hospCode}
        group by supplierName,
        <if test="type != null and type == 'Y'.toString() ">
            x.typeCode,
        </if>
        x.bfcCode
        order by supplierName
    </select>
    <!-- 入库汇总统计合计 按供应商/计费类别 -->
    <select id="queryStroBusinessSummaryBfcSum" resultType="java.util.Map">
        select SUM(itemNum)as itemNumSum,SUM(batchNoNum)as batchNoNumSum,SUM(avgItemBuyPrice)as avgItemBuyPriceSum
        ,SUM(buyPriceAll)as buyPriceAllSum,SUM(sellPriceAll)as sellPriceAllSum,SUM(priceSpread)as priceSpreadSum
        from (
        select
        x.supplierName as supplierName,
        max(bfc.name) as bfcName,
        count(distinct x.itemId) as itemNum,
        count(distinct x.batchNo) as batchNoNum,
        sum(x.buyPriceAll)/count(distinct x.itemId) as avgItemBuyPrice,
        sum(x.buyPriceAll) as buyPriceAll,
        sum(x.sellPriceAll) as sellPriceAll,
        <if test="type != null and type == 'Y'.toString() ">
            x.typeCode,
        </if>
        (sum(x.sellPriceAll) - sum(x.buyPriceAll)) as priceSpread
        from (
        select
        bs.name as supplierName,
        sid.item_id as itemId,
        sid.batch_no as batchNo,
        sid.buy_price as buyPrice,
        (sid.buy_price * sid.num) as buyPriceAll,
        (sid.sell_price * sid.num) as sellPriceAll,
        case sid.item_code when '1' then b.bfc_code when '2' then c.bfc_code end as bfcCode,
        case sid.item_code when '1' then b.big_type_code when '2' then '3' end typeCode
        from stro_invoicing sid
        left join base_drug b on sid.item_id = b.id and sid.hosp_code = b.hosp_code and sid.item_code = '1'
        left join base_material c on sid.item_id = c.id and sid.hosp_code = c.hosp_code and sid.item_code = '2'
        ${sql}
        <if test="startDate != null and startDate != ''">
            and date(sid.crte_time) &gt;=date(#{startDate})
        </if>
        /*出院日期*/
        <if test="endDate != null and endDate !='' ">
            and date(sid.crte_time) &lt;= date(#{endDate})
        </if>
        /*药房*/
        <if test="yfids != null and yfids.size()>0">
            and bs.id in
            <foreach collection="yfids" item="id" separator="," open="(" close=")">
                #{id}
            </foreach>
        </if>

        /*科室*/
        <if test="ksids != null and ksids.size()>0">
            and bs.id in
            <foreach collection="ksids" item="id" separator="," open="(" close=")">
                #{id}
            </foreach>
        </if>
        /*供应商*/
        <if test="gysids != null and gysids.size()>0">
            and bs.id in
            <foreach collection="gysids" item="id" separator="," open="(" close=")">
                #{id}
            </foreach>
        </if>
        and
        sid.biz_id in
        <foreach collection="bizIds" item="item" separator="," open="(" close=")">
            #{item}
        </foreach>
        )x left join base_finance_classify bfc on x.bfcCode = bfc.code and bfc.hosp_code = #{hospCode}
        group by supplierName,
        <if test="type != null and type == 'Y'.toString() ">
            x.typeCode,
        </if>
        x.bfcCode
        order by supplierName
        )tableSum
    </select>

    <!-- 入库汇总统计 按供应商/品种 -->
    <select id="queryStroBusinessSummaryByItemAndBatchNo" resultType="java.util.Map">
        select
        bs.name as supplierName,
        max(sid.item_name) as itemName,
        max(sid.unit_code) as unitCode,
        min(sid.buy_price) as minBuyPrice,
        max(sid.buy_price) as maxBuyPrice,
        avg(sid.buy_price) as avgBuyPrice,
        sum(sid.num) as num,
        (avg(sid.buy_price) * sum(sid.num)) as buyPriceAll,
        (avg(sid.sell_price) * sum(sid.num)) as sellPriceAll,
        ((avg(sid.sell_price) - avg(sid.buy_price))* sum(sid.num)) as priceSpread,
        case max(sid.item_code) when '1' then max(b.spec) when '2' then max(c.spec) end spec,
        case max(sid.item_code) when '1' then max(b.code) when '2' then max(c.code) end code,
        case max(sid.item_code) when '1' then max(b.big_type_code) when '2' then '3' end typeCode
        from stro_invoicing sid
        left join base_drug b on sid.item_id = b.id and sid.hosp_code = b.hosp_code and sid.item_code = '1'
        left join base_material c on sid.item_id = c.id and sid.hosp_code = c.hosp_code and sid.item_code = '2'
        ${sql}
        <if test="startDate != null and startDate != ''">
            and date(sid.crte_time) &gt;=date(#{startDate})
        </if>
        /*出院日期*/
        <if test="endDate != null and endDate !='' ">
            and date(sid.crte_time) &lt;= date(#{endDate})
        </if>

        /*药房*/
        <if test="yfids != null and yfids.size()>0">
            and bs.id in
            <foreach collection="yfids" item="id" separator="," open="(" close=")">
                #{id}
            </foreach>
        </if>

        /*科室*/
        <if test="ksids != null and ksids.size()>0">
            and bs.id in
            <foreach collection="ksids" item="id" separator="," open="(" close=")">
                #{id}
            </foreach>
        </if>
        /*供应商*/
        <if test="gysids != null and gysids.size()>0">
            and bs.id in
            <foreach collection="gysids" item="id" separator="," open="(" close=")">
                #{id}
            </foreach>
        </if>
        /*药品或者项目*/
        <if test="ypxm != null and ypxm != ''">
            and  sid.item_name like '%${ypxm}%'
        </if>
        and
        sid.biz_id in
        <foreach collection="bizIds" item="item" separator="," open="(" close=")">
            #{item}
        </foreach>
        group by supplierName,
        <if test="type != null and type == 'Y'.toString() ">
            (case sid.item_code when '1' then b.big_type_code when '2' then '3' end),
        </if>
        item_id
        order by supplierName
    </select>
    <!-- 入库汇总统计合计 按供应商/品种 -->
    <select id="queryStroBusinessSummaryByItemAndBatchNoSum" resultType="java.util.Map">
        select SUM(minBuyPrice)as minBuyPriceSum,SUM(maxBuyPrice)as maxBuyPriceSum,SUM(avgBuyPrice)as avgBuyPriceSum,
        SUM(num)as numSum,SUM(buyPriceAll)as buyPriceAllSum,SUM(sellPriceAll)as sellPriceAllSum,
        SUM(priceSpread)as priceSpreadSum from(
        select
        bs.name as supplierName,
        max(sid.item_name) as itemName,
        max(sid.unit_code) as unitCode,
        min(sid.buy_price) as minBuyPrice,
        max(sid.buy_price) as maxBuyPrice,
        avg(sid.buy_price) as avgBuyPrice,
        sum(sid.num) as num,
        (avg(sid.buy_price) * sum(sid.num)) as buyPriceAll,
        (avg(sid.sell_price) * sum(sid.num)) as sellPriceAll,
        ((avg(sid.sell_price) - avg(sid.buy_price))* sum(sid.num)) as priceSpread,
        case max(sid.item_code) when '1' then max(b.spec) when '2' then max(c.spec) end spec,
        case max(sid.item_code) when '1' then max(b.code) when '2' then max(c.code) end code,
        case max(sid.item_code) when '1' then max(b.big_type_code) when '2' then '3' end typeCode
        from stro_invoicing sid
        left join base_drug b on sid.item_id = b.id and sid.hosp_code = b.hosp_code and sid.item_code = '1'
        left join base_material c on sid.item_id = c.id and sid.hosp_code = c.hosp_code and sid.item_code = '2'
        ${sql}
        <if test="startDate != null and startDate != ''">
            and date(sid.crte_time) &gt;=date(#{startDate})
        </if>
        /*出院日期*/
        <if test="endDate != null and endDate !='' ">
            and date(sid.crte_time) &lt;= date(#{endDate})
        </if>

        /*药房*/
        <if test="yfids != null and yfids.size()>0">
            and bs.id in
            <foreach collection="yfids" item="id" separator="," open="(" close=")">
                #{id}
            </foreach>
        </if>

        /*科室*/
        <if test="ksids != null and ksids.size()>0">
            and bs.id in
            <foreach collection="ksids" item="id" separator="," open="(" close=")">
                #{id}
            </foreach>
        </if>
        /*供应商*/
        <if test="gysids != null and gysids.size()>0">
            and bs.id in
            <foreach collection="gysids" item="id" separator="," open="(" close=")">
                #{id}
            </foreach>
        </if>
        /*药品或者项目*/
        <if test="ypxm != null and ypxm != ''">
            and sid.item_name like '%${ypxm}%'
        </if>
        and
        sid.biz_id in
        <foreach collection="bizIds" item="item" separator="," open="(" close=")">
            #{item}
        </foreach>
        group by supplierName,
        <if test="type != null and type == 'Y'.toString() ">
            (case sid.item_code when '1' then b.big_type_code when '2' then '3' end),
        </if>
        item_id
        order by supplierName
        )tableSum
    </select>
    <!-- 入库汇总统计 按供应商/品种批次 -->
    <select id="queryStroBusinessSummaryItem" resultType="java.util.Map">
        select
        bs.name as supplierName,
        max(sid.item_name) as itemName,
        max(sid.unit_code) as unitCode,
        sid.batch_No as batchNo,
        min(expiry_date) as expiryDate,
        max(sid.buy_price) as buyPrice,
        max(sid.sell_price) as sellPrice,
        sum(sid.num) as num,
        (sum(sid.num) * avg(sid.buy_price)) as buyPriceAll,
        (sum(sid.num) * avg(sid.sell_price)) as sellPriceAll,
        ((avg(sid.sell_price) - avg(sid.buy_price))* sum(sid.num)) as priceSpread,
        case max(sid.item_code) when '1' then max(b.spec) when '2' then max(c.spec) end spec,
        case max(sid.item_code) when '1' then max(b.code) when '2' then max(c.code) end code,
        case max(sid.item_code) when '1' then max(b.big_type_code) when '2' then '3' end typeCode,
        case max(sid.item_code) when '1' then (select p.name from base_product p where p.hosp_code = #{hospCode} and p.code = max(b.prod_code))
        when '2' then (select p.name from base_product p where p.hosp_code = #{hospCode} and p.code = max(c.prod_code))
        end prodName
        from stro_invoicing sid
        left join base_drug b on sid.item_id = b.id and sid.hosp_code = b.hosp_code and sid.item_code = '1'
        left join base_material c on sid.item_id = c.id and sid.hosp_code = c.hosp_code and sid.item_code = '2'
        ${sql}
        <if test="startDate != null and startDate != ''">
            and date(sid.crte_time) &gt;=date(#{startDate})
        </if>
        /*出院日期*/
        <if test="endDate != null and endDate !='' ">
            and date(sid.crte_time) &lt;= date(#{endDate})
        </if>
        /*药房*/
        <if test="yfids != null and yfids.size()>0">
            and bs.id in
            <foreach collection="yfids" item="id" separator="," open="(" close=")">
                #{id}
            </foreach>
        </if>

        /*科室*/
        <if test="ksids != null and ksids.size()>0">
            and bs.id in
            <foreach collection="ksids" item="id" separator="," open="(" close=")">
                #{id}
            </foreach>
        </if>
        /*供应商*/
        <if test="gysids != null and gysids.size()>0">
            and bs.id in
            <foreach collection="gysids" item="id" separator="," open="(" close=")">
                #{id}
            </foreach>
        </if>
        and
        sid.biz_id in
        <foreach collection="bizIds" item="item" separator="," open="(" close=")">
            #{item}
        </foreach>
        group by supplierName,
        <if test="type != null and type == 'Y'.toString() ">
            (case sid.item_code when '1' then b.big_type_code when '2' then '3' end),
        </if>
        sid.item_id,sid.batch_No
        order by supplierName
    </select>

    <!-- 入库汇总统计合计 按供应商/品种批次 -->
    <select id="queryStroBusinessSummaryItemSum" resultType="java.util.Map">
        select SUM(buyPrice)as buyPriceSum,SUM(sellPrice)as sellPriceSum,SUM(num)as numSum
        ,SUM(buyPriceAll)as buyPriceAllSum,SUM(sellPriceAll)as sellPriceAllSum,SUM(priceSpread)as priceSpreadSum from(
        select
        bs.name as supplierName,
        max(sid.item_name) as itemName,
        max(sid.unit_code) as unitCode,
        sid.batch_No as batchNo,
        min(expiry_date) as expiryDate,
        max(sid.buy_price) as buyPrice,
        max(sid.sell_price) as sellPrice,
        sum(sid.num) as num,
        (sum(sid.num) * avg(sid.buy_price)) as buyPriceAll,
        (sum(sid.num) * avg(sid.sell_price)) as sellPriceAll,
        ((avg(sid.sell_price) - avg(sid.buy_price))* sum(sid.num)) as priceSpread,
        case max(sid.item_code) when '1' then max(b.spec) when '2' then max(c.spec) end spec,
        case max(sid.item_code) when '1' then max(b.code) when '2' then max(c.code) end code,
        case max(sid.item_code) when '1' then max(b.big_type_code) when '2' then '3' end typeCode,
        case max(sid.item_code) when '1' then (select p.name from base_product p where p.hosp_code = #{hospCode} and
        p.code = max(b.prod_code))
        when '2' then (select p.name from base_product p where p.hosp_code = #{hospCode} and p.code = max(c.prod_code))
        end prodName
        from stro_invoicing sid
        left join base_drug b on sid.item_id = b.id and sid.hosp_code = b.hosp_code and sid.item_code = '1'
        left join base_material c on sid.item_id = c.id and sid.hosp_code = c.hosp_code and sid.item_code = '2'
        ${sql}
        <if test="startDate != null and startDate != ''">
            and date(sid.crte_time) &gt;=date(#{startDate})
        </if>
        /*出院日期*/
        <if test="endDate != null and endDate !='' ">
            and date(sid.crte_time) &lt;= date(#{endDate})
        </if>
        /*药房*/
        <if test="yfids != null and yfids.size()>0">
            and bs.id in
            <foreach collection="yfids" item="id" separator="," open="(" close=")">
                #{id}
            </foreach>
        </if>

        /*科室*/
        <if test="ksids != null and ksids.size()>0">
            and bs.id in
            <foreach collection="ksids" item="id" separator="," open="(" close=")">
                #{id}
            </foreach>
        </if>
        /*供应商*/
        <if test="gysids != null and gysids.size()>0">
            and bs.id in
            <foreach collection="gysids" item="id" separator="," open="(" close=")">
                #{id}
            </foreach>
        </if>
        and
        sid.biz_id in
        <foreach collection="bizIds" item="item" separator="," open="(" close=")">
            #{item}
        </foreach>
        group by supplierName,
        <if test="type != null and type == 'Y'.toString() ">
            (case sid.item_code when '1' then b.big_type_code when '2' then '3' end),
        </if>
        sid.item_id,sid.batch_No
        order by supplierName
        )tableSum
    </select>

    <select id="queryPharConsume" resultMap="StroInvoicingMap">
        select
        siv.item_id as item_id,
        siv.batch_no as batch_no,
        siv.item_name as item_name,
        siv.item_code as item_code,
        siv.unit_code as unit_code,
        siv.sell_price as sell_price,
        siv.buy_price as buy_price,
        siv.num as num,
        siv.biz_id as biz_id,
        siv.crte_time as crte_time,
        siv.split_num as split_num,
        siv.split_unit_code as split_unit_code,
        case siv.item_code when '1' then b.spec when '2' then c.spec end spec,
        case siv.item_code when '1' then b.code when '2' then c.code end code,
        case siv.item_code when '1' then b.big_type_code when '2' then '3' end typeCode
        from stro_invoicing siv
        left join base_drug b on siv.item_id = b.id and siv.hosp_code = b.hosp_code and siv.item_code = '1'
        left join base_material c on siv.item_id = c.id and siv.hosp_code = c.hosp_code and siv.item_code = '2'
        where 1=1 and siv.hosp_code = #{hospCode} and
        biz_id in
        <foreach collection="bizIds" item="item" separator="," open="(" close=")">
            #{item}
        </foreach>
        and outin_code in
        <foreach collection="outinCodeList" item="item" separator="," open="(" close=")">
            #{item}
        </foreach>
        <if test="startDate != null and startDate != ''">
            and date(siv.crte_time) &gt;=date(#{startDate})
        </if>
        /*出院日期*/
        <if test="endDate != null and endDate !='' ">
            and date(siv.crte_time) &lt;= date(#{endDate})
        </if>
        <if test="code != null and code != ''">
            and item_code = #{code}
        </if>
        <if test="keyword != null and keyword != ''">
            and (
            siv.item_name like concat('%', #{keyword}, '%')
            or b.usual_pym like concat('%', #{keyword}, '%')
            or b.usual_wbm like concat('%', #{keyword}, '%')
            or b.good_pym like concat('%', #{keyword}, '%')
            or b.good_wbm like concat('%', #{keyword}, '%')
            or c.pym like concat('%', #{keyword}, '%')
            or c.wbm like concat('%', #{keyword}, '%'))
        </if>
    </select>


    <select id="queryPharConsumeNoPD" resultMap="StroInvoicingMap">
        select
        siv.item_id as item_id,
        siv.batch_no as batch_no,
        siv.item_name as item_name,
        siv.item_code as item_code,
        siv.unit_code as unit_code,
        siv.sell_price as sell_price,
        siv.buy_price as buy_price,
        siv.num as num,
        siv.biz_id as biz_id,
        siv.crte_time as crte_time,
        siv.split_num as split_num,
        siv.split_unit_code as split_unit_code,
        case siv.item_code when '1' then b.spec when '2' then c.spec end spec,
        case siv.item_code when '1' then b.code when '2' then c.code end code,
        case siv.item_code when '1' then b.big_type_code when '2' then '3' end typeCode
        from stro_invoicing siv
        left join base_drug b on siv.item_id = b.id and siv.hosp_code = b.hosp_code and siv.item_code = '1'
        left join base_material c on siv.item_id = c.id and siv.hosp_code = c.hosp_code and siv.item_code = '2'
        where 1=1 and outin_code in ('8','23','25','27','28') and siv.hosp_code = #{hospCode} and
        biz_id in
        <foreach collection="bizIds" item="item" separator="," open="(" close=")">
            #{item}
        </foreach>
        <if test="startDate != null and startDate != ''">
            and date(siv.crte_time) &gt;=date(#{startDate})
        </if>
        /*出院日期*/
        <if test="endDate != null and endDate !='' ">
            and date(siv.crte_time) &lt;= date(#{endDate})
        </if>
        <if test="code != null and code != ''">
            and item_code = #{code}
        </if>
        <if test="keyword != null and keyword != ''">
            and (
            siv.item_name like concat('%', #{keyword}, '%')
            or b.usual_pym like concat('%', #{keyword}, '%')
            or b.usual_wbm like concat('%', #{keyword}, '%')
            or b.good_pym like concat('%', #{keyword}, '%')
            or b.good_wbm like concat('%', #{keyword}, '%')
            or c.pym like concat('%', #{keyword}, '%')
            or c.wbm like concat('%', #{keyword}, '%'))
        </if>
    </select>


    <select id="querySumPharConsume" resultType="java.util.Map">
        select A.* ${sqlStrTem1} from(
        select
        siv.item_id as itemId,
        siv.item_name as itemName,
        siv.item_code as itemCode,
        max(siv.unit_code) as unitCode,
        sum(siv.num) as num,
        sum(siv.split_num) as splitNum,
        max(siv.split_unit_code) as splitUnitCode,
        sum(siv.num * siv.sell_price) as sellPriceAll,
        case siv.item_code when '1' then b.price when '2' then c.price end sellPrice,
        case siv.item_code when '1' then b.last_buy_price when '2' then c.last_buy_price end buyPrice,
        case siv.item_code when '1' then b.spec when '2' then c.spec end spec,
        case siv.item_code when '1' then b.code when '2' then c.code end code,
        case siv.item_code when '1' then b.avg_buy_price when '2' then c.avg_buy_price end avgBuyPrice,
        case siv.item_code when '1' then b.avg_sell_price when '2' then c.avg_sell_price end avgSellPrice,
        ${sqlStrInpt}
        case siv.item_code when '1' then b.big_type_code when '2' then '3' end typeCode
        from stro_invoicing siv
        left join base_drug b on siv.item_id = b.id and siv.hosp_code = b.hosp_code and siv.item_code = '1'
        left join base_material c on siv.item_id = c.id and siv.hosp_code = c.hosp_code and siv.item_code = '2'
        where 1=1 and siv.hosp_code = #{hospCode} and
        biz_id in
        <foreach collection="bizIds" item="item" separator="," open="(" close=")">
            #{item}
        </foreach>
        and outin_code in
        <foreach collection="outinCodeList" item="item" separator="," open="(" close=")">
            #{item}
        </foreach>
        <if test="startDate != null and startDate != ''">
            and date(siv.crte_time) &gt;=date(#{startDate})
        </if>
        /*出院日期*/
        <if test="endDate != null and endDate !='' ">
            and date(siv.crte_time) &lt;= date(#{endDate})
        </if>
        <if test="code != null and code != ''">
            and item_code = #{code}
        </if>
        <if test="keyword != null and keyword != ''">
            and (
            siv.item_name like concat('%', #{keyword}, '%')
            or b.usual_pym like concat('%', #{keyword}, '%')
            or b.usual_wbm like concat('%', #{keyword}, '%')
            or b.good_pym like concat('%', #{keyword}, '%')
            or b.good_wbm like concat('%', #{keyword}, '%')
            or c.pym like concat('%', #{keyword}, '%')
            or c.wbm like concat('%', #{keyword}, '%'))
        </if>
        group by siv.item_id,siv.item_name,siv.item_code
        ) A
    </select>


    <!--库房报损统计(按品种)-->
    <select id="queryStroReportLossesByKind" resultType="java.util.Map">
        select
        max(a.item_name) as itemName,
        max(a.unit_code) as unitCode ,
        max(a.buy_price) as maxBuyPrice,
        min(a.buy_price) as minBuyPrice,
        avg(a.buy_price) as avgBuyPrice,
        sum(a.num) as allNum,
        sum(a.num * a.buy_price) as buyPriceAll,
        sum(a.num * a.sell_price) as sellPriceAll,
        (sum(a.num * a.sell_price) - sum(a.num * a.buy_price)) as priceSpread,
        case max(a.item_code) when '1' then max(b.spec) when '2' then max(c.spec) end spec,
        case max(a.item_code) when '1' then max(b.code) when '2' then max(c.code) end itemCode,
        case max(a.item_code) when '1' then max(b.big_type_code) when '2' then "3" end bigTypeCode,
        max(a.id) as supplierName
        from stro_invoicing a
        left join base_drug b on a.item_id = b.id and a.hosp_code = b.hosp_code and a.item_code = '1'
        left join base_material c on a.item_id = c.id and a.hosp_code = c.hosp_code and a.item_code = '2'
        where a.hosp_code = #{hospCode}  and a.outin_code = '8'
        and biz_id in
        <foreach collection="bizIds" item="item" separator="," open="(" close=")">
            #{item}
        </foreach>
        <if test="startDate != null and startDate != ''">
            and date(a.crte_time) &gt;=date(#{startDate})
        </if>
        /*出院日期*/
        <if test="endDate != null and endDate !='' ">
            and date(a.crte_time) &lt;= date(#{endDate})
        </if>
        group by a.item_id
    </select>

    <!--库房报损统计(按品种批号)-->
    <select id="queryStroReportLossesByKindBatNO" resultType="java.util.Map">
        select
        max(a.item_name) as itemName,
        max(a.unit_code) as unitCode,
        a.batch_no,
        min(a.expiry_date) as expiryDate,
        max(a.buy_price) as buyPrice,
        max(a.sell_price) sellPrice,
        sum(a.num) as allNum,
        sum(a.num * a.buy_price) as buyPriceAll,
        sum(a.num * a.sell_price) as sellPriceAll,
        (sum(a.num * a.sell_price) -sum(a.num * a.buy_price) ) as priceSpread,
        case max(a.item_code) when '1' then max(b.spec) when '2' then max(c.spec) end spec,
        case max(a.item_code) when '1' then max(b.code) when '2' then max(c.code) end itemCode,
        case max(a.item_code) when '1' then max(b.big_type_code) when '2' then "3" end bigTypeCode,
        case max(a.item_code) when '1' then (select p.name from base_product p where p.hosp_code = #{hospCode} and p.code = max(b.prod_code))
        when '2' then (select p.name from base_product p where p.hosp_code = #{hospCode} and p.code = max(c.prod_code))
        end prodName,
        max(a.id) as supplierName
        from stro_invoicing a
        left join base_drug b on a.item_id = b.id and a.hosp_code = b.hosp_code and a.item_code = '1'
        left join base_material c on a.item_id = c.id and a.hosp_code = c.hosp_code and a.item_code = '2'
        where a.hosp_code = #{hospCode}  and a.outin_code = '8'
        and biz_id in
        <foreach collection="bizIds" item="item" separator="," open="(" close=")">
            #{item}
        </foreach>
        <if test="startDate != null and startDate != ''">
            and date(a.crte_time) &gt;=date(#{startDate})
        </if>
        /*出院日期*/
        <if test="endDate != null and endDate !='' ">
            and date(a.crte_time) &lt;= date(#{endDate})
        </if>
        group by a.item_id,a.batch_no
    </select>
    <!--库房报损统计合计(按品种批号)-->
    <select id="queryStroReportLossesByKindBatNOSum" resultType="java.util.Map">
        select
        max(a.item_name) as itemName,
        max(a.unit_code) as unitCode,
        a.batch_no,
        min(a.expiry_date) as expiryDate,
        max(a.buy_price) as buyPrice,
        max(a.sell_price) sellPrice,
        sum(a.num) as allNum,
        sum(a.num * a.buy_price) as buyPriceAll,
        sum(a.num * a.sell_price) as sellPriceAll,
        (sum(a.num * a.sell_price) -sum(a.num * a.buy_price) ) as priceSpread,
        case max(a.item_code) when '1' then max(b.spec) when '2' then max(c.spec) end spec,
        case max(a.item_code) when '1' then max(b.code) when '2' then max(c.code) end itemCode,
        case max(a.item_code) when '1' then max(b.big_type_code) when '2' then "3" end bigTypeCode,
        case max(a.item_code) when '1' then (select p.name from base_product p where p.hosp_code = #{hospCode} and p.code = max(b.prod_code))
        when '2' then (select p.name from base_product p where p.hosp_code = #{hospCode} and p.code = max(c.prod_code))
        end prodName,
        max(a.id) as supplierName
        from stro_invoicing a
        left join base_drug b on a.item_id = b.id and a.hosp_code = b.hosp_code and a.item_code = '1'
        left join base_material c on a.item_id = c.id and a.hosp_code = c.hosp_code and a.item_code = '2'
        where a.hosp_code = #{hospCode}  and a.outin_code = '8'
        and biz_id in
        <foreach collection="bizIds" item="item" separator="," open="(" close=")">
            #{item}
        </foreach>
        <if test="startDate != null and startDate != ''">
            and date(a.crte_time) &gt;=date(#{startDate})
        </if>
        /*出院日期*/
        <if test="endDate != null and endDate !='' ">
            and date(a.crte_time) &lt;= date(#{endDate})
        </if>
        group by a.item_id,a.batch_no
    </select>

    <!--库房报损统计(按业务单据)-->
    <select id="queryStroReportLossesByOrder" resultType="java.util.Map">
        select
        a.order_no as orderNo,
        count(0) as detailNum,
        count(distinct a.item_id) as itemNum,
        count(distinct a.batch_no) as batchNoNum,
        sum(a.num * a.buy_price) as buyPriceAll,
        sum(a.num * a.sell_price) as sellPriceAll,
        sum(a.num * a.buy_price)/count(distinct a.item_id) as avgItemBuyPrice,
        (sum(a.num * a.sell_price)-sum(a.num * a.buy_price)) as priceSpread,
        max(a.id) as supplierName
        from stro_invoicing a
        where a.hosp_code = #{hospCode}  and a.outin_code = '8'
        and biz_id in
        <foreach collection="bizIds" item="item" separator="," open="(" close=")">
            #{item}
        </foreach>
        <if test="startDate != null and startDate != ''">
            and date(a.crte_time) &gt;=date(#{startDate})
        </if>

        <if test="endDate != null and endDate !='' ">
            and date(a.crte_time) &lt;= date(#{endDate})
        </if>
        group by a.order_no
    </select>

    <!--库房报损统计(按计费类别)-->
    <select id="queryStroReportLossesByBfc" resultType="java.util.Map">
        select
        count(0) as detailNum,
        count(distinct a.item_id) as itemNum,
        count(distinct a.batch_no) as batchNoNum,
        sum(a.num * a.buy_price) as buyPriceAll,
        sum(a.num * a.sell_price) as sellPriceAll,
        sum(a.num * a.buy_price)/count(distinct a.item_id) as avgItemBuyPrice,
        case max(a.item_code) when '1' then (select p.name from base_finance_classify p where p.hosp_code = #{hospCode} and p.code = max(b.bfc_code))
        when '2' then (select p.name from base_finance_classify p where p.hosp_code = #{hospCode} and p.code = max(c.bfc_code))
        end bfcName,
        (sum(a.num * a.sell_price) - sum(a.num * a.buy_price)) as priceSpread,
        max(a.id) as supplierName
        from stro_invoicing a
        left join base_drug b on a.item_id = b.id and a.hosp_code = b.hosp_code and a.item_code = '1'
        left join base_material c on a.item_id = c.id and a.hosp_code = c.hosp_code and a.item_code = '2'
        where a.hosp_code = #{hospCode}  and a.outin_code = '8'
        and biz_id in
        <foreach collection="bizIds" item="item" separator="," open="(" close=")">
            #{item}
        </foreach>
        <if test="startDate != null and startDate != ''">
            and date(a.crte_time) &gt;=date(#{startDate})
        </if>

        <if test="endDate != null and endDate !='' ">
            and date(a.crte_time) &lt;= date(#{endDate})
        </if>
        group by (case a.item_code when '1' then b.bfc_code when '2' then c.bfc_code end)

    </select>

    <!--库房调价统计-->
    <select id="queryStroReportAdjustPrice" resultType="java.util.Map">
        select
        a.order_no,
        a.crte_time,
        a.crte_name as checkName,
        (select b.crte_name from stro_adjust b where a.order_no = b.order_no and b.hosp_code = #{hospCode}) as crteName,
        case a.item_code when '1' then b.spec when '2' then c.spec end spec,
        case a.item_code when '1' then b.code when '2' then c.code end itemCode,
        case a.item_code when '1' then b.big_type_code when '2' then "3" end bigTypeCode,
        case a.item_code when '1' then (select p.name from base_product p where p.hosp_code = #{hospCode} and p.code = b.prod_code)
        when '2' then (select p.name from base_product p where p.hosp_code = #{hospCode} and p.code = c.prod_code)
        end prodName,
        a.item_name,
        a.unit_code,
        a.sell_price_all/a.surplus_num as sellPrice,
        a.up_sell_price_all/a.up_surplus_num as upSellPrice,
        (a.sell_price_all/a.surplus_num) - (a.up_sell_price_all/a.up_surplus_num) as priceSpread,
        ((a.sell_price_all/a.surplus_num) - (a.up_sell_price_all/a.up_surplus_num))/(a.up_sell_price_all/a.up_surplus_num) as poorRate,
        (select name from base_dept d where d.hosp_code = #{hospCode} and a.biz_id = d.id) as bizName,
        a.id as supplierName,
        a.sell_price_all - a.up_sell_price_all as priceSpreadAll,
        a.surplus_num
        from stro_invoicing a
        left join base_drug b on a.item_id = b.id and a.hosp_code = b.hosp_code and a.item_code = '1'
        left join base_material c on a.item_id = c.id and a.hosp_code = c.hosp_code and a.item_code = '2'
        where a.hosp_code = #{hospCode} and a.outin_code = "24"
        and biz_id in
        <foreach collection="bizIds" item="item" separator="," open="(" close=")">
            #{item}
        </foreach>
        <if test="startDate != null and startDate != ''">
            and date(a.crte_time) &gt;=date(#{startDate})
        </if>

        <if test="endDate != null and endDate !='' ">
            and date(a.crte_time) &lt;= date(#{endDate})
        </if>
    </select>

    <select id="queryStroTakeStock" resultType="java.util.Map">
        select
        a.order_no,
        a.crte_time,
        a.crte_name as checkName,
        a.item_name as itemName,
        a.unit_code as unitCode,
        (a.sell_price_all - a.up_sell_price_all) as priceSpreadAll,
        (select b.crte_name from stro_inventory b where a.order_no = b.order_no and b.hosp_code = #{hospCode}) as crteName,
        case a.item_code when '1' then b.spec when '2' then c.spec end spec,
        case a.item_code when '1' then b.code when '2' then c.code end itemCode,
        case a.item_code when '1' then b.big_type_code when '2' then "3" end bigTypeCode,
        case a.item_code when '1' then (select p.name from base_product p where p.hosp_code = #{hospCode} and p.code = b.prod_code)
        when '2' then (select p.name from base_product p where p.hosp_code = #{hospCode} and p.code = c.prod_code)
        end prodName,
        (select name from base_dept d where d.hosp_code = #{hospCode} and a.biz_id = d.id) as supplierName,
        a.sell_price,
        a.buy_price,
        a.up_surplus_num,
        a.surplus_num,
        (a.surplus_num - a.up_surplus_num) as numSpread,
        a.expiry_date,
        a.batch_no
        from stro_invoicing a
        left join base_drug b on a.item_id = b.id and a.hosp_code = b.hosp_code and a.item_code = '1'
        left join base_material c on a.item_id = c.id and a.hosp_code = c.hosp_code and a.item_code = '2'
        where a.hosp_code = #{hospCode} and a.outin_code = "7"
        and biz_id in
        <foreach collection="bizIds" item="item" separator="," open="(" close=")">
            #{item}
        </foreach>
        <if test="startDate != null and startDate != ''">
            and date(a.crte_time) &gt;=date(#{startDate})
        </if>
        <if test="endDate != null and endDate !='' ">
            and date(a.crte_time) &lt;= date(#{endDate})
        </if>

    </select>

    <!--当前时间段住院收入分类统计查询-->
    <select id="queryCurrentInptIncomeClassify" resultType="java.util.Map">
        SELECT
        t.bfc_id,
        (select y.`name` from base_finance_classify y where y.hosp_code = t.hosp_code and y.id = t.bfc_id) bfc_name,
        sum(reality_price) reality_price
        FROM
        inpt_cost t
        WHERE
        date(t.cost_time) &gt;= date(#{startDate})
        and date(t.cost_time) &lt;= date(#{endDate})
        and t.hosp_code = #{hospCode}
        group by t.hosp_code,t.bfc_id
    </select>

    <!--上一年当前时间段住院收入分类统计查询-->
    <select id="queryYearInptIncomeClassify" resultType="java.util.Map">
        SELECT
            t.bfc_id,
            (select y.`name` from base_finance_classify y where y.hosp_code = t.hosp_code and y.id = t.bfc_id) bfc_name,
            sum(reality_price) reality_price
        FROM
        inpt_cost t
        WHERE
        date(t.cost_time) &gt;= DATE_FORMAT(DATE_SUB(#{startDate},INTERVAL 1 year), '%Y-%m-%d')
        and date(t.cost_time) &lt;= DATE_FORMAT(DATE_ADD(DATE_SUB(#{endDate},INTERVAL 1 year),INTERVAL 1 DAY),'%Y-%m-%d')
        and t.hosp_code = #{hospCode}
        group by t.hosp_code,t.bfc_id
    </select>

    <!--上一月当前时间段住院收入分类统计查询-->
    <select id="queryMonthInptIncomeClassify" resultType="java.util.Map">
        SELECT
            t.bfc_id,
            (select y.`name` from base_finance_classify y where y.hosp_code = t.hosp_code and y.id = t.bfc_id) bfc_name,
            sum(reality_price) reality_price
        FROM
        inpt_cost t
        WHERE
        date(t.cost_time) &gt;= DATE_FORMAT(DATE_SUB(#{startDate},INTERVAL 1 month), '%Y-%m-%d')
        and date(t.cost_time) &lt;= DATE_FORMAT(DATE_ADD(DATE_SUB(#{endDate},INTERVAL 1 month),INTERVAL 1 DAY),'%Y-%m-%d')
        and t.hosp_code = #{hospCode}
        group by t.hosp_code,t.bfc_id
    </select>

    <!--当前时间段门诊收入分类统计查询-->
    <select id="queryCurrentOutptIncomeClassify" resultType="java.util.Map">
        SELECT
            t.bfc_id,
            (select y.`name` from base_finance_classify y where y.hosp_code = t.hosp_code and y.id = t.bfc_id) bfc_name,
            sum(reality_price) reality_price
        FROM
        outpt_cost t
        WHERE
       date(t.cost_time) &gt;= DATE_FORMAT( #{startDate}, '%Y-%m-%d' )
        and date(t.cost_time) &lt;= DATE_FORMAT(DATE_ADD(#{endDate},INTERVAL 1 DAY),'%Y-%m-%d')
        and t.hosp_code = #{hospCode}
        group by t.hosp_code,t.bfc_id
    </select>

    <!--上一年当前时间段住院收入分类统计查询-->
    <select id="queryYearInptOutcomeClassify" resultType="java.util.Map">
        SELECT
            t.bfc_id,
            (select y.`name` from base_finance_classify y where y.hosp_code = t.hosp_code and y.id = t.bfc_id) bfc_name,
            sum(reality_price) reality_price
        FROM
        outpt_cost t
        WHERE
        date(t.cost_time) &gt;= DATE_FORMAT(DATE_SUB(#{startDate},INTERVAL 1 year), '%Y-%m-%d')
        and date(t.cost_time) &lt;= DATE_FORMAT(DATE_ADD(DATE_SUB(#{endDate},INTERVAL 1 year),INTERVAL 1 DAY),'%Y-%m-%d')
        and t.hosp_code = #{hospCode}
        group by t.hosp_code,t.bfc_id
    </select>

    <!--上一月当前时间段住院收入分类统计查询-->
    <select id="queryMonthInptOutcomeClassify" resultType="java.util.Map">
        SELECT
            t.bfc_id,
            (select y.`name` from base_finance_classify y where y.hosp_code = t.hosp_code and y.id = t.bfc_id) bfc_name,
            sum(reality_price) reality_price
        FROM
        outpt_cost t
        WHERE
        date(t.cost_time) &gt;= DATE_FORMAT(DATE_SUB(#{startDate},INTERVAL 1 month), '%Y-%m-%d')
        and date(t.cost_time) &lt;= DATE_FORMAT(DATE_ADD(DATE_SUB(#{endDate},INTERVAL 1 month),INTERVAL 1 DAY),'%Y-%m-%d')
        and t.hosp_code = #{hospCode}
        group by t.hosp_code,t.bfc_id
    </select>

    <!-- 门诊科室/医生收入统计 -->
    <select id="queryOutptCostAndRegisterCost" resultType="cn.hsa.module.inpt.patientcomprehensivequery.dto.OutptCostAndReigsterCostDTO">
        select * from (
        <!-- 门诊医生室收入 -->
        <if test="statement == '1'.toString() or statement == '3'.toString()">
            select
            ifnull(B.reality_price,0) as realityPrice,
            ifnull(B.bfc_id,'0') as bfcId,
            ifnull((select name from base_finance_classify bfc where bfc.id = B.bfc_id and bfc.hosp_code = #{hospCode}
            ),'其他')
            as bfcName,
            ifnull(B.doctor_id,'0') as doctorId,
            ifnull(B.doctor_name,t.doctor_name) as doctorName,
            <if test="'4'.toString() == flag">
                ifnull((select id from base_dept bd where bd.hosp_code = #{hospCode} and bd.code =
                (select dept_code from sys_user su where su.hosp_code = #{hospCode} and su.id = B.doctor_id )),'0')
                as deptId,
                ifnull((select name from base_dept bd where bd.hosp_code = #{hospCode} and bd.code =
                (select dept_code from sys_user su where su.hosp_code = #{hospCode} and su.id = B.doctor_id )),'其他')
                as deptName,
            </if>
            <if test="'4'.toString() != flag">
                ifnull(B.dept_id,'0') as deptId,
                ifnull((select name from base_dept bfc where bfc.id = B.dept_id and bfc.hosp_code = #{hospCode} ),'其他')
                as deptName,
            </if>
            ifnull(B.visit_id,'0') as visitId,
            t.name as visitName
            from
            outpt_settle A
            left join outpt_cost B on A.id = B.settle_id and A.hosp_code = B.hosp_code
            left join outpt_visit t on t.hosp_code = b.hosp_code and t.id = B.visit_id
            where
            A.hosp_code = #{hospCode}
            and A.is_settle = '1' and b.settle_code = '2'
            <if test="startDate != null and startDate !='' ">
                and date(A.settle_time) &gt;=date(#{startDate})
            </if>
            /*结束日期*/
            <if test="endDate != null and endDate != '' ">
                and date(A.settle_time) &lt;= date(#{endDate})
            </if>
            union all
            <!-- 挂号结算费用 -->
            select
            ifnull(B.reality_price,0) as realityPrice,
            ifnull(B.bfc_id,'0') as bfcId,
            ifnull((select name from base_finance_classify bfc where bfc.id = B.bfc_id and bfc.hosp_code = #{hospCode}
            ),'其他')
            as bfcName,
            ifnull(C.doctor_id,'0') as doctorId,
            ifnull(C.doctor_name,t.doctor_name) as doctorName,
            <if test="'4'.toString() == flag">
                ifnull((select id from base_dept bd where bd.hosp_code = #{hospCode} and bd.code =
                (select dept_code from sys_user su where su.hosp_code = #{hospCode} and su.id = c.doctor_id )),'0')
                as deptId,
                ifnull((select name from base_dept bd where bd.hosp_code = #{hospCode} and bd.code =
                (select dept_code from sys_user su where su.hosp_code = #{hospCode} and su.id = c.doctor_id )),'其他')
                as deptName,
            </if>
            <if test="'4'.toString() != flag">
                ifnull(c.dept_id,'0') as deptId,
                ifnull((select name from base_dept bfc where bfc.id = c.dept_id and bfc.hosp_code = #{hospCode} ),'其他')
                as deptName,
            </if>
            ifnull(B.visit_id,'0') as visitId,
            t.name as visitName
            from
            outpt_register_settle A
            left join outpt_register_detail B on A.register_id = B.register_id and A.hosp_code = B.hosp_code and A.status_code = B.status_code
            left join outpt_register C on A.register_id = C.id and A.hosp_code = C.hosp_code
            left join outpt_visit t on t.hosp_code = b.hosp_code and t.id = B.visit_id
            where
            A.hosp_code = #{hospCode}
            and A.status_code = '0'
            and B.status_code = '0'
            <if test="startDate != null and startDate !='' ">
                and date(A.settle_time) &gt;=date(#{startDate})
            </if>
            /*结束日期*/
            <if test="endDate != null and endDate != '' ">
                and date(A.settle_time) &lt;= date(#{endDate})
            </if>
        </if>
        <!-- 全部科室/医生收入 -->
        <if test="statement == '3'.toString()">
            union all
        </if>
        <!-- 住院科室/医生收入 -->
        <if test="statement == '2'.toString() or statement == '3'.toString() or statement == '4'.toString()">
            select
            ifnull(ics.reality_price,0) as realityPrice,
            ifnull(B.bfc_id,'0') as bfcId,
            ifnull((select name from base_finance_classify bfc where bfc.id = B.bfc_id and bfc.hosp_code = #{hospCode}
            ),'其他')
            as bfcName,
            <!-- 按管床医生 -->
            <if test="'7'.toString() == flag">
                ifnull(B.zg_doctor_id,'0') as doctorId,
                ifnull(B.zg_doctor_name,t.zz_doctor_name) as doctorName,
            </if>
            <!-- 按开方医生 -->
            <if test="'7'.toString() != flag">
                ifnull(B.doctor_id,'0') as doctorId,
                ifnull(B.doctor_name,t.zz_doctor_name) as doctorName,
            </if>
            <!-- 按所属科室 -->
            <if test="'4'.toString() == flag">
                ifnull((select id from base_dept bd where bd.hosp_code = #{hospCode} and bd.code =
                (select dept_code from sys_user su where su.hosp_code = #{hospCode} and su.id = B.doctor_id )),'0')
                as deptId,
                ifnull((select name from base_dept bd where bd.hosp_code = #{hospCode} and bd.code =
                (select dept_code from sys_user su where su.hosp_code = #{hospCode} and su.id = B.doctor_id )),'其他')
                as deptName,
            </if>
            <!-- 按就诊科室 -->
            <if test="'5'.toString() == flag">
                ifnull(B.in_dept_id,'0') as deptId,
                ifnull((select name from base_dept bfc where bfc.id = B.in_dept_id and bfc.hosp_code = #{hospCode}
                ),'其他')
                as deptName,
            </if>
            <!-- 按执行科室 -->
            <if test="'6'.toString() == flag">
                ifnull(B.exec_dept_id,'0') as deptId,
                ifnull((select name from base_dept bfc where bfc.id = B.exec_dept_id and bfc.hosp_code = #{hospCode}
                ),'其他')
                as deptName,
            </if>
            <!-- 按开方科室 -->
            <if test="'1'.toString() == flag or '2'.toString() == flag or '3'.toString() == flag or '8'.toString() == flag">
                ifnull(B.dept_id,'0') as deptId,
                ifnull((select name from base_dept bfc where bfc.id = B.dept_id and bfc.hosp_code = #{hospCode} ),'其他')
                as deptName,
            </if>
            <!-- 按开方科室/开方医生/管床医生/患者-->
            <if test="'9'.toString() == flag">
                ifnull(B.dept_id,'0') as deptId,
                ifnull((select name from base_dept bfc where bfc.id = B.dept_id and bfc.hosp_code = #{hospCode} ),'其他')
                as deptName,
            </if>
            ifnull(B.visit_id,'0') as visitId,
            t.name as visitName
            from
            inpt_settle A
            inner join inpt_cost B on A.id = B.settle_id and A.hosp_code = B.hosp_code
            inner join inpt_cost_settle ics on B.id=ics.cost_id
            inner join inpt_visit t on t.hosp_code = b.hosp_code and t.id = B.visit_id
            where
            A.hosp_code = #{hospCode}
            and A.is_settle = '1'
            and B.settle_code = '2'
            and A.status_code = '0'
            <!-- 按计费时间 -->
            <if test="statement == '4'.toString()">
                <if test="startDate != null and startDate !='' ">
                    and date(B.cost_time) &gt;=date(#{startDate})
                </if>
                /*结束日期*/
                <if test="endDate != null and endDate != '' ">
                    and date(B.cost_time) &lt;= date(#{endDate})
                </if>
            </if>
            <!-- 按结算时间 -->
            <if test="statement == '2'.toString() or statement == '3'.toString()">
                <if test="startDate != null and startDate !='' ">
                    and date(A.settle_time) &gt;=date(#{startDate})
                </if>
                /*结束日期*/
                <if test="endDate != null and endDate != '' ">
                    and date(A.settle_time) &lt;=date(#{endDate})
                </if>
            </if>
        </if>
        ) tab
        <where>
            <if test="doctorName != null and doctorName !='' ">
                tab.deptName like concat('%',#{doctorName},'%') or tab.doctorName like concat('%',#{doctorName},'%')
            </if>
        </where>
    </select>

    <!-- 门诊科室/医生收入统计合计 -->
    <select id="queryOutptCostAndRegisterCostSum" resultType="cn.hsa.module.inpt.patientcomprehensivequery.dto.OutptCostAndReigsterCostDTO">
        select * from (
        <!-- 门诊医生室收入 -->
        <if test="statement == '1'.toString() or statement == '3'.toString()">
            select
            ifnull(B.reality_price,0) as realityPrice,
            ifnull(B.bfc_id,'0') as bfcId,
            ifnull((select name from base_finance_classify bfc where bfc.id = B.bfc_id and bfc.hosp_code = #{hospCode}
            ),'其他')
            as bfcName,
            ifnull(B.doctor_id,'0') as doctorId,
            ifnull(B.doctor_name,t.doctor_name) as doctorName,
            <if test="'4'.toString() == flag">
                ifnull((select id from base_dept bd where bd.hosp_code = #{hospCode} and bd.code =
                (select dept_code from sys_user su where su.hosp_code = #{hospCode} and su.id = B.doctor_id )),'0')
                as deptId,
                ifnull((select name from base_dept bd where bd.hosp_code = #{hospCode} and bd.code =
                (select dept_code from sys_user su where su.hosp_code = #{hospCode} and su.id = B.doctor_id )),'其他')
                as deptName,
            </if>
            <if test="'4'.toString() != flag">
                ifnull(B.dept_id,'0') as deptId,
                ifnull((select name from base_dept bfc where bfc.id = B.dept_id and bfc.hosp_code = #{hospCode} ),'其他')
                as deptName,
            </if>
            ifnull(B.visit_id,'0') as visitId,
            t.name as visitName
            from
            outpt_settle A
            inner join outpt_cost B on A.id = B.settle_id and A.hosp_code = B.hosp_code
            inner join outpt_visit t on t.hosp_code = b.hosp_code and t.id = B.visit_id
            where
            A.hosp_code = #{hospCode}
            and A.is_settle = '1' and b.settle_code = '2'
            <if test="startDate != null and startDate !='' ">
                and date(A.settle_time) &gt;=date(#{startDate})
            </if>
            /*结束日期*/
            <if test="endDate != null and endDate != '' ">
                and date(A.settle_time) &lt;= date(#{endDate})
            </if>

            union all
            <!-- 挂号结算费用 -->
            select
            ifnull(B.reality_price,0) as realityPrice,
            ifnull(B.bfc_id,'0') as bfcId,
            ifnull((select name from base_finance_classify bfc where bfc.id = B.bfc_id and bfc.hosp_code = #{hospCode}
            ),'其他')
            as bfcName,
            ifnull(C.doctor_id,'0') as doctorId,
            ifnull(C.doctor_name,t.doctor_name) as doctorName,
            <if test="'4'.toString() == flag">
                ifnull((select id from base_dept bd where bd.hosp_code = #{hospCode} and bd.code =
                (select dept_code from sys_user su where su.hosp_code = #{hospCode} and su.id = c.doctor_id )),'0')
                as deptId,
                ifnull((select name from base_dept bd where bd.hosp_code = #{hospCode} and bd.code =
                (select dept_code from sys_user su where su.hosp_code = #{hospCode} and su.id = c.doctor_id )),'其他')
                as deptName,
            </if>
            <if test="'4'.toString() != flag">
                ifnull(c.dept_id,'0') as deptId,
                ifnull((select name from base_dept bfc where bfc.id = c.dept_id and bfc.hosp_code = #{hospCode} ),'其他')
                as deptName,
            </if>
            ifnull(B.visit_id,'0') as visitId,
            t.name as visitName
            from
            outpt_register_settle A
            inner join outpt_register_detail B on A.register_id = B.register_id and A.hosp_code = B.hosp_code and A.status_code = B.status_code
            inner join outpt_register C on A.register_id = C.id and A.hosp_code = C.hosp_code
            inner join outpt_visit t on t.hosp_code = b.hosp_code and t.id = B.visit_id
            where
            A.hosp_code = #{hospCode}
            and A.status_code = '0'
            and B.status_code = '0'
            <if test="startDate != null and startDate !='' ">
                and date(A.settle_time) &gt;=date(#{startDate})
            </if>
            /*结束日期*/
            <if test="endDate != null and endDate != '' ">
                and date(A.settle_time) &lt;= date(#{endDate})
            </if>
        </if>
        <!-- 全部科室/医生收入 -->
        <if test="statement == '3'.toString()">
            union all
        </if>
        <!-- 住院科室/医生收入 -->
        <if test="statement == '2'.toString() or statement == '3'.toString() or statement == '4'.toString()">
            select
            ifnull(ics.reality_price,0) as realityPrice,
            ifnull(B.bfc_id,'0') as bfcId,
            ifnull((select name from base_finance_classify bfc where bfc.id = B.bfc_id and bfc.hosp_code = #{hospCode}
            ),'其他')
            as bfcName,
            <!-- 按管床医生 -->
            <if test="'7'.toString() == flag">
                ifnull(B.zg_doctor_id,'0') as doctorId,
                ifnull(B.zg_doctor_name,t.zz_doctor_name) as doctorName,
            </if>
            <!-- 按开方医生 -->
            <if test="'7'.toString() != flag">
                ifnull(B.doctor_id,'0') as doctorId,
                ifnull(B.doctor_name,t.zz_doctor_name) as doctorName,
            </if>
            <!-- 按所属科室 -->
            <if test="'4'.toString() == flag">
                ifnull((select id from base_dept bd where bd.hosp_code = #{hospCode} and bd.code =
                (select dept_code from sys_user su where su.hosp_code = #{hospCode} and su.id = B.doctor_id )),'0')
                as deptId,
                ifnull((select name from base_dept bd where bd.hosp_code = #{hospCode} and bd.code =
                (select dept_code from sys_user su where su.hosp_code = #{hospCode} and su.id = B.doctor_id )),'其他')
                as deptName,
            </if>
            <!-- 按就诊科室 -->
            <if test="'5'.toString() == flag">
                ifnull(B.in_dept_id,'0') as deptId,
                ifnull((select name from base_dept bfc where bfc.id = B.in_dept_id and bfc.hosp_code = #{hospCode}
                ),'其他')
                as deptName,
            </if>
            <!-- 按执行科室 -->
            <if test="'6'.toString() == flag">
                ifnull(B.exec_dept_id,'0') as deptId,
                ifnull((select name from base_dept bfc where bfc.id = B.exec_dept_id and bfc.hosp_code = #{hospCode}
                ),'其他')
                as deptName,
            </if>
            <!-- 按开方科室 -->
            <if test="'1'.toString() == flag or '2'.toString() == flag or '3'.toString() == flag or '8'.toString() == flag">
                ifnull(B.dept_id,'0') as deptId,
                ifnull((select name from base_dept bfc where bfc.id = B.dept_id and bfc.hosp_code = #{hospCode} ),'其他')
                as deptName,
            </if>
            ifnull(B.visit_id,'0') as visitId,
            t.name as visitName
            from
            inpt_settle A
            inner join inpt_cost B on A.id = B.settle_id and A.hosp_code = B.hosp_code
            inner join inpt_cost_settle ics on B.id=ics.cost_id
            inner join inpt_visit t on t.hosp_code = b.hosp_code and t.id = B.visit_id
            where
            A.hosp_code = #{hospCode}
            and A.is_settle = '1'
            and B.settle_code = '2'
            and A.status_code = '0'
            <!-- 按计费时间 -->
            <if test="statement == '4'.toString()">
                <if test="startDate != null and startDate !='' ">
                    and date(B.cost_time) &gt;=date(#{startDate})
                </if>
                /*结束日期*/
                <if test="endDate != null and endDate != '' ">
                    and date(B.cost_time) &lt;= date(#{endDate})
                </if>
            </if>
            <!-- 按结算时间 -->
            <if test="statement == '2'.toString() or statement == '3'.toString()">
                <if test="startDate != null and startDate !='' ">
                    and date(A.settle_time) &gt;=date(#{startDate})
                </if>
                /*结束日期*/
                <if test="endDate != null and endDate != '' ">
                    and date(A.settle_time) &lt;=date(#{endDate})
                </if>
            </if>
        </if>
        ) tab
        <where>
            <if test="doctorName != null and doctorName !='' ">
                tab.deptName like concat('%',#{doctorName},'%') or tab.doctorName like concat('%',#{doctorName},'%')
            </if>
        </where>
    </select>

    <!--发票使用情况-->
    <select id="queryInvoiceStatistics" resultType="java.util.LinkedHashMap">
        select
        (select name from sys_code_detail where hosp_code = c.hosp_code and c_code = 'PJLX' and value = c.type_code) as typeCode,
        d.visit_no as visitNo,
        d.name as name,
        a.invoice_no as invoiceNo ,
        a.total_price as totalPrice,
        b.crte_time as crteTime,
        b.crte_name as crteName,
        (select name from sys_code_detail where hosp_code = a.hosp_code and c_code = 'ZTBZ' and value = a.status_code) as statusCode
        from outpt_settle_invoice a
        left join outpt_settle b
        on a.settle_id = b.id
        left join outin_invoice c
        on a.invoice_id = c.id
        left join outpt_visit d
        on a.visit_id = d.id
        where a.hosp_code = #{hospCode}
        <if test="startTime != null and startTime != '' ">
            and DATE_FORMAT(b.crte_time,'%Y-%m-%d') &gt;= DATE_FORMAT(#{startTime},'%Y-%m-%d')
        </if>
        <if test="endTime != null and endTime != '' ">
            and DATE_FORMAT(b.crte_time,'%Y-%m-%d') &lt;= DATE_FORMAT(#{endTime},'%Y-%m-%d')
        </if>
        UNION ALL
        select
        (select name from sys_code_detail where hosp_code = c.hosp_code and c_code = 'PJLX' and value = c.type_code) as typeCode,
        d.in_no as visitNo,
        d.name as name,
        a.invoice_no as invoiceNo ,
        a.total_price as totalPrice,
        b.crte_time as crteTime,
        b.crte_name as crteName,
        (select name from sys_code_detail where hosp_code = a.hosp_code and c_code = 'ZTBZ' and value = a.status_code) as statusCode
        from inpt_settle_invoice a
        left join inpt_settle b
        on a.settle_id = b.id
        left join outin_invoice c
        on a.invoice_id = c.id
        left join inpt_visit d
        on a.visit_id = d.id
        where a.hosp_code = #{hospCode}
        <if test="startTime != null and startTime != '' ">
            and DATE_FORMAT(b.crte_time,'%Y-%m-%d') &gt;= DATE_FORMAT(#{startTime},'%Y-%m-%d')
        </if>
        <if test="endTime != null and endTime != '' ">
            and DATE_FORMAT(b.crte_time,'%Y-%m-%d') &lt;= DATE_FORMAT(#{endTime},'%Y-%m-%d')
        </if>
        UNION ALL
        select
        (select name from sys_code_detail where hosp_code = c.hosp_code and c_code = 'PJLX' and value = c.type_code) as typeCode,
        (select visit_no from outpt_visit where id = b.visit_id) as visitNo,
        (select name from outpt_visit where id = b.visit_id) as name,
        a.bill_no as invoiceNo ,
        a.total_price as totalPrice,
        a.crte_time as crteTime,
        a.crte_name as crteName,
        (select name from sys_code_detail where hosp_code = a.hosp_code and c_code = 'ZTBZ' and value = a.status_code) as statusCode
        from outpt_register_settle a
        left join outpt_register b
        on a.register_id = b.id
        left join outin_invoice c
        on a.bill_id = c.id
        where a.hosp_code = #{hospCode}
        <if test="startTime != null and startTime != '' ">
            and DATE_FORMAT(a.settle_time,'%Y-%m-%d') &gt;= DATE_FORMAT(#{startTime},'%Y-%m-%d')
        </if>
        <if test="endTime != null and endTime != '' ">
            and DATE_FORMAT(a.settle_time,'%Y-%m-%d') &lt;= DATE_FORMAT(#{endTime},'%Y-%m-%d')
        </if>
    </select>

    <!--门诊/住院明细收费-->
    <select id="queryAllChargeDetail" resultType="java.util.LinkedHashMap">
        select * from (
        SELECT
        b.register_no,
        settle.settle_no,
        b.name ,
        b.gender_code ,
        a.bfc_id ,
        a.item_code ,
        a.item_name,
        a.spec,
        a.num_unit_code AS unit_name,
        a.price,
        if(a.reality_price &lt; 0, -1*a.total_num, a.total_num) as total_num,
        a.total_price,
        a.preferential_price,
        a.reality_price,
        IF
        ( a.is_dist = '0', '否', '是' ) AS is_dist,
        settle.crte_name AS get_cost_name,
        DATE_FORMAT( settle.crte_time, '%Y-%m-%d %H:%i:%S' ) AS get_cost_time,
        a.doctor_name,
        a.dept_id,
        a.exec_dept_id,
        (
        SELECT NAME
        FROM
        base_disease
        WHERE
        id = ( SELECT SUBSTRING_INDEX( diagnose_ids, ',', 1 ) FROM outpt_prescribe WHERE id = a.op_id )
        ) AS disease_name
        FROM
        outpt_settle settle
        JOIN outpt_cost a ON settle.id = a.settle_id AND a.hosp_code = settle.hosp_code
        JOIN outpt_visit b ON a.visit_id = b.id AND a.hosp_code = b.hosp_code
        WHERE
        settle.is_settle = '1'
        AND a.hosp_code = #{hospCode}
        <if test="startTime != null and timeType != null and timeType == '1'.toString()">
            and DATE_FORMAT(settle.settle_time,'%Y-%m-%d') &gt;= DATE_FORMAT(#{startTime},'%Y-%m-%d')
        </if>
        <if test="endTime != null and timeType != null and timeType == '1'.toString()">
            and DATE_FORMAT(settle.settle_time,'%Y-%m-%d') &lt;= DATE_FORMAT(#{endTime},'%Y-%m-%d')
        </if>
        <if test="startTime != null and timeType != null and timeType == '2'.toString()">
            and DATE_FORMAT(a.crte_time,'%Y-%m-%d') &gt;= DATE_FORMAT(#{startTime},'%Y-%m-%d')
        </if>
        <if test="endTime != null and timeType != null and timeType == '2'.toString()">
            and DATE_FORMAT(a.crte_time,'%Y-%m-%d') &lt;= DATE_FORMAT(#{endTime},'%Y-%m-%d')
        </if>
        <if test="name != null and name != '' ">
            and b.name like concat('%',#{name},'%')
        </if>
        <if test="statusCode != null">
            and a.status_code = #{statusCode}
        </if>
        union all

        SELECT
        b.register_no,
        settle.id AS settle_no,
        b.name,
        b.gender_code ,
        a.bfc_id ,
        a.item_code ,
        a.item_name,
        a.spec,
        a.unit_code AS unit_name,
        a.price,
        a.num as total_num,
        a.total_price,
        a.preferential_price,
        a.reality_price,
        '是' as is_dist,
        settle.crte_name AS get_cost_name,
        DATE_FORMAT( settle.crte_time, '%Y-%m-%d %H:%i:%S' ) AS get_cost_time,
        b.doctor_name AS doctor_name,
        b.dept_id AS dept_id,
        b.dept_id AS exec_dept_id,
        NULL as disease_name
        FROM
        outpt_register_settle settle
        join outpt_register_detail a on settle.register_id = a.register_id and a.hosp_code = settle.hosp_code
        left join outpt_visit b on a.visit_id = b.id and a.hosp_code = b.hosp_code
        where a.hosp_code = #{hospCode}
        <if test="startTime != null and timeType != null and timeType == '1'.toString()">
            and DATE_FORMAT(settle.settle_time,'%Y-%m-%d') &gt;= DATE_FORMAT(#{startTime},'%Y-%m-%d')
        </if>
        <if test="endTime != null and timeType != null and timeType == '1'.toString()">
            and DATE_FORMAT(settle.settle_time,'%Y-%m-%d') &lt;= DATE_FORMAT(#{endTime},'%Y-%m-%d')
        </if>
        <if test="startTime != null and timeType != null and timeType == '2'.toString()">
            and DATE_FORMAT(a.crte_time,'%Y-%m-%d') &gt;= DATE_FORMAT(#{startTime},'%Y-%m-%d')
        </if>
        <if test="endTime != null and timeType != null and timeType == '2'.toString()">
            and DATE_FORMAT(a.crte_time,'%Y-%m-%d') &lt;= DATE_FORMAT(#{endTime},'%Y-%m-%d')
        </if>
        <if test="name != null and name != '' ">
            and b.name like concat('%',#{name},'%')
        </if>
        <if test="statusCode != null">
            and a.status_code = #{statusCode}
        </if>
        ) aa order by name,bfc_id,get_cost_time desc

    </select>


    <!--门诊/住院明细收费项目+费别-->
    <select id="queryXmfbChargeDetail" resultType="java.util.LinkedHashMap">
        select
        a.bfc_id,
        a.item_name,
        a.spec,
        a.num_unit_code  as unit_name,
        max(a.price) as price,
        sum(a.total_num) as num,
        sum(a.total_price) as total_price,
        max(a.preferential_price) as preferential_price,
        sum(a.reality_price) as reality_price
        from outpt_settle settle
        join outpt_cost a on settle.id = a.settle_id and a.hosp_code = settle.hosp_code
        join outpt_visit visit on visit.id = settle.visit_id
        where settle.is_settle = '1' and a.hosp_code = #{hospCode}
        <if test="startTime != null and startTime != '' and timeType != null and timeType == '1'.toString()">
            and DATE_FORMAT(settle.settle_time,'%Y-%m-%d') &gt;= DATE_FORMAT(#{startTime},'%Y-%m-%d')
        </if>
        <if test="endTime != null and endTime != '' and timeType != null and timeType == '1'.toString()">
            and DATE_FORMAT(settle.settle_time,'%Y-%m-%d') &lt;= DATE_FORMAT(#{endTime},'%Y-%m-%d')
        </if>
        <if test="startTime != null and startTime != '' and timeType != null and timeType == '2'.toString()">
            and DATE_FORMAT(a.crte_time,'%Y-%m-%d') &gt;= DATE_FORMAT(#{startTime},'%Y-%m-%d')
        </if>
        <if test="endTime != null and endTime != '' and timeType != null and timeType == '2'.toString()">
            and DATE_FORMAT(a.crte_time,'%Y-%m-%d') &lt;= DATE_FORMAT(#{endTime},'%Y-%m-%d')
        </if>
        <if test="name != null and name != '' ">
            and visit.name like concat('%',#{name},'%')
        </if>
        <if test="statusCode != null and statusCode != '' ">
            and a.status_code = #{statusCode}
        </if>

        group by a.bfc_id,a.item_name,a.spec,a.num_unit_code
        union all
        select
        a.bfc_id,
        a.item_name,
        ifnull(a.spec,'') as spec,
        a.unit_code as unit_name,
        max(a.price) as price,
        sum(a.num) as num,
        sum(a.total_price) as total_price,
        max(a.preferential_price) as preferential_price,
        sum(a.reality_price) as reality_price
        from outpt_register_settle settle
        join outpt_register_detail a on settle.register_id = a.register_id and a.hosp_code = settle.hosp_code and settle.status_code = a.status_code
        join outpt_visit visit on visit.id = a.visit_id
        where a.hosp_code = #{hospCode}
        <if test="startTime != null and startTime != '' and timeType != null and timeType == '1'.toString()">
            and DATE_FORMAT(settle.settle_time,'%Y-%m-%d') &gt;= DATE_FORMAT(#{startTime},'%Y-%m-%d')
        </if>
        <if test="endTime != null and endTime != '' and timeType != null and timeType == '1'.toString()">
            and DATE_FORMAT(settle.settle_time,'%Y-%m-%d') &lt;= DATE_FORMAT(#{endTime},'%Y-%m-%d')
        </if>
        <if test="startTime != null and startTime != '' and timeType != null and timeType == '2'.toString()">
            and DATE_FORMAT(a.crte_time,'%Y-%m-%d') &gt;= DATE_FORMAT(#{startTime},'%Y-%m-%d')
        </if>
        <if test="endTime != null and endTime != '' and timeType != null and timeType == '2'.toString()">
            and DATE_FORMAT(a.crte_time,'%Y-%m-%d') &lt;= DATE_FORMAT(#{endTime},'%Y-%m-%d')
        </if>
        <if test="name != null and name != '' ">
            and visit.name like concat('%',#{name},'%')
        </if>
        <if test="statusCode != null and statusCode != '' ">
            and a.status_code = #{statusCode}
        </if>
        group by a.bfc_id,a.item_name,a.spec,a.unit_code
    </select>

    <!--门诊/住院明细收费项目-->
    <select id="queryXmChargeDetail" resultType="java.util.LinkedHashMap">
        select
        a.item_name,
        a.num_unit_code as unit_name,
        a.spec,
        max(a.price) as price,
        sum(a.total_num) as num,
        sum(a.total_price) as total_price,
        max(a.preferential_price) as preferential_price,
        sum(a.reality_price) as reality_price
        from outpt_settle settle
        join outpt_cost a on settle.id = a.settle_id and a.hosp_code = settle.hosp_code
        join outpt_visit visit on visit.id = settle.visit_id
        where settle.is_settle = '1' and a.hosp_code = #{hospCode}
        <if test="startTime != null and startTime != '' and timeType != null and timeType == '1'.toString()">
            and DATE_FORMAT(settle.settle_time,'%Y-%m-%d') &gt;= DATE_FORMAT(#{startTime},'%Y-%m-%d')
        </if>
        <if test="endTime != null and endTime != '' and timeType != null and timeType == '1'.toString()">
            and DATE_FORMAT(settle.settle_time,'%Y-%m-%d') &lt;= DATE_FORMAT(#{endTime},'%Y-%m-%d')
        </if>
        <if test="startTime != null and startTime != '' and timeType != null and timeType == '2'.toString()">
            and DATE_FORMAT(a.crte_time,'%Y-%m-%d') &gt;= DATE_FORMAT(#{startTime},'%Y-%m-%d')
        </if>
        <if test="endTime != null and endTime != '' and timeType != null and timeType == '2'.toString()">
            and DATE_FORMAT(a.crte_time,'%Y-%m-%d') &lt;= DATE_FORMAT(#{endTime},'%Y-%m-%d')
        </if>
        <if test="name != null and name != '' ">
            and visit.name like concat('%',#{name},'%')
        </if>
        <if test="statusCode != null and statusCode != '' ">
            and a.status_code = #{statusCode}
        </if>
        group by a.item_name, a.spec,a.num_unit_code
        union all
        select
        a.item_name,
        a.unit_code  as unit_name,
        a.spec,
        max(a.price) as price,
        sum(a.num) as num,
        sum(a.total_price) as total_price,
        max(a.preferential_price) as preferential_price,
        sum(a.reality_price) as reality_price
        from outpt_register_settle settle
        join outpt_register_detail a on settle.register_id = a.register_id and a.hosp_code = settle.hosp_code and settle.status_code = a.status_code
        join outpt_visit visit on visit.id = a.visit_id
        where a.hosp_code = #{hospCode}
        <if test="startTime != null and startTime != '' and timeType != null and timeType == '1'.toString()">
            and DATE_FORMAT(settle.settle_time,'%Y-%m-%d') &gt;= DATE_FORMAT(#{startTime},'%Y-%m-%d')
        </if>
        <if test="endTime != null and endTime != '' and timeType != null and timeType == '1'.toString()">
            and DATE_FORMAT(settle.settle_time,'%Y-%m-%d') &lt;= DATE_FORMAT(#{endTime},'%Y-%m-%d')
        </if>
        <if test="startTime != null and startTime != '' and timeType != null and timeType == '2'.toString()">
            and DATE_FORMAT(a.crte_time,'%Y-%m-%d') &gt;= DATE_FORMAT(#{startTime},'%Y-%m-%d')
        </if>
        <if test="endTime != null and endTime != '' and timeType != null and timeType == '2'.toString()">
            and DATE_FORMAT(a.crte_time,'%Y-%m-%d') &lt;= DATE_FORMAT(#{endTime},'%Y-%m-%d')
        </if>
        <if test="name != null and name != '' ">
            and visit.name like concat('%',#{name},'%')
        </if>
        <if test="statusCode != null and statusCode != '' ">
            and a.status_code = #{statusCode}
        </if>
        group by a.item_name, a.spec,a.unit_code
    </select>

    <!--住院明细收费-->
    <select id="queryInptAllChargeDetail" resultType="java.util.LinkedHashMap">
        select * from (
        select  b.in_no,
        settle.settle_no,
        b.name,
        b.gender_code ,
        a.bfc_id,
        a.item_code,
        a.item_name,
        a.spec,
        a.num_unit_code as unit_name,
        a.price,
        if (a.reality_price &lt; 0, -1*a.total_num, a.total_num) as total_num,
        a.total_price, a.preferential_price, a.reality_price,
        settle.crte_name as get_cost_name, DATE_FORMAT(settle.crte_time,'%Y-%m-%d %H:%i:%S') as get_cost_time,
        a.doctor_name,
        a.dept_id,
        a.exec_dept_id,
        (select name from base_disease where id = (select SUBSTRING_INDEX(diagnose_ids, ',', 1) from outpt_prescribe
        where id = b.in_disease_id)) as disease_name
        from inpt_settle settle
        join inpt_cost a on settle.id = a.settle_id and a.hosp_code = settle.hosp_code
        join inpt_visit b on a.visit_id = b.id and a.hosp_code = b.hosp_code
        where settle.is_settle = '1' and a.hosp_code = #{hospCode}
        <if test="startTime != null and timeType != null and timeType == '1'.toString()">
            and DATE_FORMAT(settle.settle_time,'%Y-%m-%d') &gt;= DATE_FORMAT(#{startTime},'%Y-%m-%d')
        </if>
        <if test="endTime != null and timeType != null and timeType == '1'.toString()">
            and DATE_FORMAT(settle.settle_time,'%Y-%m-%d') &lt;= DATE_FORMAT(#{endTime},'%Y-%m-%d')
        </if>
        <if test="startTime != null and timeType != null and timeType == '2'.toString()">
            and DATE_FORMAT(a.cost_time,'%Y-%m-%d') &gt;= DATE_FORMAT(#{startTime},'%Y-%m-%d')
        </if>
        <if test="endTime != null and timeType != null and timeType == '2'.toString()">
            and DATE_FORMAT(a.cost_time,'%Y-%m-%d') &lt;= DATE_FORMAT(#{endTime},'%Y-%m-%d')
        </if>
        <if test="name != null and name != '' ">
            and b.name like concat('%',#{name},'%')
        </if>
        <if test="statusCode != null and statusCode == '1'.toString()">
            and a.status_code = #{statusCode}
        </if>
        ) aa order by name,bfc_id,get_cost_time desc
    </select>

    <!--住院明细收费项目+费别-->
    <select id="queryInptXmfbChargeDetail" resultType="java.util.LinkedHashMap">
        select
        a.bfc_id,
        a.item_name,
        a.spec,
        a.num_unit_code as unit_name,
        max(a.price) as price,
        sum(a.total_num) as num,
        sum(a.total_price) as total_price,
        max(a.preferential_price) as preferential_price,
        sum(a.reality_price) as reality_price
        from inpt_settle settle
        join inpt_cost a on settle.id = a.settle_id and a.hosp_code = settle.hosp_code
        join inpt_visit b on a.visit_id = b.id and a.hosp_code = b.hosp_code
        where settle.is_settle = '1' and a.hosp_code = #{hospCode}
        <if test="startTime != null and startTime != '' and timeType != null and timeType == '1'.toString()">
            and DATE_FORMAT(settle.settle_time,'%Y-%m-%d') &gt;= DATE_FORMAT(#{startTime},'%Y-%m-%d')
        </if>
        <if test="endTime != null and endTime != '' and timeType != null and timeType == '1'.toString()">
            and DATE_FORMAT(settle.settle_time,'%Y-%m-%d') &lt;= DATE_FORMAT(#{endTime},'%Y-%m-%d')
        </if>
        <if test="startTime != null and startTime != '' and timeType != null and timeType == '2'.toString()">
            and DATE_FORMAT(a.cost_time,'%Y-%m-%d') &gt;= DATE_FORMAT(#{startTime},'%Y-%m-%d')
        </if>
        <if test="endTime != null and endTime != '' and timeType != null and timeType == '2'.toString()">
            and DATE_FORMAT(a.cost_time,'%Y-%m-%d') &lt;= DATE_FORMAT(#{endTime},'%Y-%m-%d')
        </if>
        <if test="name != null and name != '' ">
            and b.name like concat('%',#{name},'%')
        </if>
        <if test="statusCode != null and statusCode != '' ">
            and a.status_code = #{statusCode}
        </if>
        group by a.bfc_id,a.item_name,a.spec,a.num_unit_code
    </select>

    <!--住院明细收费项目-->
    <select id="queryInptXmChargeDetail" resultType="java.util.LinkedHashMap">
        select
        a.item_name,
        a.spec,
        a.num_unit_code as unit_name,
        max(a.price) as price,
        sum(a.total_num) as num,
        sum(a.total_price) as total_price,
        max(a.preferential_price) as preferential_price,
        sum(a.reality_price) as reality_price
        from inpt_settle settle
        join inpt_cost a on settle.id = a.settle_id and a.hosp_code = settle.hosp_code
        join inpt_visit b on a.visit_id = b.id and a.hosp_code = b.hosp_code
        where settle.is_settle = '1' and a.hosp_code = #{hospCode}
        <if test="startTime != null and startTime != '' and timeType != null and timeType == '1'.toString()">
            and DATE_FORMAT(settle.settle_time,'%Y-%m-%d') &gt;= DATE_FORMAT(#{startTime},'%Y-%m-%d')
        </if>
        <if test="endTime != null and endTime != '' and timeType != null and timeType == '1'.toString()">
            and DATE_FORMAT(settle.settle_time,'%Y-%m-%d') &lt;= DATE_FORMAT(#{endTime},'%Y-%m-%d')
        </if>
        <if test="startTime != null and startTime != '' and timeType != null and timeType == '2'.toString()">
            and DATE_FORMAT(a.cost_time,'%Y-%m-%d') &gt;= DATE_FORMAT(#{startTime},'%Y-%m-%d')
        </if>
        <if test="endTime != null and endTime != '' and timeType != null and timeType == '2'.toString()">
            and DATE_FORMAT(a.cost_time,'%Y-%m-%d') &lt;= DATE_FORMAT(#{endTime},'%Y-%m-%d')
        </if>
        <if test="name != null and name != '' ">
            and b.name like concat('%',#{name},'%')
        </if>
        <if test="statusCode != null and statusCode != '' ">
            and a.status_code = #{statusCode}
        </if>
        group by a.item_name, a.spec,a.num_unit_code
    </select>



    <!--全院日报表：门诊挂号、初复诊信息查询-->
    <select id="queryOutptRegisterInfo" resultType="java.util.Map">

        select
        ghrc mz_ghrc,
        ifnull(ghje,0) mz_ghje,
        ifnull(czrc,0) mz_czrc,
        ifnull(fzrc,0) mz_fzrc,
        mhrc mz_mhrc,
        mz_jzrc,
        mz_jzje,
        ifnull(mz_czys,0) mz_czys,
        mz_cfs
        from (
        select
        (
        SELECT
        count(1)
        FROM
        outpt_register er
        WHERE
        er.hosp_code = #{hospCode}
        <if test="startDate != null">
            AND date(er.register_time) >= date(#{startDate})
        </if>
        <if test="endDate != null">
            AND date(er.register_time) &lt;= date(#{endDate})
        </if>
        AND er.is_cancel = '0')ghrc,
        (
        SELECT
        sum(l.reality_price) reality_price
        FROM
        outpt_register er,
        outpt_register_detail l
        WHERE
        er.hosp_code = l.hosp_code
        AND er.id = l.register_id and er.status_code = l.status_code
        AND er.hosp_code = #{hospCode}
        <if test="startDate != null">
            AND date(er.register_time) >= date(#{startDate})
        </if>
        <if test="endDate != null">
            AND date(er.register_time) &lt;= date(#{endDate})
        </if>
        AND er.is_cancel = '0') ghje,
        (
        SELECT
        count(1) cz
        FROM
        outpt_register er
        WHERE
        er.hosp_code = #{hospCode}
        <if test="startDate != null">
            AND date(er.register_time) >= date(#{startDate})
        </if>
        <if test="endDate != null">
            AND date(er.register_time) &lt;= date(#{endDate})
        </if>
        AND er.is_cancel = '0'
        AND (er.is_first_visit ='1' or er.is_first_visit is null) )czrc,
        (
        SELECT
        count(1) fz
        FROM
        outpt_register er
        WHERE
        er.hosp_code = #{hospCode}
        <if test="startDate != null">
            AND date(er.register_time) >= date(#{startDate})
        </if>
        <if test="endDate != null">
            AND date(er.register_time) &lt;= date(#{endDate})
        </if>
        AND er.is_cancel = '0'
        AND er.is_first_visit ='0')fzrc,
        (
        SELECT
        count(1)
        from
        outpt_register er
        WHERE
        er.hosp_code = #{hospCode}
        <if test="startDate != null">
            AND date(er.register_time) >= date(#{startDate})
        </if>
        <if test="endDate != null">
            AND date(er.register_time) &lt;= date(#{endDate})
        </if>
        AND er.is_cancel = '0'
        AND exists(
        select 1 from outpt_cost t where t.hosp_code = er.hosp_code and t.visit_id = er.visit_id and t.status_code = '0' and t.source_code = '10'
        ))mhrc,

        ( SELECT
        count( 1 )
        FROM outpt_visit t
        WHERE t.hosp_code =  #{hospCode}
        <if test="startDate != null">
            AND date(t.visit_time) >= date(#{startDate})
        </if>
        <if test="endDate != null">
            AND date(t.visit_time) &lt;= date(#{endDate})
        </if>
        ) mz_jzrc,
        ifnull(
        (SELECT
        sum( st.reality_price )
        FROM
        outpt_visit t,
        outpt_cost st
        WHERE
        t.hosp_code = st.hosp_code
        AND t.id = st.visit_id
        AND t.hosp_code = #{hospCode}
        <if test="startDate != null">
            AND date(t.visit_time) >= date(#{startDate})
        </if>
        <if test="endDate != null">
            AND date(t.visit_time) &lt;= date(#{endDate})
        </if>
        ),0
        ) mz_jzje,
        (
        SELECT
        sum(IF( ysrs > 0, 1, 0 ))
        FROM
        ( SELECT count( 1 ) ysrs
        FROM outpt_prescribe e
        WHERE e.hosp_code = #{hospCode}
        <if test="startDate != null">
            AND date(e.submit_time) >= date(#{startDate})
        </if>
        <if test="endDate != null">
            AND date(e.submit_time) &lt;= date(#{endDate})
        </if>
        GROUP BY doctor_id
        ) tab
        ) mz_czys,
        (
        SELECT count( 1 )
        FROM outpt_prescribe e
        WHERE e.hosp_code = #{hospCode}
        <if test="startDate != null">
            AND date(e.submit_time) >= date(#{startDate})
        </if>
        <if test="endDate != null">
            AND date(e.submit_time) &lt;= date(#{endDate})
        </if>
        )mz_cfs
        )tab
    </select>

    <!--全院日报表：住院基本信息查询-->
    <select id="queryInptBaseInfo" resultType="java.util.Map">
        select
        (SELECT
        count(1)
        FROM
        inpt_visit t
        WHERE
        t.hosp_code = #{hospCode}
        <if test="startDate != null">
            AND date(t.in_time) >= date(#{startDate})
        </if>
        <if test="endDate != null">
            AND date(t.in_time) &lt;= date(#{endDate})
        </if>
        ) zy_ryrs,
        (
        SELECT
        count(1)
        FROM
        inpt_visit t
        WHERE
        t.hosp_code = #{hospCode}
        <if test="startDate != null">
            AND date(t.out_time) >= date(#{startDate})
        </if>
        <if test="endDate != null">
            AND date(t.out_time) &lt;= date(#{endDate})
        </if>
        )zy_cyrs,
        (
        SELECT
        count(1)
        FROM
        inpt_visit t,
        inpt_settle le
        WHERE
        t.hosp_code = le.hosp_code
        AND t.id = le.visit_id
        AND t.hosp_code = #{hospCode}
        <if test="startDate != null">
            AND date(t.out_time) >= date(#{startDate})
        </if>
        <if test="endDate != null">
            AND date(t.out_time) &lt;= date(#{endDate})
            AND date(le.settle_time) &lt;= date(#{endDate})
        </if>

        )zy_cywjsrs
    </select>

    <!--全院日报表：住院在院信息查询-->
    <select id="queryInptInHospitalInfo" resultType="java.util.Map">
        select
        (SELECT
        count(1)
        FROM
        inpt_visit t
        WHERE
        t.hosp_code = #{hospCode}
        <if test="startDate != null">
            AND date(t.in_time) >= date(#{startDate})
        </if>
        <if test="endDate != null">
            AND date(t.in_time) &lt; date(#{endDate})
        </if>
        AND t.status_code = '2'
        ) zy_zyrs,
        ifnull((
        SELECT
        sum(reality_price)
        FROM
        inpt_cost t
        WHERE
        t.hosp_code = #{hospCode}
        <if test="startDate != null">
            AND date(t.crte_time) >= date(#{startDate})
        </if>
        <if test="endDate != null">
            AND date(t.crte_time) &lt; date(#{endDate})
        </if>
        AND t.status_code = '0'
        ),0)zy_jzje,
        ifnull((
        SELECT
        sum( y.price )
        FROM
        inpt_advance_pay y
        WHERE
        y.hosp_code = #{hospCode}
        <if test="startDate != null">
            AND date(y.crte_time) >= date(#{startDate})
        </if>
        <if test="endDate != null">
            AND date(y.crte_time) &lt; date(#{endDate})
        </if>
        ),0)zy_ysk
    </select>

    <!--全院日报表：住院结算信息查询-->
    <select id="queryInptSettleInfo" resultType="java.util.Map">
        select
        (
        SELECT
        count(1)
        FROM
        inpt_visit t
        WHERE
        t.hosp_code = #{hospCode}
        AND exists(
        SELECT
        1
        FROM
        inpt_settle le
        WHERE
        t.hosp_code = le.hosp_code
        AND t.id = le.visit_id
        AND le.is_settle = '1'
        <if test="startDate != null">
            AND date(le.settle_time)  >= date(#{startDate})
        </if>
        <if test="endDate != null">
            AND date(le.settle_time)  &lt;= date(#{startDate})
        </if>
        )
        )zy_jsrs,

        ifnull((
        SELECT
        sum(reality_price)
        FROM
        inpt_visit t,inpt_settle le
        WHERE
        t.hosp_code = le.hosp_code
        AND t.id = le.visit_id
        AND t.hosp_code = #{hospCode}
        <if test="startDate != null">
            AND date(le.settle_time)  >= date(#{startDate})
        </if>
        <if test="endDate != null">
            AND date(le.settle_time)  &lt;= date(#{startDate})
        </if>
        ),0) zy_jsje,

        ifnull((
        SELECT
        sum( ics.reality_price )
        FROM
        inpt_cost t,inpt_cost_settle ics
        WHERE
        t.hosp_code = #{hospCode}
        <if test="startDate != null">
            AND date(t.crte_time)  >= date(#{startDate})
        </if>
        <if test="endDate != null">
            AND date(t.crte_time)  &lt;= date(#{startDate})
        </if>
        AND NOT EXISTS (
        SELECT
        1
        FROM
        inpt_settle le,
        inpt_cost_settle e
        WHERE
        t.hosp_code = e.hosp_code
        AND t.id = e.cost_id
        AND e.settle_id = le.id
        AND t.item_code = '1'
        )),0) zy_zlfy,

        ifnull((
        SELECT
        sum( ics.reality_price )
        FROM
        inpt_cost t,inpt_cost_settle ics
        WHERE
        t.hosp_code = #{hospCode}
        AND EXISTS (
        SELECT
        1
        FROM
        inpt_settle le,
        inpt_cost_settle e
        WHERE
        t.hosp_code = e.hosp_code
        AND t.id = e.cost_id
        AND e.settle_id = le.id
        AND t.item_code = '1'
        AND le.is_settle = '1'
        <if test="startDate != null">
            AND date(le.settle_time)  >= date(#{startDate})
        </if>
        <if test="endDate != null">
            AND date(le.settle_time)  &lt;= date(#{startDate})
        </if>
        )),0) zy_ypjsfy

    </select>

    <!--全院日报表：住院保险报销信息查询-->
    <select id="queryInptInsuerInfo" resultType="java.util.Map">
        select
        (SELECT
        count( 1 )
        FROM
        inpt_visit t
        WHERE
        t.hosp_code = #{hospCode}
        and t.patient_code = '1'
        AND EXISTS (
        SELECT
        1
        FROM
        inpt_settle e
        WHERE
        t.hosp_code = t.hosp_code
        AND e.visit_id = t.id
        <if test="startDate != null">
            AND date(e.settle_time)  >= date(#{startDate})
        </if>
        <if test="endDate != null">
            AND date(e.settle_time)  &lt;= date(#{startDate})
        </if>
        ))zy_ybzyrc,

        (SELECT
        count( 1 )
        FROM
        inpt_visit t
        WHERE
        t.hosp_code = #{hospCode}
        and t.patient_code = '2'
        AND EXISTS (
        SELECT
        1
        FROM
        inpt_settle e
        WHERE
        t.hosp_code = t.hosp_code
        AND e.visit_id = t.id
        <if test="startDate != null">
            AND date(e.settle_time)  >= date(#{startDate})
        </if>
        <if test="endDate != null">
            AND date(e.settle_time)  &lt;= date(#{startDate})
        </if>
        ))zy_nbzyrc,

        ifnull((SELECT
        sum(e.mi_price)
        FROM
        inpt_visit t ,inpt_settle e
        WHERE
        t.hosp_code = t.hosp_code
        AND e.visit_id = t.id
        AND t.hosp_code = #{hospCode}
        AND t.patient_code = '1'
        <if test="startDate != null">
            AND date(e.settle_time)  >= date(#{startDate})
        </if>
        <if test="endDate != null">
            AND date(e.settle_time)  &lt;= date(#{startDate})
        </if>
        ),0)zy_ybzyzf,

        ifnull((SELECT
        sum(e.mi_price)
        FROM
        inpt_visit t ,inpt_settle e
        WHERE
        t.hosp_code = t.hosp_code
        AND e.visit_id = t.id
        AND t.hosp_code = #{hospCode}
        AND t.patient_code = '2'
        <if test="startDate != null">
            AND date(e.settle_time)  >= date(#{startDate})
        </if>
        <if test="endDate != null">
            AND date(e.settle_time)  &lt;= date(#{startDate})
        </if>
        ),0)zy_nbzyzf,

        ifnull((SELECT
        sum(e.hosp_df_price)
        FROM
        inpt_visit t ,inpt_settle e
        WHERE
        t.hosp_code = t.hosp_code
        AND e.visit_id = t.id
        AND t.hosp_code = #{hospCode}
        AND t.patient_code = '1'
        <if test="startDate != null">
            AND date(e.settle_time)  >= date(#{startDate})
        </if>
        <if test="endDate != null">
            AND date(e.settle_time)  &lt;= date(#{startDate})
        </if>
        ),0)zy_ybdfje,

        ifnull((SELECT
        sum(e.hosp_df_price)
        FROM
        inpt_visit t ,inpt_settle e
        WHERE
        t.hosp_code = t.hosp_code
        AND e.visit_id = t.id
        AND t.hosp_code = #{hospCode}
        AND t.patient_code = '2'
        <if test="startDate != null">
            AND date(e.settle_time)  >= date(#{startDate})
        </if>
        <if test="endDate != null">
            AND date(e.settle_time)  &lt;= date(#{startDate})
        </if>
        ),0)zy_nbdfje

    </select>

    <!--全院日报表：医疗信息(门诊收入、住院收入、总收入)-->
    <select id="queryMedicalTreatmentInfo" resultType="java.util.Map">
        select
        ifnull((
        SELECT
        sum( reality_price )
        FROM
        outpt_cost t
        WHERE
        t.hosp_code = #{hospCode}
        AND t.status_code = '0'
        <if test="startDate != null">
            AND date(t.crte_time)  >= date(#{startDate})
        </if>
        <if test="endDate != null">
            AND date(t.crte_time)  &lt;= date(#{endDate})
        </if>
        AND exists(
        select 1 from base_drug g where g.hosp_code = t.hosp_code and g.id = t.item_id
        and g.big_type_code = '0'
        )),0) yl_mzxysrje,

        ifnull((
        SELECT
        sum( reality_price )
        FROM
        outpt_cost t
        WHERE
        t.hosp_code = #{hospCode}
        AND t.status_code = '0'
        <if test="startDate != null">
            AND date(t.crte_time)  >= date(#{startDate})
        </if>
        <if test="endDate != null">
            AND date(t.crte_time)  &lt;= date(#{endDate})
        </if>
        AND exists(
        select 1 from base_drug g where g.hosp_code = t.hosp_code and g.id = t.item_id
        and g.big_type_code = '1'
        )),0) yl_mzzcysrje,

        ifnull((
        SELECT
        sum( reality_price )
        FROM
        outpt_cost t
        WHERE
        t.hosp_code = #{hospCode}
        AND t.status_code = '0'
        <if test="startDate != null">
            AND date(t.crte_time)  >= date(#{startDate})
        </if>
        <if test="endDate != null">
            AND date(t.crte_time)  &lt;= date(#{endDate})
        </if>
        AND exists(
        select 1 from base_drug g where g.hosp_code = t.hosp_code and g.id = t.item_id
        and g.big_type_code = '2'
        )),0) yl_mzcysrje,

        ifnull((
        SELECT
        sum( reality_price )
        FROM
        outpt_cost t
        WHERE
        t.hosp_code = #{hospCode}
        AND t.status_code = '0'
        <if test="startDate != null">
            AND date(t.crte_time)  >= date(#{startDate})
        </if>
        <if test="endDate != null">
            AND date(t.crte_time)  &lt;= date(#{endDate})
        </if>
        AND not exists(
        select 1 from base_drug g where g.hosp_code = t.hosp_code and g.id = t.item_id
        and g.big_type_code in ('0','1','2')
        )),0) yl_mzqtsrje,

        ifnull((
        SELECT
        sum( ics.reality_price )
        FROM
        inpt_cost t, inpt_cost_settle ics
        WHERE
        t.hosp_code = #{hospCode}
        AND t.status_code = '0'
        <if test="startDate != null">
            AND date(t.crte_time)  >= date(#{startDate})
        </if>
        <if test="endDate != null">
            AND date(t.crte_time)  &lt;= date(#{endDate})
        </if>
        AND exists(
        select 1 from base_drug g where g.hosp_code = t.hosp_code and g.id = t.item_id
        and g.big_type_code = '0'
        )),0) yl_zyxysrje,

        ifnull((
        SELECT
        sum( ics.reality_price )
        FROM
        inpt_cost t,,inpt_cost_settle ics
        WHERE
        t.hosp_code = #{hospCode}
        AND t.status_code = '0'
        <if test="startDate != null">
            AND date(t.crte_time)  >= date(#{startDate})
        </if>
        <if test="endDate != null">
            AND date(t.crte_time)  &lt;= date(#{endDate})
        </if>
        AND exists(
        select 1 from base_drug g where g.hosp_code = t.hosp_code and g.id = t.item_id
        and g.big_type_code = '1'
        )),0) yl_zyzcysrje,

        ifnull((
        SELECT
        sum( ics.reality_price )
        FROM
        inpt_cost t,inpt_cost_settle ics
        WHERE
        t.hosp_code = #{hospCode}
        AND t.status_code = '0'
        <if test="startDate != null">
            AND date(t.crte_time)  >= date(#{startDate})
        </if>
        <if test="endDate != null">
            AND date(t.crte_time)  &lt;= date(#{endDate})
        </if>
        AND exists(
        select 1 from base_drug g where g.hosp_code = t.hosp_code and g.id = t.item_id
        and g.big_type_code = '2'
        )),0) yl_zycysrje,

        ifnull((
        SELECT
        sum( ics.reality_price )
        FROM
        inpt_cost t,inpt_cost_settle ics
        WHERE
        t.hosp_code = #{hospCode}
        AND t.status_code = '0'
        <if test="startDate != null">
            AND date(t.crte_time)  >= date(#{startDate})
        </if>
        <if test="endDate != null">
            AND date(t.crte_time)  &lt;= date(#{endDate})
        </if>
        AND not exists(
        select 1 from base_drug g where g.hosp_code = t.hosp_code and g.id = t.item_id
        and g.big_type_code in ('0','1','2')
        )),0) yl_zyqtsrje

    </select>

    <!--全院日报表：医疗手术信息-->
    <select id="queryMedicalOperationInfo" resultType="java.util.Map">
        select
        (
        SELECT
        count(1)
        FROM
        oper_info_record d
        WHERE
        d.hosp_code = #{hospCode}
        and d.status_code = '2'
        <if test="startDate != null">
            AND date(d.oper_plan_time)  >= date(#{startDate})
        </if>
        <if test="endDate != null">
            AND date(d.oper_plan_time)  &lt;= date(#{endDate})
        </if>
        ) yl_ssts,

        (SELECT
        count(1)
        FROM
        oper_info_record d
        where d.hosp_code = #{hospCode}
        <if test="startDate != null">
            AND date(d.oper_plan_time)  >= date(#{startDate})
        </if>
        <if test="endDate != null">
            AND date(d.oper_plan_time)  &lt;= date(#{endDate})
        </if>
        and exists(
        select 1 from base_advice e where d.hosp_code = e.hosp_code
        AND d.oper_disease_id = e.CODE
        AND e.insure_list_code in ('1','2')
        )) yl_jylss,

        ifnull((
        SELECT
        sum(ics.reality_price)
        FROM
        inpt_cost t,
        base_dept pt,inpt_cost_settle ics
        WHERE
        t.hosp_code = pt.hosp_code
        AND t.hosp_code = #{hospCode}
        <if test="startDate != null">
            AND date(t.crte_time) >= date(#{startDate})
        </if>
        <if test="endDate != null">
            AND date(t.crte_time) &lt;= date(#{endDate})
        </if>
        AND t.source_code = '8'
        AND t.source_dept_id = pt.id
        AND pt.type_code = '9'),0) yl_sszfy

    </select>

    <!--全院日报表：医疗信息(在院、出院、转院)-->
    <select id="queryMedicalInOutptInfo" resultType="java.util.Map">
        select
        (SELECT
        count(1)
        FROM
        inpt_visit t
        WHERE
        t.hosp_code = #{hospCode}
        AND t.status_code = '0'
        AND t.Illness_code IN ( '1', '2' )) yl_zywzrs,

        (
        SELECT
        count(1)
        FROM
        base_bed d
        WHERE
        d.hosp_code = #{hospCode}
        AND d.status_code != '4'
        AND d.is_valid = '1') yl_zyedcw,

        (
        SELECT
        count(1)
        FROM
        base_bed d
        WHERE
        d.hosp_code = #{hospCode}
        AND d.status_code != '4'
        AND d.is_valid = '1'
        AND (d.visit_id is not null and d.visit_id !='' )) yl_zyyzcw,

        (
        SELECT
        count(1)
        FROM
        inpt_visit t
        WHERE
        t.hosp_code = #{hospCode}
        AND t.status_code = '7'
        AND t.out_situation_code = '1'
        <if test="startDate != null">
            AND date(t.out_time) >= date(#{startDate})
        </if>
        <if test="endDate != null">
            AND date(t.out_time) &lt;= date(#{endDate})
        </if>
        )yl_cyzyrs,

        (
        SELECT
        count(1)
        FROM
        inpt_visit t
        WHERE
        t.hosp_code = #{hospCode}
        AND t.status_code = '7'
        AND t.out_situation_code = '2'
        <if test="startDate != null">
            AND date(t.out_time) >= date(#{startDate})
        </if>
        <if test="endDate != null">
            AND date(t.out_time) &lt;= date(#{endDate})
        </if>
        )yl_cyhzrs,

        (
        SELECT
        count(1)
        FROM
        inpt_visit t
        WHERE
        t.hosp_code = #{hospCode}
        AND t.status_code = '7'
        AND t.out_situation_code = '4'
        <if test="startDate != null">
            AND date(t.out_time) >= date(#{startDate})
        </if>
        <if test="endDate != null">
            AND date(t.out_time) &lt;= date(#{endDate})
        </if>
        )yl_cyswrs,

        (
        SELECT
        count(1)
        FROM
        inpt_visit t
        WHERE
        t.hosp_code = #{hospCode}
        AND t.status_code = '7'
        AND t.out_mode_code in ('2','3')
        <if test="startDate != null">
            AND date(t.out_time) >= date(#{startDate})
        </if>
        <if test="endDate != null">
            AND date(t.out_time) &lt;= date(#{endDate})
        </if>
        )yl_zyrs,

        ifnull((
        SELECT
        sum(ics.reality_price)
        FROM
        inpt_visit t ,inpt_cost st,inpt_cost_settle ics
        WHERE
        t.hosp_code = st.hosp_code
        and t.id = st.visit_id
        and t.hosp_code = #{hospCode}
        AND t.status_code = '7'
        AND t.out_mode_code in ('2','3')
        <if test="startDate != null">
            AND date(t.out_time) >= date(#{startDate})
        </if>
        <if test="endDate != null">
            AND date(t.out_time) &lt;= date(#{endDate})
        </if>
        ),0) yl_zyfyfse

    </select>


    <!--查询财务分类门诊-->
    <select id="queryOutptCostBfcGroupMap" resultType="java.util.Map">
        SELECT
        a.bfc_id as bfcId,
        (select name from base_finance_classify where id = a.bfc_id) as bfcName
        FROM
        outpt_cost a
        where a.hosp_code = #{hospCode}
        <if test="startDate != null ">
            and date(a.crte_time) &gt;= date(#{startDate})
        </if>
        <if test="endDate != null ">
            and date(a.crte_time) &lt;= date(#{endDate})
        </if>
        group by a.bfc_id
    </select>

    <!--查询财务分类住院-->
    <select id="queryInptCostBfcGroupMap" resultType="java.util.Map">
        SELECT
        a.bfc_id as bfcId,
        (select name from base_finance_classify where id = a.bfc_id) as bfcName
        FROM
        inpt_cost a
        where a.hosp_code = #{hospCode}
        <if test="startDate != null ">
            and date(a.crte_time) &gt;= date(#{startDate})
        </if>
        <if test="endDate != null ">
            and date(a.crte_time) &lt;= date(#{endDate})
        </if>
        group by a.bfc_id
    </select>

    <!--财务收入统计  门诊-->
    <select id="queryFinancialIncome" resultType="java.util.LinkedHashMap">
        select (select name from base_dept where id = a.dept_id) as 开方科室,
        ${sqlStr}
        from outpt_cost a
        where a.hosp_code = #{hospCode}
        <if test="startTime != null ">
            and date(a.crte_time) &gt;= date(#{startTime})
        </if>
        <if test="endTime != null ">
            and date(a.crte_time) &lt;= date(#{endTime})
        </if>
        GROUP BY a.dept_id
    </select>

    <!--财务收入统计  住院-->
    <select id="queryFinancialIncomeInpt" resultType="java.util.LinkedHashMap">
        select (select name from base_dept where id = a.dept_id) as 开方科室,
        ${sqlStrInpt}
        from inpt_cost a
        where a.hosp_code = #{hospCode}
        <if test="startTime != null ">
            and date(a.crte_time) &gt;= date(#{startTime})
        </if>
        <if test="endTime != null ">
            and date(a.crte_time) &lt;= date(#{endTime})
        </if>
        GROUP BY a.dept_id
    </select>

    <!--查询财务分类列-->
    <select id="queryBfcGroupMap" resultMap="dynamicTableMap">
        select '-1' id, '开方科室' label, '-1' prop, '科室' labelBfc, 'false' showSummary,'' toFixed
        union
        select '-1' id, '开方科室' label, '-2' prop, '总额' labelBfc, 'true' showSummary,'2' toFixed
        union
        <!-- 挂号 -->
        <if test="type == null or type == '' or type == '3'.toString() ">
            select a.bfc_id id, b.name label, concat(a.bfc_id,'_1') prop, '总金额' labelBfc, 'true' showSummary,'2' toFixed
            from outpt_register_settle settle
            join outpt_register_detail a on settle.register_id = a.register_id and settle.hosp_code = a.hosp_code and settle.status_code = a.status_code
            join base_finance_classify b on a.bfc_id = b.id and a.hosp_code = b.hosp_code
            where a.hosp_code = #{hospCode}
            <if test="startDate != null ">
                and date(settle.crte_time) &gt;= date(#{startDate})
            </if>
            <if test="endDate != null ">
                and date(settle.crte_time) &lt;= date(#{endDate})
            </if>
            group by a.bfc_id, b.name
            union
            select a.bfc_id id, b.name label, concat(a.bfc_id,'_2') prop, '优惠金额' labelBfc, 'true' showSummary,'2' toFixed
            from outpt_register_settle settle
            join outpt_register_detail a on settle.register_id = a.register_id and settle.hosp_code = a.hosp_code and settle.status_code = a.status_code
            join base_finance_classify b on a.bfc_id = b.id and a.hosp_code = b.hosp_code
            where a.hosp_code = #{hospCode}
            <if test="startDate != null ">
                and settle.crte_time &gt;= #{startDate}
            </if>
            <if test="endDate != null ">
                and settle.crte_time &lt;= DATE_FORMAT(#{endDate},'%Y-%m-%d')
            </if>
            group by a.bfc_id, b.name
            union
            select a.bfc_id id, b.name label, concat(a.bfc_id,'_3') prop, '优惠后总金额' labelBfc, 'true' showSummary,'2' toFixed
            from outpt_register_settle settle
            join outpt_register_detail a on settle.register_id = a.register_id and settle.hosp_code = a.hosp_code and settle.status_code = a.status_code
            join base_finance_classify b on a.bfc_id = b.id and a.hosp_code = b.hosp_code
            where a.hosp_code = #{hospCode}
            <if test="startDate != null ">
                and date(settle.crte_time) &gt;= date(#{startDate})
            </if>
            <if test="endDate != null ">
                and date(settle.crte_time) &lt;= date(#{endDate})
            </if>
            group by a.bfc_id, b.name
        </if>

        <if test="type == null or type == ''">
            union
        </if>

        <!-- 门诊 -->
        <if test="type == null or type == '' or type == '1'.toString() ">
            select a.bfc_id id, b.name label, concat(a.bfc_id,'_1') prop, '总金额' labelBfc, 'true' showSummary,'2' toFixed
            from outpt_settle settle
            join outpt_cost a on settle.id = ifnull(a.settle_id, '') and settle.hosp_code = a.hosp_code
            join base_finance_classify b on a.bfc_id = b.id and a.hosp_code = b.hosp_code
            where settle.is_settle = '1' and a.hosp_code = #{hospCode} and a.settle_code = '2'
            <if test="startDate != null ">
                and date(settle.crte_time) &gt;= date(#{startDate})
            </if>
            <if test="endDate != null ">
                and date(settle.crte_time) &lt;= date(#{endDate})
            </if>
            group by a.bfc_id, b.name
            union
            select a.bfc_id id, b.name label, concat(a.bfc_id,'_2') prop, '优惠金额' labelBfc, 'true' showSummary,'2' toFixed
            from outpt_settle settle
            join outpt_cost a on settle.id = ifnull(a.settle_id, '') and settle.hosp_code = a.hosp_code
            join base_finance_classify b on a.bfc_id = b.id and a.hosp_code = b.hosp_code
            where settle.is_settle = '1' and a.hosp_code = #{hospCode} and a.settle_code = '2'
            <if test="startDate != null ">
                and date(settle.crte_time) &gt;= date(#{startDate})
            </if>
            <if test="endDate != null ">
                and date(settle.crte_time) &lt;= date(#{endDate})
            </if>
            group by a.bfc_id, b.name
            union
            select a.bfc_id id, b.name label, concat(a.bfc_id,'_3') prop, '优惠后总金额' labelBfc, 'true' showSummary,'2' toFixed
            from outpt_settle settle
            join outpt_cost a on settle.id = ifnull(a.settle_id, '') and settle.hosp_code = a.hosp_code
            join base_finance_classify b on a.bfc_id = b.id and a.hosp_code = b.hosp_code
            where settle.is_settle = '1' and a.settle_code = '2' and a.hosp_code = #{hospCode}
            <if test="startDate != null ">
                and date(settle.crte_time) &gt;= date(#{startDate})
            </if>
            <if test="endDate != null ">
                and date(settle.crte_time) &lt;= date(#{endDate})
            </if>
            group by a.bfc_id, b.name
        </if>


        <if test="type == null or type == '' ">
            union
        </if>

        <!-- 住院 -->
        <if test="type == null or type == '' or type == '2'.toString() ">
            select a.bfc_id id, b.name label, concat(a.bfc_id,'_1') prop, '总金额' labelBfc, 'true' showSummary,'2' toFixed
            from inpt_settle settle
            join inpt_cost a on settle.id = ifnull(a.settle_id, '') and settle.hosp_code = a.hosp_code
            join base_finance_classify b on a.bfc_id = b.id and a.hosp_code = b.hosp_code
            where settle.is_settle = '1' and a.settle_code = '2' and a.hosp_code = #{hospCode}
            <if test="startDate != null ">
                and date(settle.crte_time) &gt;= date(#{startDate})
            </if>
            <if test="endDate != null ">
                and date(settle.crte_time) &lt;= date(#{endDate})
            </if>
            group by a.bfc_id, b.name
            union
            select a.bfc_id id, b.name label, concat(a.bfc_id,'_2') prop, '优惠金额' labelBfc, 'true' showSummary,'2' toFixed
            from inpt_settle settle
            join inpt_cost a on settle.id = ifnull(a.settle_id, '') and settle.hosp_code = a.hosp_code
            join base_finance_classify b on a.bfc_id = b.id and a.hosp_code = b.hosp_code
            where settle.is_settle = '1' and a.hosp_code = #{hospCode}
            <if test="startDate != null ">
                and date(settle.crte_time) &gt;= date(#{startDate})
            </if>
            <if test="endDate != null ">
                and date(settle.crte_time) &lt;= date(#{endDate})
            </if>
            group by a.bfc_id, b.name
            union
            select a.bfc_id id, b.name label, concat(a.bfc_id,'_3') prop, '优惠后总金额' labelBfc, 'true' showSummary,'2' toFixed
            from inpt_settle settle
            join inpt_cost a on settle.id = ifnull(a.settle_id, '') and settle.hosp_code = a.hosp_code
            join base_finance_classify b on a.bfc_id = b.id and a.hosp_code = b.hosp_code
            where settle.is_settle = '1' and a.hosp_code = #{hospCode}
            <if test="startDate != null ">
                and date(settle.crte_time) &gt;= date(#{startDate})
            </if>
            <if test="endDate != null ">
                and date(settle.crte_time) &lt;= date(#{endDate})
            </if>
            group by a.bfc_id, b.name
        </if>

    </select>

    <!--查询财务动态列-->
    <select id="queryBfcGroup" resultType="java.util.Map">
        <!-- 挂号 -->
        <if test="type == null or type == '' or type == '3'.toString() ">
            select a.bfc_id id, b.name label, concat(a.bfc_id,'_1') prop, '总金额' labelBfc, 'true' showSummary,'2' toFixed
            from outpt_register_settle settle
            join outpt_register_detail a on settle.register_id = a.register_id and settle.hosp_code = a.hosp_code and settle.status_code = a.status_code
            join base_finance_classify b on a.bfc_id = b.id and a.hosp_code = b.hosp_code
            where a.hosp_code = #{hospCode}
            <if test="startDate != null ">
                and date(settle.crte_time) &gt;= date(#{startDate})
            </if>
            <if test="endDate != null ">
                and date(settle.crte_time) &lt;= date(#{endDate})
            </if>
            group by a.bfc_id, b.name
        </if>

        <if test="type == null or type == ''">
            union
        </if>

        <!-- 门诊 -->
        <if test="type == null or type == '' or type == '1'.toString() ">
            select a.bfc_id id, b.name label, concat(a.bfc_id,'_1') prop, '总金额' labelBfc, 'true' showSummary,'2' toFixed
            from outpt_settle settle
            join outpt_cost a on settle.id = ifnull(a.settle_id, '') and settle.hosp_code = a.hosp_code
            join base_finance_classify b on a.bfc_id = b.id and a.hosp_code = b.hosp_code
            where settle.is_settle = '1' and a.settle_code = '2' and a.hosp_code = #{hospCode}
            <if test="startDate != null ">
                and date(settle.crte_time) &gt;= date(#{startDate})
            </if>
            <if test="endDate != null ">
                and date(settle.crte_time) &lt;= date(#{endDate})
            </if>
            group by a.bfc_id, b.name
        </if>

        <if test="type == null or type == '' ">
            union
        </if>

        <!-- 住院 -->
        <if test="type == null or type == '' or type == '2'.toString() ">
            select a.bfc_id id, b.name label, concat(a.bfc_id,'_1') prop, '总金额' labelBfc, 'true' showSummary,'2' toFixed
            from inpt_settle settle
            join inpt_cost a on settle.id = ifnull(a.settle_id, '') and settle.hosp_code = a.hosp_code
            join base_finance_classify b on a.bfc_id = b.id and a.hosp_code = b.hosp_code
            where settle.is_settle = '1' and a.hosp_code = #{hospCode}
            <if test="startDate != null ">
                and date(settle.crte_time) &gt;= date(#{startDate})
            </if>
            <if test="endDate != null ">
                and date(settle.crte_time) &lt;= date(#{endDate})
            </if>
            group by a.bfc_id, b.name
        </if>

    </select>

    <!--财务收入统计 -->
    <select id="queryFinancialCome" resultType="java.util.LinkedHashMap">
        select a.dept_id id, b.name '-1', sum(a.reality_price) '-2', ${sqlStrInpt} from (
        <!-- 挂号 -->
        <if test="type == null or type == '' or type == '3'.toString() ">
            select register.dept_id,a.hosp_code, a.bfc_id, a.total_price, a.reality_price, a.preferential_price
            from outpt_register_settle settle
            join outpt_register register on settle.register_id = register.id and settle.hosp_code = register.hosp_code
            join outpt_register_detail a on settle.register_id = a.register_id and settle.hosp_code = a.hosp_code and settle.status_code = a.status_code
            join base_finance_classify b on a.bfc_id = b.id and a.hosp_code = b.hosp_code
            where a.hosp_code = #{hospCode}
            <if test="startDate != null ">
                and DATE_FORMAT(settle.crte_time,'%Y-%m-%d') &gt;= DATE_FORMAT(#{startDate},'%Y-%m-%d')
            </if>
            <if test="endDate != null ">
                and DATE_FORMAT(settle.crte_time,'%Y-%m-%d') &lt;= DATE_FORMAT(#{endDate},'%Y-%m-%d')
            </if>
        </if>

        <if test="type == null or type == ''">
            union all
        </if>

        <!-- 门诊 -->
        <if test="type == null or type == '' or type == '1'.toString() ">
            select a.dept_id,a.hosp_code, a.bfc_id, a.total_price, a.reality_price, a.preferential_price
            from outpt_settle settle
            join outpt_cost a on settle.id = ifnull(a.settle_id, '') and settle.hosp_code = a.hosp_code
            join base_finance_classify b on a.bfc_id = b.id and a.hosp_code = b.hosp_code
            where settle.is_settle = '1' and a.settle_code = '2' and a.hosp_code = #{hospCode}
            <if test="startDate != null ">
                and DATE_FORMAT(settle.crte_time,'%Y-%m-%d') &gt;= DATE_FORMAT(#{startDate},'%Y-%m-%d')
            </if>
            <if test="endDate != null ">
                and DATE_FORMAT(settle.crte_time,'%Y-%m-%d') &lt;= DATE_FORMAT(#{endDate},'%Y-%m-%d')
            </if>
        </if>
        <if test="type == null or type == '' ">
            union all
        </if>

        <!-- 住院 -->
        <if test="type == null or type == '' or type == '2'.toString() ">
            select ifnull(a.dept_id,a.source_dept_id) dept_id, a.hosp_code, a.bfc_id, a.total_price, ics.reality_price, a.preferential_price
            from inpt_settle settle
            join inpt_cost a on settle.id = ifnull(a.settle_id, '') and settle.hosp_code = a.hosp_code
            join base_finance_classify b on a.bfc_id = b.id and a.hosp_code = b.hosp_code
            join inpt_cost_settle ics on a.id=ics.cost_id
            where settle.is_settle = '1' and a.hosp_code = #{hospCode}
            <if test="startDate != null ">
                and DATE_FORMAT(settle.crte_time,'%Y-%m-%d') &gt;= DATE_FORMAT(#{startDate},'%Y-%m-%d')
            </if>
            <if test="endDate != null ">
                and DATE_FORMAT(settle.crte_time,'%Y-%m-%d') &lt;= DATE_FORMAT(#{endDate},'%Y-%m-%d')
            </if>
        </if>
        )a left join base_dept b on a.dept_id = b.id and a.hosp_code = b.hosp_code
        group by a.dept_id, b.name
    </select>

    <!-- 挂号计算表-->
    <sql id="getOutRegisterCost">
        select a.bfc_id, b.name, sum(a.reality_price) reality_price
        from outpt_register_settle settle
        join outpt_register_detail a on settle.register_id = ifnull(a.register_id, '') and settle.hosp_code = a.hosp_code and settle.status_code = a.status_code
        join base_finance_classify b on a.bfc_id = b.id and a.hosp_code = b.hosp_code
    </sql>

    <!-- 门诊计算表-->
    <sql id="getOutPtCost">
        select a.bfc_id, b.name, sum(a.reality_price) reality_price
        from outpt_settle settle
        join outpt_cost a on settle.id = ifnull(a.settle_id, '') and settle.hosp_code = a.hosp_code and a.settle_code = '2'
        join base_finance_classify b on a.bfc_id = b.id and a.hosp_code = b.hosp_code
    </sql>

    <sql id="getInptCost">
        select a.bfc_id, b.name, sum(a.reality_price) reality_price
        from inpt_settle settle
        join inpt_cost a on settle.id = ifnull(a.settle_id, '') and settle.hosp_code = a.hosp_code and a.settle_code = '2'
        join base_finance_classify b on a.bfc_id = b.id and a.hosp_code = b.hosp_code
    </sql>

    <select id="queryIncomeClassifyInfo" resultType="java.util.Map">
        select ab.bfc_id bfcId, ab.name bfcName, a.reality_price yardCurrentRealityPrice,b.reality_price yardMonthRealityPrice, c.reality_price yardYearRealityPrice,
        ifnull(concat(format((a.reality_price - b.reality_price)/b.reality_price*100,2),'%'),'0.00%') yardLinkCompare, concat(format((a.reality_price - c.reality_price)/c.reality_price*100,2),'%') yardSameCompare,
        d.reality_price outCurrentRealityPrice,e.reality_price outMonthRealityPrice, f.reality_price outYearRealityPrice,
        concat(format((d.reality_price - e.reality_price)/e.reality_price*100,2),'%') outLinkCompare, concat(format((d.reality_price - f.reality_price)/f.reality_price*100,2),'%') outSameCompare,
        g.reality_price inCurrentRealityPrice,h.reality_price inMonthRealityPrice, i.reality_price inYearRealityPrice,
        concat(format((g.reality_price - h.reality_price)/h.reality_price*100,2),'%') inLinkCompare, concat(format((g.reality_price - i.reality_price)/i.reality_price*100,2),'%') inSameCompare
        from(
        select a.bfc_id, a.name, sum(a.reality_price) reality_price
        from(
        <include refid="getOutRegisterCost"></include>
        where settle.hosp_code = #{hospCode} and ((date_format(settle.settle_time, '%Y-%m-%d') >= DATE_FORMAT( #{startDate}, '%Y-%m-%d' )
        and date_format(settle.settle_time, '%Y-%m-%d') &lt;= date_format(ifnull(#{endDate}, now()), '%Y-%m-%d')) or date_format(settle.settle_time,'%Y-%m') = date_format(DATE_SUB(#{startDate}, INTERVAL 1 MONTH),'%Y-%m') or
        (date_format(settle.settle_time, '%Y-%m-%d') >= DATE_FORMAT(date_sub(#{startDate}, interval 1 year), '%Y-%m-%d' )
        and date_format(settle.settle_time, '%Y-%m-%d') &lt;= DATE_FORMAT(date_sub(ifnull(#{endDate}, now()), interval 1 year), '%Y-%m-%d' )))
        group by a.bfc_id, b.name
        union all
        <include refid="getOutPtCost"></include>
        where settle.is_settle = '1' and settle.hosp_code = #{hospCode} and ((date_format(settle.settle_time, '%Y-%m-%d') >= DATE_FORMAT( #{startDate}, '%Y-%m-%d' )
        and date_format(settle.settle_time, '%Y-%m-%d') &lt;= date_format(ifnull(#{endDate}, now()), '%Y-%m-%d')) or date_format(settle.settle_time,'%Y-%m') = date_format(DATE_SUB(#{startDate}, INTERVAL 1 MONTH),'%Y-%m') or
        (date_format(settle.settle_time, '%Y-%m-%d') >= DATE_FORMAT(date_sub(#{startDate}, interval 1 year), '%Y-%m-%d' )
        and date_format(settle.settle_time, '%Y-%m-%d') &lt;= DATE_FORMAT(date_sub(ifnull(#{endDate}, now()), interval 1 year), '%Y-%m-%d' )))
        group by a.bfc_id, b.name
        union all
        <include refid="getInptCost"></include>
        where settle.is_settle = '1' and settle.hosp_code = #{hospCode} and (
        (date_format(settle.settle_time, '%Y-%m-%d') >= DATE_FORMAT( #{startDate}, '%Y-%m-%d' ) and date_format(settle.settle_time, '%Y-%m-%d') &lt;= date_format(ifnull(#{endDate}, now()), '%Y-%m-%d'))
        or date_format(settle.settle_time,'%Y-%m') = date_format(DATE_SUB(#{startDate}, INTERVAL 1 MONTH),'%Y-%m') or
        (date_format(settle.settle_time, '%Y-%m-%d') >= DATE_FORMAT(date_sub(#{startDate}, interval 1 year), '%Y-%m-%d' )
        and date_format(settle.settle_time, '%Y-%m-%d') &lt;= DATE_FORMAT(date_sub(ifnull(#{endDate}, now()), interval 1 year), '%Y-%m-%d' ))
        )
        group by a.bfc_id, b.name
        )a group by a.bfc_id, a.name
        )ab left join(
        select a.bfc_id, a.name, sum(a.reality_price) reality_price
        from(
        <include refid="getOutRegisterCost"></include>
        where settle.hosp_code = #{hospCode} and date_format(settle.settle_time, '%Y-%m-%d') >= DATE_FORMAT( #{startDate}, '%Y-%m-%d' )
        and date_format(settle.settle_time, '%Y-%m-%d') &lt;= date_format(ifnull(#{endDate}, now()), '%Y-%m-%d')
        group by a.bfc_id, b.name
        union all
        <include refid="getOutPtCost"></include>
        where settle.is_settle = '1' and settle.hosp_code = #{hospCode} and date_format(settle.settle_time, '%Y-%m-%d') >= DATE_FORMAT( #{startDate}, '%Y-%m-%d' )
        and date_format(settle.settle_time, '%Y-%m-%d') &lt;= date_format(ifnull(#{endDate}, now()), '%Y-%m-%d')
        group by a.bfc_id, b.name
        union all
        <include refid="getInptCost"></include>
        where settle.is_settle = '1' and settle.hosp_code = #{hospCode} and date_format(settle.settle_time, '%Y-%m-%d') >= DATE_FORMAT( #{startDate}, '%Y-%m-%d' )
        and date_format(settle.settle_time, '%Y-%m-%d') &lt;= date_format(ifnull(#{endDate}, now()), '%Y-%m-%d')
        group by a.bfc_id, b.name
        )a group by a.bfc_id, a.name
        )a on a.bfc_id = ab.bfc_id
        left join(
        select a.bfc_id, a.name, sum(a.reality_price) reality_price
        from(
        <include refid="getOutRegisterCost"></include>
        where settle.hosp_code = #{hospCode} and date_format(settle.settle_time,'%Y-%m') = date_format(DATE_SUB(#{startDate}, INTERVAL 1 MONTH),'%Y-%m')
        group by a.bfc_id, b.name
        union all
        <include refid="getOutPtCost"></include>
        where settle.is_settle = '1' and settle.hosp_code = #{hospCode} and date_format(settle.settle_time,'%Y-%m') = date_format(DATE_SUB(#{startDate}, INTERVAL 1 MONTH),'%Y-%m')
        group by a.bfc_id, b.name
        union all
        <include refid="getInptCost"></include>
        where settle.is_settle = '1' and settle.hosp_code = #{hospCode} and date_format(settle.settle_time,'%Y-%m') = date_format(DATE_SUB(#{startDate}, INTERVAL 1 MONTH),'%Y-%m')
        group by a.bfc_id, b.name
        )a group by a.bfc_id, a.name
        )b on ab.bfc_id = b.bfc_id
        left join(
        select a.bfc_id, a.name, sum(a.reality_price) reality_price
        from(
        <include refid="getOutRegisterCost"></include>
        where settle.hosp_code = #{hospCode} and date_format(settle.settle_time, '%Y-%m-%d') >= DATE_FORMAT(date_sub(#{startDate}, interval 1 year), '%Y-%m-%d' )
        and date_format(settle.settle_time, '%Y-%m-%d') &lt;= DATE_FORMAT(date_sub(ifnull(#{endDate}, now()), interval 1 year), '%Y-%m-%d' )
        group by a.bfc_id, b.name
        union all
        <include refid="getOutPtCost"></include>
        where settle.is_settle = '1' and settle.hosp_code = #{hospCode} and date_format(settle.settle_time, '%Y-%m-%d') >= DATE_FORMAT(date_sub(#{startDate}, interval 1 year), '%Y-%m-%d' )
        and date_format(settle.settle_time, '%Y-%m-%d') &lt;= DATE_FORMAT(date_sub(ifnull(#{endDate}, now()), interval 1 year), '%Y-%m-%d' )
        group by a.bfc_id, b.name
        union all
        <include refid="getInptCost"></include>
        where settle.is_settle = '1' and settle.hosp_code = #{hospCode} and date_format(settle.settle_time, '%Y-%m-%d') >= DATE_FORMAT(date_sub(#{startDate}, interval 1 year), '%Y-%m-%d' )
        and date_format(settle.settle_time, '%Y-%m-%d') &lt;= DATE_FORMAT(date_sub(ifnull(#{endDate}, now()), interval 1 year), '%Y-%m-%d' )
        group by a.bfc_id, b.name
        )a group by a.bfc_id, a.name
        )c on ab.bfc_id = c.bfc_id
        left join(
        select a.bfc_id, a.name, sum(a.reality_price) reality_price
        from(
        <include refid="getOutRegisterCost"></include>
        where settle.hosp_code = #{hospCode} and date_format(settle.settle_time, '%Y-%m-%d') >= DATE_FORMAT( #{startDate}, '%Y-%m-%d' )
        and date_format(settle.settle_time, '%Y-%m-%d') &lt;= date_format(ifnull(#{endDate}, now()), '%Y-%m-%d')
        group by a.bfc_id, b.name
        union all
        <include refid="getOutPtCost"></include>
        where settle.is_settle = '1' and settle.hosp_code = #{hospCode} and date_format(settle.settle_time, '%Y-%m-%d') >= DATE_FORMAT( #{startDate}, '%Y-%m-%d' )
        and date_format(settle.settle_time, '%Y-%m-%d') &lt;= date_format(ifnull(#{endDate}, now()), '%Y-%m-%d')
        group by a.bfc_id, b.name
        )a group by a.bfc_id, a.name
        )d on ab.bfc_id = d.bfc_id
        left join(
        select a.bfc_id, a.name, sum(a.reality_price) reality_price
        from(
        <include refid="getOutRegisterCost"></include>
        where settle.hosp_code = #{hospCode} and date_format(settle.settle_time,'%Y-%m') = date_format(DATE_SUB(#{startDate}, INTERVAL 1 MONTH),'%Y-%m')
        group by a.bfc_id, b.name
        union all
        <include refid="getOutPtCost"></include>
        where settle.is_settle = '1' and settle.hosp_code = #{hospCode} and date_format(settle.settle_time,'%Y-%m') = date_format(DATE_SUB(#{startDate}, INTERVAL 1 MONTH),'%Y-%m')
        group by a.bfc_id, b.name
        )a group by a.bfc_id, a.name
        )e on ab.bfc_id = e.bfc_id
        left join(
        select a.bfc_id, a.name, sum(a.reality_price) reality_price
        from(
        <include refid="getOutRegisterCost"></include>
        where settle.hosp_code = #{hospCode} and date_format(settle.settle_time, '%Y-%m-%d') >= DATE_FORMAT(date_sub(#{startDate}, interval 1 year), '%Y-%m-%d' )
        and date_format(settle.settle_time, '%Y-%m-%d') &lt;= DATE_FORMAT(date_sub(ifnull(#{endDate}, now()), interval 1 year), '%Y-%m-%d' )
        group by a.bfc_id, b.name
        union all
        <include refid="getOutPtCost"></include>
        where settle.is_settle = '1' and settle.hosp_code = #{hospCode} and date_format(settle.settle_time, '%Y-%m-%d') >= DATE_FORMAT(date_sub(#{startDate}, interval 1 year), '%Y-%m-%d' )
        and date_format(settle.settle_time, '%Y-%m-%d') &lt;= DATE_FORMAT(date_sub(ifnull(#{endDate}, now()), interval 1 year), '%Y-%m-%d' )
        group by a.bfc_id, b.name
        )a group by a.bfc_id, a.name
        )f on ab.bfc_id = f.bfc_id
        left join(
        <include refid="getInptCost"></include>
        where settle.is_settle = '1' and settle.hosp_code = #{hospCode} and date_format(settle.settle_time, '%Y-%m-%d') >= DATE_FORMAT( #{startDate}, '%Y-%m-%d' )
        and date_format(settle.settle_time, '%Y-%m-%d') &lt;= date_format(ifnull(#{endDate}, now()), '%Y-%m-%d')
        group by a.bfc_id, b.name
        )g on ab.bfc_id = g.bfc_id
        left join(
        <include refid="getInptCost"></include>
        where settle.is_settle = '1' and settle.hosp_code = #{hospCode} and date_format(settle.settle_time,'%Y-%m') = date_format(DATE_SUB(#{startDate}, INTERVAL 1 MONTH),'%Y-%m')
        group by a.bfc_id, b.name
        )h on ab.bfc_id = h.bfc_id
        left join(
        <include refid="getInptCost"></include>
        where settle.is_settle = '1' and settle.hosp_code = #{hospCode} and date_format(settle.settle_time, '%Y-%m-%d') >= DATE_FORMAT(date_sub(#{startDate}, interval 1 year), '%Y-%m-%d' )
        and date_format(settle.settle_time, '%Y-%m-%d') &lt;= DATE_FORMAT(date_sub(ifnull(#{endDate}, now()), interval 1 year), '%Y-%m-%d' )
        group by a.bfc_id, b.name
        )i on ab.bfc_id = i.bfc_id
    </select>

    <!-- 按计费大类类别统计 挂号计算表-->
    <sql id="getOutRegisterCostBig">
        select b.up_code,sum(a.reality_price) reality_price
        from outpt_register_settle settle
        join outpt_register_detail a on settle.register_id = ifnull(a.register_id, '') and settle.hosp_code = a.hosp_code and settle.status_code = a.status_code
        join base_finance_classify b on a.bfc_id = b.id and a.hosp_code = b.hosp_code
    </sql>

    <!-- 按计费大类类别统计 门诊计算表-->
    <sql id="getOutPtCostBig">
        select b.up_code, sum(a.reality_price) reality_price
        from outpt_settle settle
        join outpt_cost a on settle.id = ifnull(a.settle_id, '') and settle.hosp_code = a.hosp_code and a.settle_code = '2'
        join base_finance_classify b on a.bfc_id = b.id and a.hosp_code = b.hosp_code
    </sql>

    <!-- 按计费大类类别统计 住院计算表-->
    <sql id="getInptCostBig">
        select b.up_code, sum(a.reality_price) reality_price
        from inpt_settle settle
        join inpt_cost a on settle.id = ifnull(a.settle_id, '') and settle.hosp_code = a.hosp_code and a.settle_code = '2'
        join base_finance_classify b on a.bfc_id = b.id and a.hosp_code = b.hosp_code
    </sql>

    <!-- //按计费类别大类统计 -->
    <select id="queryIncomeClassifyInfoBig" resultType="java.util.Map">
        select ab.up_code bfcId, finance.name bfcName, a.reality_price yardCurrentRealityPrice,b.reality_price yardMonthRealityPrice, c.reality_price yardYearRealityPrice,
        ifnull(concat(format((a.reality_price - b.reality_price)/b.reality_price*100,2),'%'),'0.00%') yardLinkCompare, concat(format((a.reality_price - c.reality_price)/c.reality_price*100,2),'%') yardSameCompare,
        d.reality_price outCurrentRealityPrice,e.reality_price outMonthRealityPrice, f.reality_price outYearRealityPrice,
        concat(format((d.reality_price - e.reality_price)/e.reality_price*100,2),'%') outLinkCompare, concat(format((d.reality_price - f.reality_price)/f.reality_price*100,2),'%') outSameCompare,
        g.reality_price inCurrentRealityPrice,h.reality_price inMonthRealityPrice, i.reality_price inYearRealityPrice,
        concat(format((g.reality_price - h.reality_price)/h.reality_price*100,2),'%') inLinkCompare, concat(format((g.reality_price - i.reality_price)/i.reality_price*100,2),'%') inSameCompare
        from(
        select a.up_code, sum(a.reality_price) reality_price
        from(
        <include refid="getOutRegisterCostBig"></include>
        where settle.hosp_code = #{hospCode} and ((date_format(settle.settle_time, '%Y-%m-%d') >= DATE_FORMAT( #{startDate}, '%Y-%m-%d' )
        and date_format(settle.settle_time, '%Y-%m-%d') &lt;= date_format(ifnull(#{endDate}, now()), '%Y-%m-%d')) or date_format(settle.settle_time,'%Y-%m') = date_format(DATE_SUB(#{startDate}, INTERVAL 1 MONTH),'%Y-%m') or
        (date_format(settle.settle_time, '%Y-%m-%d') >= DATE_FORMAT(date_sub(#{startDate}, interval 1 year), '%Y-%m-%d' )
        and date_format(settle.settle_time, '%Y-%m-%d') &lt;= DATE_FORMAT(date_sub(ifnull(#{endDate}, now()), interval 1 year), '%Y-%m-%d' )))
        group by b.up_code
        union all
        <include refid="getOutPtCostBig"></include>
        where settle.is_settle = '1' and settle.hosp_code = #{hospCode} and ((date_format(settle.settle_time, '%Y-%m-%d') >= DATE_FORMAT( #{startDate}, '%Y-%m-%d' )
        and date_format(settle.settle_time, '%Y-%m-%d') &lt;= date_format(ifnull(#{endDate}, now()), '%Y-%m-%d')) or date_format(settle.settle_time,'%Y-%m') = date_format(DATE_SUB(#{startDate}, INTERVAL 1 MONTH),'%Y-%m') or
        (date_format(settle.settle_time, '%Y-%m-%d') >= DATE_FORMAT(date_sub(#{startDate}, interval 1 year), '%Y-%m-%d' )
        and date_format(settle.settle_time, '%Y-%m-%d') &lt;= DATE_FORMAT(date_sub(ifnull(#{endDate}, now()), interval 1 year), '%Y-%m-%d' )))
        group by b.up_code
        union all
        <include refid="getInptCostBig"></include>
        where settle.is_settle = '1' and settle.hosp_code = #{hospCode} and (
        (date_format(settle.settle_time, '%Y-%m-%d') >= DATE_FORMAT( #{startDate}, '%Y-%m-%d' ) and date_format(settle.settle_time, '%Y-%m-%d') &lt;= date_format(ifnull(#{endDate}, now()), '%Y-%m-%d'))
        or date_format(settle.settle_time,'%Y-%m') = date_format(DATE_SUB(#{startDate}, INTERVAL 1 MONTH),'%Y-%m') or
        (date_format(settle.settle_time, '%Y-%m-%d') >= DATE_FORMAT(date_sub(#{startDate}, interval 1 year), '%Y-%m-%d' )
        and date_format(settle.settle_time, '%Y-%m-%d') &lt;= DATE_FORMAT(date_sub(ifnull(#{endDate}, now()), interval 1 year), '%Y-%m-%d' ))
        )
        group by b.up_code
        )a group by a.up_code
        )ab left join(
        select a.up_code, sum(a.reality_price) reality_price
        from(
        <include refid="getOutRegisterCostBig"></include>
        where settle.hosp_code = #{hospCode} and date_format(settle.settle_time, '%Y-%m-%d') >= DATE_FORMAT( #{startDate}, '%Y-%m-%d' )
        and date_format(settle.settle_time, '%Y-%m-%d') &lt;= date_format(ifnull(#{endDate}, now()), '%Y-%m-%d')
        group by b.up_code
        union all
        <include refid="getOutPtCostBig"></include>
        where settle.is_settle = '1' and settle.hosp_code = #{hospCode} and date_format(settle.settle_time, '%Y-%m-%d') >= DATE_FORMAT( #{startDate}, '%Y-%m-%d' )
        and date_format(settle.settle_time, '%Y-%m-%d') &lt;= date_format(ifnull(#{endDate}, now()), '%Y-%m-%d')
        group by b.up_code
        union all
        <include refid="getInptCostBig"></include>
        where settle.is_settle = '1' and settle.hosp_code = #{hospCode} and date_format(settle.settle_time, '%Y-%m-%d') >= DATE_FORMAT( #{startDate}, '%Y-%m-%d' )
        and date_format(settle.settle_time, '%Y-%m-%d') &lt;= date_format(ifnull(#{endDate}, now()), '%Y-%m-%d')
        group by b.up_code
        )a group by a.up_code
        )a on a.up_code = ab.up_code
        left join(
        select a.up_code, sum(a.reality_price) reality_price
        from(
        <include refid="getOutRegisterCostBig"></include>
        where settle.hosp_code = #{hospCode} and date_format(settle.settle_time,'%Y-%m') = date_format(DATE_SUB(#{startDate}, INTERVAL 1 MONTH),'%Y-%m')
        group by b.up_code
        union all
        <include refid="getOutPtCostBig"></include>
        where settle.is_settle = '1' and settle.hosp_code = #{hospCode} and date_format(settle.settle_time,'%Y-%m') = date_format(DATE_SUB(#{startDate}, INTERVAL 1 MONTH),'%Y-%m')
        group by b.up_code
        union all
        <include refid="getInptCostBig"></include>
        where settle.is_settle = '1' and settle.hosp_code = #{hospCode} and date_format(settle.settle_time,'%Y-%m') = date_format(DATE_SUB(#{startDate}, INTERVAL 1 MONTH),'%Y-%m')
        group by b.up_code
        )a group by a.up_code
        )b on ab.up_code = b.up_code
        left join(
        select a.up_code, sum(a.reality_price) reality_price
        from(
        <include refid="getOutRegisterCostBig"></include>
        where settle.hosp_code = #{hospCode} and date_format(settle.settle_time, '%Y-%m-%d') >= DATE_FORMAT(date_sub(#{startDate}, interval 1 year), '%Y-%m-%d' )
        and date_format(settle.settle_time, '%Y-%m-%d') &lt;= DATE_FORMAT(date_sub(ifnull(#{endDate}, now()), interval 1 year), '%Y-%m-%d' )
        group by b.up_code
        union all
        <include refid="getOutPtCostBig"></include>
        where settle.is_settle = '1' and settle.hosp_code = #{hospCode} and date_format(settle.settle_time, '%Y-%m-%d') >= DATE_FORMAT(date_sub(#{startDate}, interval 1 year), '%Y-%m-%d' )
        and date_format(settle.settle_time, '%Y-%m-%d') &lt;= DATE_FORMAT(date_sub(ifnull(#{endDate}, now()), interval 1 year), '%Y-%m-%d' )
        group by b.up_code
        union all
        <include refid="getInptCostBig"></include>
        where settle.is_settle = '1' and settle.hosp_code = #{hospCode} and date_format(settle.settle_time, '%Y-%m-%d') >= DATE_FORMAT(date_sub(#{startDate}, interval 1 year), '%Y-%m-%d' )
        and date_format(settle.settle_time, '%Y-%m-%d') &lt;= DATE_FORMAT(date_sub(ifnull(#{endDate}, now()), interval 1 year), '%Y-%m-%d' )
        group by b.up_code
        )a group by a.up_code
        )c on ab.up_code = c.up_code
        left join(
        select a.up_code, sum(a.reality_price) reality_price
        from (
        <include refid="getOutRegisterCostBig"></include>
        where settle.hosp_code = #{hospCode} and date_format(settle.settle_time, '%Y-%m-%d') >= DATE_FORMAT( #{startDate}, '%Y-%m-%d' )
        and date_format(settle.settle_time, '%Y-%m-%d') &lt;= date_format(ifnull(#{endDate}, now()), '%Y-%m-%d')
        group by b.up_code
        union all
        <include refid="getOutPtCostBig"></include>
        where settle.is_settle = '1' and settle.hosp_code = #{hospCode} and date_format(settle.settle_time, '%Y-%m-%d') >= DATE_FORMAT( #{startDate}, '%Y-%m-%d' )
        and date_format(settle.settle_time, '%Y-%m-%d') &lt;= date_format(ifnull(#{endDate}, now()), '%Y-%m-%d')
        group by b.up_code
        )a group by a.up_code
        )d on ab.up_code = d.up_code
        left join(
        select a.up_code, sum(a.reality_price) reality_price
        from (
        <include refid="getOutRegisterCostBig"></include>
        where settle.hosp_code = #{hospCode} and date_format(settle.settle_time,'%Y-%m') = date_format(DATE_SUB(#{startDate}, INTERVAL 1 MONTH),'%Y-%m')
        group by b.up_code
        union all
        <include refid="getOutPtCostBig"></include>
        where settle.is_settle = '1' and settle.hosp_code = #{hospCode} and date_format(settle.settle_time,'%Y-%m') = date_format(DATE_SUB(#{startDate}, INTERVAL 1 MONTH),'%Y-%m')
        group by b.up_code
        )a group by a.up_code
        )e on ab.up_code = e.up_code
        left join(
        select a.up_code, sum(a.reality_price) reality_price
        from (
        <include refid="getOutRegisterCostBig"></include>
        where settle.hosp_code = #{hospCode} and date_format(settle.settle_time, '%Y-%m-%d') >= DATE_FORMAT(date_sub(#{startDate}, interval 1 year), '%Y-%m-%d' )
        and date_format(settle.settle_time, '%Y-%m-%d') &lt;= DATE_FORMAT(date_sub(ifnull(#{endDate}, now()), interval 1 year), '%Y-%m-%d' )
        group by b.up_code
        union all
        <include refid="getOutPtCostBig"></include>
        where settle.is_settle = '1' and settle.hosp_code = #{hospCode} and date_format(settle.settle_time, '%Y-%m-%d') >= DATE_FORMAT(date_sub(#{startDate}, interval 1 year), '%Y-%m-%d' )
        and date_format(settle.settle_time, '%Y-%m-%d') &lt;= DATE_FORMAT(date_sub(ifnull(#{endDate}, now()), interval 1 year), '%Y-%m-%d' )
        group by b.up_code
        )a group by a.up_code
        )f on ab.up_code = f.up_code
        left join(
        <include refid="getInptCostBig"></include>
        where settle.is_settle = '1' and settle.hosp_code = #{hospCode} and date_format(settle.settle_time, '%Y-%m-%d') >= DATE_FORMAT( #{startDate}, '%Y-%m-%d' )
        and date_format(settle.settle_time, '%Y-%m-%d') &lt;= date_format(ifnull(#{endDate}, now()), '%Y-%m-%d')
        group by b.up_code
        )g on ab.up_code = g.up_code
        left join(
        <include refid="getInptCostBig"></include>
        where settle.is_settle = '1' and settle.hosp_code = #{hospCode} and date_format(settle.settle_time,'%Y-%m') = date_format(DATE_SUB(#{startDate}, INTERVAL 1 MONTH),'%Y-%m')
        group by b.up_code
        )h on ab.up_code = h.up_code
        left join(
        <include refid="getInptCostBig"></include>
        where settle.is_settle = '1' and settle.hosp_code = #{hospCode} and date_format(settle.settle_time, '%Y-%m-%d') >= DATE_FORMAT(date_sub(#{startDate}, interval 1 year), '%Y-%m-%d' )
        and date_format(settle.settle_time, '%Y-%m-%d') &lt;= DATE_FORMAT(date_sub(ifnull(#{endDate}, now()), interval 1 year), '%Y-%m-%d' )
        group by b.up_code
        )i on ab.up_code = i.up_code
        join base_finance_classify finance on finance.code = ab.up_code and finance.hosp_code = #{hospCode}
    </select>


    <select id="queryChargPatirntCostLedgerHeader" resultType="map">
        select * from (
            select a.bfc_id,a.hosp_code from outpt_cost a
            where a.status_code = '2'
            union
            select b.bfc_id,a.hosp_code from outpt_register_settle a
            join outpt_register_detail b on a.register_id = b.register_id and a.status_code = b.status_code
            union
            select a.bfc_id,a.hosp_code from inpt_cost a
            where a.status_code = '2'
        )a join base_finance_classify b on a.bfc_id = b.id and a.hosp_code = b.hosp_code
    </select>

    <select id="queryChargPatirntCostLedger" resultType="map">
        SELECT t1.settleTime, t2.totalPrice, t2.selfPrice, t2.miPrice, t2.apOffsetPrice, t1.XJprice, t1.POSprice,
        t1.ZPprice, t1.ZZprice, t1.WXprice, t1.ZFBprice, t2.truncPrice,t3.name,t3.crteName ${sql1}
        FROM (
        SELECT DATE_FORMAT(ss.settle_time,'%Y-%m-%d') settleTime,ss.visit_id,ss.name,
        IFNULL(SUM(CASE ss.pay_code WHEN '1' THEN ss.price ELSE 0 END ),0) as XJprice,
        IFNULL(SUM(CASE ss.pay_code WHEN '2' THEN ss.price ELSE 0 END ),0) as POSprice,
        IFNULL(SUM(CASE ss.pay_code WHEN '3' THEN ss.price ELSE 0 END ),0) as ZPprice,
        IFNULL(SUM(CASE ss.pay_code WHEN '4' THEN ss.price ELSE 0 END ),0) as ZZprice,
        IFNULL(SUM(CASE ss.pay_code WHEN '5' THEN ss.price ELSE 0 END ),0) as WXprice,
        IFNULL(SUM(CASE ss.pay_code WHEN '6' THEN ss.price ELSE 0 END ),0) as ZFBprice
        FROM (
        select 'MZ' sxtj, DATE_FORMAT(a.settle_time,'%Y-%m-%d') as settle_time, reality_price,
        a.mi_price mi_price, b.pay_code, b.price, a.self_price, 0 ap_offset_price, a.visit_id,c.name
        from outpt_settle a
        left join outpt_pay b on a.id = b.settle_id and a.hosp_code = b.hosp_code
        left join outpt_visit c on a.visit_id = c.id and a.hosp_code = c.hosp_code
        where a.is_settle = '1'
        <if test="startDate != null and startDate != '' ">
            and DATE(a.settle_time) &gt;= DATE_FORMAT(#{startDate},'%Y-%m-%d')
        </if>
        <if test="endDate != null and endDate != '' ">
            and DATE(a.settle_time) &lt;= DATE_FORMAT(#{endDate},'%Y-%m-%d')
        </if>
        UNION ALL
        select 'ZY' sxtj, DATE_FORMAT(a.settle_time,'%Y-%m-%d') as settle_time, reality_price,
        a.mi_price mi_price, b.pay_code, b.price, a.self_price, a.ap_offset_price, a.visit_id,c.name
        from inpt_settle a
        left join inpt_pay b on a.id = b.settle_id and a.hosp_code = b.hosp_code
        left join inpt_visit c on a.visit_id = c.id and a.hosp_code = c.hosp_code
        where a.is_settle = '1'
        <if test="startDate != null and startDate != '' ">
            and DATE(a.settle_time) &gt;= DATE_FORMAT(#{startDate},'%Y-%m-%d')
        </if>
        <if test="endDate != null and endDate != '' ">
            and DATE(a.settle_time) &lt;= DATE_FORMAT(#{endDate},'%Y-%m-%d')
        </if>

        UNION ALL
        select 'GH' sxtj, DATE_FORMAT(a.crte_time,'%Y-%m-%d') as settle_time, a.reality_price,
        null mi_price, b.pay_code, b.price, a.reality_price self_price, 0 ap_offset_price, c.visit_id,d.name
        from outpt_register_settle a
        join outpt_register_detail c on a.register_id = c.register_id and a.hosp_code = c.hosp_code and a.status_code = c.status_code
        left join outpt_register_pay b on c.visit_id = b.visit_id and c.hosp_code = b.hosp_code
        left join outpt_visit d on a.register_id = d.register_id and a.hosp_code = d.hosp_code
        where 1=1
        <if test="startDate != null and startDate != '' ">
            and DATE(a.crte_time) &gt;= DATE_FORMAT(#{startDate},'%Y-%m-%d')
        </if>
        <if test="endDate != null and endDate != '' ">
            and DATE(a.crte_time) &lt;= DATE_FORMAT(#{endDate},'%Y-%m-%d')
        </if>
        ) ss GROUP BY DATE_FORMAT(ss.settle_time,'%Y-%m-%d'), ss.visit_id,ss.name
        ) t1 join (
        SELECT DATE_FORMAT(ss.settle_time,'%Y-%m-%d') settleTime,
        sum(reality_price) totalPrice, sum(mi_price) miPrice, sum(self_price) selfPrice, sum(ap_offset_price)
        apOffsetPrice, sum(trunc_price) truncPrice, ss.visit_id,ss.name
        FROM (
        select 'MZ' sxtj, DATE_FORMAT(a.settle_time,'%Y-%m-%d') as settle_time, reality_price,
        a.mi_price mi_price, a.self_price, 0 ap_offset_price, a.trunc_price, a.visit_id,b.name
        from outpt_settle a
        left join outpt_visit b on a.visit_id = b.id and a.hosp_code = b.hosp_code
        where a.is_settle = '1'
        <if test="startDate != null and startDate != '' ">
            and DATE(a.settle_time) &gt;= DATE_FORMAT(#{startDate},'%Y-%m-%d')
        </if>
        <if test="endDate != null and endDate != '' ">
            and DATE(a.settle_time) &lt;= DATE_FORMAT(#{endDate},'%Y-%m-%d')
        </if>
        UNION ALL
        select 'ZY' sxtj, DATE_FORMAT(a.settle_time,'%Y-%m-%d') as settle_time, reality_price,
        a.mi_price mi_price, a.self_price, a.ap_offset_price, a.trunc_price, a.visit_id,b.name
        from inpt_settle a
        left join inpt_visit b on a.visit_id = b.id and a.hosp_code = b.hosp_code
        where a.is_settle = '1'
        <if test="startDate != null and startDate != '' ">
            and DATE(a.settle_time) &gt;= DATE_FORMAT(#{startDate},'%Y-%m-%d')
        </if>
        <if test="endDate != null and endDate != '' ">
            and DATE(a.settle_time) &lt;= DATE_FORMAT(#{endDate},'%Y-%m-%d')
        </if>
        UNION ALL
        select 'GH' sxtj, DATE_FORMAT(a.crte_time,'%Y-%m-%d') as settle_time, a.reality_price,
        null mi_price,a.reality_price self_price, 0 ap_offset_price, 0 trunc_price, c.visit_id,d.name
        from outpt_register_settle a
        join outpt_register_detail c on a.register_id = c.register_id and a.hosp_code = c.hosp_code and a.status_code = c.status_code
        left join outpt_visit d on a.register_id = d.register_id and a.hosp_code = d.hosp_code
        where 1=1
        <if test="startDate != null and startDate != '' ">
            and DATE(a.crte_time) &gt;= DATE_FORMAT(#{startDate},'%Y-%m-%d')
        </if>
        <if test="endDate != null and endDate != '' ">
            and DATE(a.crte_time) &lt;= DATE_FORMAT(#{endDate},'%Y-%m-%d')
        </if>
        ) ss GROUP BY DATE_FORMAT(ss.settle_time,'%Y-%m-%d'), ss.visit_id,ss.name
        )t2 on t1.settleTime = t2.settleTime and t1.visit_id = t2.visit_id
        join (
        SELECT DATE_FORMAT(ss.settle_time,'%Y-%m-%d') settleTime,
        ss.visit_id,ss.name,ss.crte_name as crteName ${sql2}
        FROM (
        select 'MZ' sxtj, DATE_FORMAT(a.settle_time,'%Y-%m-%d') as settle_time, b.reality_price,
        a.crte_id, a.crte_name, b.bfc_id, a.hosp_code, a.visit_id,c.name
        from outpt_settle a
        join outpt_cost b on a.id = b.settle_id and a.hosp_code = b.hosp_code
        left join outpt_visit c on a.visit_id = c.id and a.hosp_code = c.hosp_code
        where a.is_settle = '1'
        <if test="startDate != null and startDate != '' ">
            and DATE(a.settle_time) &gt;= DATE_FORMAT(#{startDate},'%Y-%m-%d')
        </if>
        <if test="endDate != null and endDate != '' ">
            and DATE(a.settle_time) &lt;= DATE_FORMAT(#{endDate},'%Y-%m-%d')
        </if>
        UNION ALL
        select 'ZY' sxtj, DATE_FORMAT(a.settle_time,'%Y-%m-%d') as settle_time, ics.reality_price,
        a.crte_id, a.crte_name, b.bfc_id , a.hosp_code, a.visit_id,c.name
        from inpt_settle a
        join inpt_cost b on a.id = b.settle_id and a.hosp_code = b.hosp_code
        left join inpt_visit c on a.visit_id = c.id and a.hosp_code = c.hosp_code
        left join inpt_cost_settle ics on b.id=ics.cost_id
        where a.is_settle = '1'
        <if test="startDate != null and startDate != '' ">
            and DATE(a.settle_time) &gt;= DATE_FORMAT(#{startDate},'%Y-%m-%d')
        </if>
        <if test="endDate != null and endDate != '' ">
            and DATE(a.settle_time) &lt;= DATE_FORMAT(#{endDate},'%Y-%m-%d')
        </if>
        UNION ALL
        select 'GH' sxtj, DATE_FORMAT(a.crte_time,'%Y-%m-%d') as settle_time, a.reality_price,
        a.crte_id, a.crte_name, b.bfc_id, a.hosp_code, b.visit_id,c.name
        from outpt_register_settle a
        join outpt_register_detail b on a.register_id = b.register_id and a.hosp_code = b.hosp_code and a.status_code = c.status_code
        left join outpt_visit c on a.register_id = c.register_id and a.hosp_code = c.hosp_code
        where 1=1
        <if test="startDate != null and startDate != '' ">
            and DATE(a.crte_time) &gt;= DATE_FORMAT(#{startDate},'%Y-%m-%d')
        </if>
        <if test="endDate != null and endDate != '' ">
            and DATE(a.crte_time) &lt;= DATE_FORMAT(#{endDate},'%Y-%m-%d')
        </if>

        ) ss join base_finance_classify b on ss.bfc_id = b.id and ss.hosp_code = b.hosp_code
        GROUP BY DATE_FORMAT(ss.settle_time,'%Y-%m-%d'),  ss.visit_id,ss.name,ss.crte_name
        )t3 on t1.settleTime = t3.settleTime and t1.visit_id = t3.visit_id
    </select>
    <select id="queryItemName" resultType="cn.hsa.module.inpt.doctor.dto.InptCostDTO" parameterType="cn.hsa.module.inpt.doctor.dto.InptCostDTO">
        select item_name from
        (select item_name from inpt_cost
        union
        select item_name from outpt_cost
        )t
        where 1=1
        <if test="keyword != null and keyword != ''">
            and item_name like concat('%',#{keyword},'%')
        </if>
    </select>

    <!--门诊收费员收入统计-按结算时间-->
    <select id="queryCollectorInComeStaMZ" resultType="java.util.Map">
        select
        sum(t.totalPrice) as totalPrice,
        sum(t.actualPrice) as actualPrice,
        sum(t.selfPrice) as selfPrice,
        sum(t.insureTotalPrice) as insureTotalPrice,
        sum(t.truncPrice) as truncPrice,
        max(t.crteName) as crteName

        from (
        select
        a.total_price as totalPrice, /**总费用**/
        a.actual_price as actualPrice, /**实收金额**/
        a.self_price as selfPrice, /**个人支付**/
        a.mi_price as insureTotalPrice,
        a.trunc_price as truncPrice,
        a.crte_name as crteName,
        a.crte_id as crteId
        from outpt_settle a
        where a.hosp_code = #{hospCode} and a.is_settle = '1'
        /*开始日期*/
        <if test="startDate != null">
            and date(a.settle_time) &gt;=date(#{startDate})
        </if>
        /*结束日期*/
        <if test="endDate != null">
            and date(a.settle_time) &lt;= date(#{endDate})
        </if>

        union all

        select
        a.total_price as totalPrice, /**总费用**/
        a.reality_price as actualPrice, /**实收金额**/
        a.reality_price as selfPrice, /**个人支付**/
        0 as insureTotalPrice,
        0 as truncPrice,
        a.crte_name as crteName,
        a.crte_id as crteId

        from outpt_register_detail a
        where a.hosp_code = #{hospCode}
        /*开始日期*/
        <if test="startDate != null">
            and date(a.crte_time) &gt;=date(#{startDate})
        </if>
        /*结束日期*/
        <if test="endDate != null">
            and date(a.crte_time) &lt;= date(#{endDate})
        </if>
        ) t group by t.crteId
    </select>
    <!--门诊收费员收入明细统计(缴款时间)-->
    <select id="queryCollectorInComeStaDetailMZ" resultType="java.util.Map">
        select
        (sum(a.total_price) ) as totalPrice,            /**应结费用**/
        sum(a.back_total_price) AS backTotalPrice,
        (sum(a.reality_total_price) )as actualPrice,             /**实收金额**/
        sum(a.insure_total_price) AS insureTotalPrice,         /**合同单位支付金额**/
        sum(a.preferential_total_price) as preferentialTotalPrice,   /**优惠金额**/
        sum(a.round_total_price) as truncPrice,     /**舍入金额**/
        max(a.crte_name) as crteName
        from outin_daily a
        where a.hosp_code = #{hospCode} and a.type_code in ('1', '0')
        <if test="startDate != null">
            and date(a.end_time) &gt;=date(#{startDate})
        </if>
        <if test="endDate != null">
            and date(a.end_time) &lt;= date(#{endDate})
        </if>
        group by a.crte_id
    </select>
    <!--门诊领药统计查询-->
    <select id="queryOutMedicationGet" resultType="java.util.LinkedHashMap">
        select A.* from (
            select
            max(a.item_name) as itemName,
            sum(a.num) as num,
            sum(a.split_num) as splitNum,
            sum(a.total_price) as totalPrice,
            max(a.price) as price,
            max(a.split_price) as splitPrice,
            case max(a.item_code) when '1' then max(bd.spec) when '2' then max(bm.spec) end spec,
            case max(a.item_code) when '1' then max(bd.code) when '2' then max(bm.code) end code,
            max(a.unit_code) as unitCode,
            max(a.split_unit_code) as splitUnitCode,
            max(date(b.crte_time)) as creTime,
            (select name from base_dept where id = b.dept_id) as deptName
            from phar_out_distribute_all_detail a
            left join phar_out_distribute b on a.distribute_id = b.id
            left join base_drug bd on a.item_id = bd.id and a.hosp_code = bd.hosp_code and a.item_code = '1'
            left join base_material bm on a.item_id = bm.id and a.hosp_code = bm.hosp_code and a.item_code = '2'
            where a.hosp_code = #{hospCode}
            <if test="deptId != null and deptId != ''">
                and b.dept_id = #{deptId}
            </if>
            /*开始日期*/
            <if test="startTime != null">
                and date(a.crte_time) &gt;= #{startTime}
            </if>
            /*结束日期*/
            <if test="endTime != null">
                and date(a.crte_time) &lt;= #{endTime}
            </if>
            <if test="keyword != null and keyword != ''">
                and (
                a.item_name like concat('%',#{keyword},'%')
                or bd.usual_name like concat('%',#{keyword},'%')
                or bd.good_pym like concat('%',#{keyword},'%')
                or bd.good_wbm like concat('%',#{keyword},'%')
                or bd.usual_pym like concat('%',#{keyword},'%')
                or bd.usual_wbm like concat('%',#{keyword},'%')
                )
            </if>
            group by b.dept_id, a.item_id
            ) A where A.splitNum != 0
    </select>

    <!--在院病人实况查询（在院/出院） 20210805 liuliyun-->
    <select id="queryInPatientDaily" resultType="cn.hsa.module.inpt.doctor.dto.InptVisitDTO" parameterType="cn.hsa.module.inpt.doctor.dto.InptVisitDTO">
        SELECT
        a.id,
        a.hosp_code,
        a.profile_id,
        a.in_profile,
        a.in_no,
        a.name,
        a.gender_code,
        a.age,
        a.age_unit_code,
        a.birthday,
        a.nation_code,
        a.cert_code,
        a.cert_no,
        a.marry_code,
        a.phone,
        a.address,
        a.preferential_type_id,
        a.patient_code,
        a.receive_hosp_name,
        a.bed_id,
        a.bed_name,
        a.nursing_code,
        a.diet_type,
        a.Illness_code,
        a.status_code,
        a.in_ward_id,
        a.in_dept_id,
        a.in_dept_name,
        a.in_time,
        a.zz_doctor_id,
        a.zz_doctor_name,
        a.jz_doctor_id,
        a.jz_doctor_name,
        a.zg_doctor_id,
        a.zg_doctor_name,
        a.in_remark,
        a.in_mode_code,
        a.in_disease_id,
        a.in_disease_name,
        a.in_disease_icd10,
        a.in_situation_code,
        a.outpt_visit_no,
        a.outpt_doctor_id,
        a.outpt_doctor_name,
        a.outpt_disease_id,
        a.outpt_disease_name,
        a.outpt_disease_icd10,
        a.out_ward_id,
        a.out_dept_id,
        a.out_dept_name,
        a.out_time,
        a.out_disease_id,
        a.out_disease_name,
        a.out_disease_icd10,
        a.out_oper_id,
        a.out_oper_name,
        a.out_oper_time,
        a.out_situation_code,
        a.out_remark,
        a.out_mode_code,
        a.is_archive,
        a.archive_time,
        a.archive_id,
        a.archive_name,
        a.insure_code,
        a.insure_org_code,
        a.insure_no,
        a.insure_biz_code,
        a.insure_treat_code,
        a.insure_patient_id,
        a.insure_remark,
        a.total_advance,
        (case s.id when null then a.total_cost else s.reality_price end) total_cost,
        (case when s.settle_take_price != '0' then s.settle_take_price
        when s.settle_back_price != '0' then s.settle_back_price else '0' end) as bu_tui_fei,
        a.total_balance,
        a.crte_id,
        a.crte_name,
        a.crte_time,
        s.settle_time as settleTime,
        s.self_price,
        s.mi_price,
        (select sum(total_price) from inpt_cost c where c.hosp_code = #{hospCode} and c.item_code = '1' and a.id = c.visit_id) as drugCost,
        (select sum(total_price) from inpt_cost c where c.hosp_code = #{hospCode} and c.item_code = '1' and a.id = c.visit_id)/a.total_cost as drugCostRate,
        (select name from base_dept b where b.id = a.in_ward_id and b.hosp_code = a.hosp_code) as wardName,
        bpf.source_tj_code,
        bpf.total_in
        from inpt_visit a
        left join inpt_settle s on a.id=s.visit_id and a.hosp_code=s.hosp_code and s.is_settle='1' and s.status_code = '0'
        left join base_profile_file bpf on a.profile_id = bpf.id
        where a.hosp_code = #{hospCode}
        <if test="statusCode != null and statusCode != ''">
            and a.status_code = #{statusCode}
        </if>
        <if test="keyword != null and keyword != ''">
            and (a.name like concat('%',#{keyword},'%') or a.in_no like concat('%',#{keyword},'%') or a.in_profile like concat('%',#{keyword},'%') or a.in_disease_name like concat('%',#{keyword},'%') or a.zz_doctor_name like concat('%',#{keyword},'%') or a.jz_doctor_name like concat('%',#{keyword},'%') or a.zg_doctor_name like concat('%',#{keyword},'%') or a.outpt_doctor_name like concat('%',#{keyword},'%') )
        </if>
        <if test="inDeptId != null and inDeptId != ''">
            and a.in_dept_id = #{inDeptId}
        </if>
        <if test="inWardId != null and inWardId != ''">
            and a.in_ward_id = #{inWardId}
        </if>
        <if test="inDiseaseName != null and inDiseaseName != ''">
            and a.in_disease_name like concat('%',#{inDiseaseName},'%')
        </if>
        /*当天出院*/
        <if test="startDate != null and timeFlag == '1'.toString()">
            and DATE_FORMAT(a.out_time,'%Y-%m-%d') = DATE_FORMAT(#{startDate},'%Y-%m-%d') and (a.status_code ='5' or a.status_code ='7')
        </if>
        /*当天在院*/
        <if test="startDate != null and timeFlag == '0'.toString()">
            and DATE_FORMAT(a.in_time,'%Y-%m-%d') &lt;= DATE_FORMAT(#{startDate},'%Y-%m-%d') and (a.out_time is null or DATE_FORMAT(a.out_time,'%Y-%m-%d') &gt;= DATE_FORMAT(#{startDate},'%Y-%m-%d'))
            and a.status_code ='2'
        </if>
    </select>

</mapper>
