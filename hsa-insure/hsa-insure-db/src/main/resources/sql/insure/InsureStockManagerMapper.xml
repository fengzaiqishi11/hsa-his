<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.hsa.module.insure.stock.dao.InsureStockManagerDAO">
    <update id="updateInsureGoodSellBatch"></update>

    <update id="updateInsureInventoryCheckBatch">
        update stro_invoicing
        set upload_insure = '1'
        where id in
        <foreach collection="fixmedinsBchnoList" open="(" close=")" item="fixmedinsBchno" separator=",">
            #{fixmedinsBchno}
        </foreach>
    </update>

    <select id="queryInsureGoodBuyPage" resultType="cn.hsa.module.insure.stock.entity.InsureGoodBuy">
    select
        case when b.item_code ='2' then c.nation_code else d.nation_code end  as  medListCodg,
        case when b.item_code ='2' then c.code else d.code end  as  fixmedinsHilistId,
        b.item_name as fixmedinsHilistName,
        a.order_no as dyntNo,
        a.id as fixmedinsBchno ,
        f.name as splerName,
        '' as splerPmtno,
        '' as manuLotnum,
        e.name as prodentpName,
        '' as aprvno,
        null as manuDate,
        null as expyEnd,
        null as finlTrnsPric,
        null as purcTetnCnt,
        null as purcInvoCodg,
        null as purcInvoNo,
        '1' as rxFlag,
        null as purcRetnStoinTime,
        null as purcRetnOpterName,
        null as prod_geayFlag,
        null as memo
    from
        stro_purchase a
        JOIN stro_purchase_detail b on a.id = b.purchase_id and a.hosp_code = b.hosp_code
        LEFT JOIN base_material c on b.item_id = c.id  and c.hosp_code = b.hosp_code
        left join base_drug d on b.item_id = d.id  and d.hosp_code = b.hosp_code
        left join base_product e on b.product_id = e.id and e.hosp_code = b.hosp_code
        left join base_supplier f on a.supplier_id = f.id and a.hosp_code = f.hosp_code
    </select>

    <select id="queryInsureGoodBuyBackPage" resultType="cn.hsa.module.insure.stock.entity.InsureGoodBuyBack">
    select
        case when b.item_code ='2' then c.nation_code else d.nation_code end  as  medListCodg,
        case when b.item_code ='2' then c.code else d.code end  as  fixmedinsHilistId,
        b.item_name as fixmedinsHilistName,
        a.id as fixmedinsBchno ,
        f.name as splerName,
        '' as splerPmtno,
        null as manuDate,
        null as expyEnd,
        null as finlTrnsPric,
        null as purcRetnCnt,
        null as purcInvoCodg,
        null as purcInvoCo,
        '1' as rx_flag,
        null as purcRetnStoinTime,
        null as purcRetnOpterName,
        null as memo,
        null as medinsProdPurcNo
    from
        stro_purchase a
        JOIN stro_purchase_detail b on a.id = b.purchase_id and a.hosp_code = b.hosp_code
        LEFT JOIN base_material c on b.item_id = c.id  and c.hosp_code = b.hosp_code
        left join base_drug d on b.item_id = d.id  and d.hosp_code = b.hosp_code
        left join base_product e on b.product_id = e.id and e.hosp_code = b.hosp_code
        left join base_supplier f on a.supplier_id = f.id and a.hosp_code = f.hosp_code

    </select>

    <select id="queryInsureUploadDataPage" resultType="cn.hsa.module.insure.stock.entity.InsureGoodInfoDelete">
        select id,insure_type AS insureType,hosp_code AS hospCode,fixmedins_bchno AS fixmedinsBchno, inv_data_type AS invDataType, upload_time AS uploadTime,cert_id AS certId from insure_stock_upload

        where 1=1
        <if test="insureType != null and insureType != ''">
           and  insure_type = #{insureType}
        </if>
    </select>

    <insert id="insertStockUploadBatch" >
        INSERT INTO insure_stock_upload(
        id, hosp_code,insure_type, fixmedins_bchno, inv_data_type, upload_time, cert_id
        )
        VALUES
        <foreach collection="list" index="index" item="item" separator=",">
            (#{item.id}, #{item.hospCode},  #{item.insureType}, #{item.fixmedinsBchno}, #{item.invDataType}, #{item.uploadTime}, #{item.certId})
        </foreach>
    </insert>

    <delete id="deleteStockUpload">
        delete from insure_stock_upload  where id = #{id} and fixmedins_bchno = #{fixmedinsBchno} and hosp_code = #{hospCode}
    </delete>

    <select id="queryInsureGoodSellPage" resultType="cn.hsa.module.insure.stock.entity.InsureGoodSell">
    SELECT
	CASE
	WHEN a.item_code = '2' THEN b.nation_code ELSE c.nation_code END AS medListCodg,
	CASE
	WHEN a.item_code = '2' THEN b.CODE ELSE c.CODE  END AS fixmedinsHilistId,
		a.item_name AS fixmedins_hilist_name,
		a.id AS fixmedinsBchno,
		NULL AS prscDrCertType,
		'' AS prscDrCertno,
		NULL AS prscDrCertName,
		NULL AS pharCertType,
		NULL AS pharCertno,
		NULL AS pharName,
		NULL AS pharPracCertNo,
		NULL AS hiFeesetlType,
		'1' AS setlId,
		NULL AS mdtrtSn,
		NULL AS psnNo,
		NULL AS psnCertType,
		NULL AS certno,
		NULL AS psnName,
		NULL AS manuLotnum,
		NULL AS manuDate,
		NULL AS expyEnd,
		NULL AS rxFlag,
		NULL AS trdnFlag,
		NULL AS finlTrnsPric,
		NULL AS rxno,
		NULL AS rxCircFlag,
		NULL AS rtalDocno,
		NULL AS stooutNo,
		NULL AS bchno,
		NULL AS drugTracCodg,
		NULL AS drugProdDarc,
		NULL AS shelfPosi,
		NULL AS selRetnCnt,
		NULL AS selRetnTime,
		NULL AS selRetnOpterName,
		NULL AS memo
	FROM
		stro_invoicing a
		LEFT JOIN base_material b ON a.item_id = b.id  AND a.hosp_code = b.hosp_code
	  LEFT JOIN base_drug c ON a.item_id = c.id  AND a.hosp_code = c.hosp_code
    </select>

    <select id="queryInsureGoodSellBackPage" resultType="cn.hsa.module.insure.stock.entity.InsureGoodSellBack">
        SELECT
	CASE
	WHEN a.item_code = '2' THEN b.nation_code ELSE c.nation_code END AS medListCodg,
	CASE
	WHEN a.item_code = '2' THEN b.CODE ELSE c.CODE  END AS fixmedinsHilistId,
		a.item_name AS fixmedinsHilistName,
		a.id AS fixmedinsBchno,
		'1' AS setlId,
		NULL AS psnNo,
		NULL AS psnCertType,
		NULL AS certno,
		NULL AS psnName,
		NULL AS manuLotnum,
		NULL AS manuDate,
		NULL AS expyEnd,
		NULL AS rxFlag,
		NULL AS trdnFlag,
		NULL AS finlTrnsPric,
		NULL AS selRetnCnt,
		NULL AS selRetnTime,
		NULL AS selRetnOpterName,
		NULL AS medinsProdSelNo ,
		NULL AS memo
	FROM
		stro_invoicing a
		LEFT JOIN base_material b ON a.item_id = b.id  AND a.hosp_code = b.hosp_code
	  LEFT JOIN base_drug c ON a.item_id = c.id  AND a.hosp_code = c.hosp_code
    </select>

    <select id="queryInsureInventoryCheckPage" resultType="cn.hsa.module.insure.stock.entity.InsureInventoryCheck">
        SELECT distinct
        a.insure_item_code as medlistcodg,
        a.hosp_item_code as fixmedinsHilistId,
        a.hosp_item_name as fixmedinsHilistName,
        '1'  as rx_flag,
        si.crte_time as invdate,
        si.surplus_num as invCnt,
        DATE_SUB(si.crte_time,INTERVAL 2 MONTH) as manu_date,
        si.batch_no as manuLotnum,
        si.id as fixmedinsBchno,
        si.expiry_date as expy_end,
        si.sell_price as price,
        ''as memo
        FROM
        (
        SELECT *   FROM stro_invoicing
        where outin_code in ('7','8')
        ) si
        LEFT JOIN insure_item_match A on  si.item_id = A.hosp_item_id and a.hosp_code = si.hosp_code
        where si.hosp_code =#{hospCode}
        <if test="fixmedinsHilistName != null and fixmedinsHilistName != ''">
            and a.hosp_item_name = #{fixmedinsHilistName}
        </if>
        <if test="isUpload != null and isUpload != ''">
            and si.upload_insure = #{isUpload}
        </if>
    </select>

    <select id="queryInsureInventoryStockUpdatePage" resultType="cn.hsa.module.insure.stock.entity.InsureInventoryStockUpdate">
     SELECT
        case when b.item_code ='2' then c.nation_code else d.nation_code end  as  medListCodg,
        '1' as invChgType,
        case when b.item_code ='2' then c.code else d.code end  as  fixmedinsHilistId,
        b.item_name as fixmedinsHilistName,
        b.batch_no as fixmedinsBchno,
        b.sell_price as price,
        b.num as cnt,
        '1' as rxFlag,
        c.crte_time as invChgTime,
        c.crte_name as invChgOpterName,
        '' as	memo,
        '1' as trdnFlag
    FROM
        stro_stock a
        JOIN stro_stock_detail b ON a.biz_id = b.biz_id and a.hosp_code = b.hosp_code and a.item_id = b.item_id
        LEFT JOIN base_material c on b.item_id = c.id  and c.hosp_code = b.hosp_code
        left join base_drug d on b.item_id = d.id  and d.hosp_code = b.hosp_code
    </select>


</mapper>
