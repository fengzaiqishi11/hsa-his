<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.hsa.module.insure.module.dao.InsureGetInfoDAO">

    <select id="getSetlInfo" resultType="cn.hsa.module.insure.module.dto.InsureSettleInfoDTO">
        select
            a.id,a.visit_id,d.mib_id,
             ifnull((select settle_no from insure_setl_info where insure_setl_info.settle_id = a.insureSettleId and insure_setl_info.visit_id = a.visit_id limit 1),0) as settleNo,
            (select baa027 from insure_individual_basic iib where d.mib_id = iib.id) as baa027,
            (select iib.aac001 from insure_individual_basic iib where d.mib_id = iib.id) as aac001,
            (select iib.bka035_name from insure_individual_basic iib where d.mib_id = iib.id) as bka035_name,
            (select iib.aae140 from insure_individual_basic iib where d.mib_id = iib.id) as hiType,
            (select count(*) from sys_parameter sp,base_item bi,inpt_cost ic where sp.value = bi.code and sp.code = 'SPGA_NURS_CARE' and bi.id = ic.item_id and ic.visit_id = a.visit_id and a.hosp_code = ic.hosp_code) as spgaNurscareDays,
            (select count(*) from sys_parameter sp,base_item bi,inpt_cost ic where sp.value = bi.code and sp.code = 'lV1_NURS_CARE' and bi.id = ic.item_id and ic.visit_id = a.visit_id and a.hosp_code = ic.hosp_code) as lv1NurscareDays,
            (select count(*) from sys_parameter sp,base_item bi,inpt_cost ic where sp.value = bi.code and sp.code = 'SCD_NURS_CARE' and bi.id = ic.item_id and ic.visit_id = a.visit_id and a.hosp_code = ic.hosp_code) as scdNurscareDays,
            (select count(*) from sys_parameter sp,base_item bi,inpt_cost ic where sp.value = bi.code and sp.code = 'lV3_NURSE_CARE' and bi.id = ic.item_id and ic.visit_id = a.visit_id and a.hosp_code = ic.hosp_code) as lv3NursecareDays,
            (select su.prac_certi_no from sys_user su where su.hosp_code = b.hosp_code and b.zz_doctor_id = su.id) as doctorPracCertiNo,
            (select su.prac_certi_no from sys_user su where su.hosp_code = b.hosp_code and b.resp_nurse_id = su.id) as nursePracCertiNo,
               d.medical_reg_no,a.settle_id,a.insureSettleId,a.hosp_code,
            b.in_profile,b.name,b.age,b.gender_code, b.birthday,b.nationality_cation,b.nation_code,
            b.cert_code,b.cert_no as certno,b.in_mode_code,
            b.insure_code,a.aka130,b.patient_code,b.resp_nurse_name,b.zz_doctor_name,
            b.in_dept_id,b.in_dept_name as inDeptCode,b.out_dept_id,
            b.out_dept_name as outDeptCode,a.insureSettleId,
            a.personal_price, a.person_price,a.settleway,a.insure_org_code,a.crte_time,
            d.insuplc_admdvs AS insuplc,b.in_time,b.out_time,f.hi_setl_lv,
            f.crte_time as dclaTime,b.address,e.baby_age_month,
            e.work_post_code,e.turn_dept_ids,e.in_days,b.outpt_disease_name,d.visit_icd_code,e.in_situation_name,
            d.accessory_diagnosis_name,
            e.inpt_before_day,e.inpt_before_hour,e.inpt_before_minute, e.inpt_last_day,
            e.inpt_last_hour, e.inpt_last_minute,
            e.is_inpt,e.zg_doctor_name, e.zg_doctor_id,e.zr_nurse_id,e.zr_nurse_name,
            g.start_time,g.end_time,a.omsgid,
            e.out_mode_name,e.out_mode_code,
            e.work_address,e.work_post_code,e.work_phone,e.work,
            e.contact_name,e.contact_phone,e.contact_rela_code,e.contact_address,
            e.baby_birth_weight,e.baby_in_weight,e.turn_org_name,iib.bka035,
            h.invoice_id AS invoiceDetailId,e.in_way,e.occupation_code,
            h.invoice_no,iib.aae140,d.aka130 as iptMedType
        from insure_individual_settle a
        left join inpt_visit b on a.visit_id = b.id and a.hosp_code=b.hosp_code
        left join insure_individual_visit d on a.visit_id = d.visit_id and a.hosp_code=d.hosp_code
        left join mris_base_info e on a.visit_id=e.visit_id and a.hosp_code=e.hosp_code
        left join insure_individual_basic iib on iib.id = d.mib_id and iib.hosp_code = d.hosp_code
        left join insure_setl_info f on a.visit_id=f.visit_id and a.hosp_code=f.hosp_code
        left join inpt_settle g on a.visit_id=g.visit_id and a.hosp_code=g.hosp_code
        left join inpt_settle_invoice h on a.visit_id=h.visit_id and a.hosp_code=h.hosp_code and a.settle_id = h.settle_id
        where a.insureSettleId = #{insureSettleId} and a.state = '0' AND A.settle_state = '1' AND G.status_code = '0'
           AND  A.settle_id = #{settleId}
        order by a.visit_id
    </select>



    <select id="getOutSetlInfo" resultType="cn.hsa.module.insure.module.dto.InsureSettleInfoDTO">
        select
            ifnull((select settle_no from insure_setl_info where insure_setl_info.settle_id = a.insureSettleId and insure_setl_info.visit_id = a.visit_id limit 1),0) as settleNo,
            (select baa027 from insure_individual_basic iib where d.mib_id = iib.id) as baa027,
            (select iib.aac001 from insure_individual_basic iib where d.mib_id = iib.id) as aac001,
            (select iib.bka035_name from insure_individual_basic iib where d.mib_id = iib.id) as bka035_name,
            (select iib.aae140 from insure_individual_basic iib where d.mib_id = iib.id) as hiType,
            a.id,
            a.visit_id ,
            a.settle_id,
            d.medical_reg_no,
            a.insureSettleId,
            a.hosp_code,
            d.mib_id,
            ifnull((select settle_no from insure_setl_info where insure_setl_info.settle_id = a.settle_id and insure_setl_info.visit_id = a.visit_id limit 1),0) as settleNo,
            (select baa027 from insure_individual_basic iib where d.mib_id = iib.id) as baa027,
            b.out_profile as inProfile,
            b.name,
            b.age,
            d.visit_drpt_id,
            (select nation_code from base_dept bd where bd.id = d.visit_drpt_id and bd.hosp_code = d.hosp_code) as inDeptCode,
            (select nation_code from base_dept bd where bd.id = d.visit_drpt_id and bd.hosp_code = d.hosp_code) as outDeptCode,
            b.gender_code,
            b.birthday,
            d.visit_drpt_id,
            b.nation_code,
            b.cert_code,
            b.cert_no as certno,
            b.insure_code,
            b.patient_code,
            '2' as aka130,
            a.insureSettleId,
            a.crte_time,
            a.personal_price,
            a.person_price,
            a.settleway,
            a.insure_org_code,
            a.crte_time,
            d.insuplc_admdvs AS insuplc,
            d.visit_time,
            d.visit_drpt_name,
            e.invoice_id as invoiceDetailId,
            e.invoice_no as invoiceNo,
            os.settle_time as startTime,
            os.settle_time as endTime,
            a.omsgid,
            f.crte_time as dclaTime,
            f.hi_setl_lv,
            g.baby_age_month,
            g.work,
            g.work_phone,
            g.work_address,
            g.work_post_code,
            g.baby_birth_weight,
            g.baby_in_weight,
            g.in_way,
            g.turn_dept_ids,
            g.in_days,
            g.in_situation_name,
            g.inpt_before_day,
            g.inpt_before_hour,
            g.inpt_before_minute,
            g.inpt_last_day,
            g.inpt_last_hour,
            g.inpt_last_minute,
            g.out_mode_name,
            g.is_inpt,
            g.zg_doctor_name,
            g.zg_doctor_id,
            g.zr_nurse_id,
            g.zr_nurse_name
        from insure_individual_settle a
        left join outpt_settle os on os.id = a.settle_id and a.hosp_code = os.hosp_code
        left join outin_invoice_detail e on e.settle_id = a.settle_id and a.hosp_code = e.hosp_code
        left join outpt_visit b on a.visit_id = b.id
        left join insure_individual_visit d on a.visit_id = d.visit_id
        left join insure_setl_info f on a.visit_id=f.visit_id and a.hosp_code=f.hosp_code
        left join mris_base_info g on a.visit_id=g.visit_id and a.hosp_code=g.hosp_code
        where a.insureSettleId = #{insureSettleId} and  a.state = '0' AND A.settle_state = '1'
        AND A.settle_id =  #{settleId}
        and a.hosp_code = #{hospCode}
        order by a.visit_id
    </select>

    <select id="queryPayinfo" resultType="cn.hsa.module.insure.module.dto.InsureIndividualFundDTO">
        select ifnull(fund_payamt,0) as fund_payamt, fund_pay_type from insure_individual_fund where insure_settle_id = #{insureSettleId}
    </select>

    <select id="queryOpspdiseinfo" resultType="cn.hsa.module.insure.module.dto.OpspdiseInfoDTO">
        select disease_id, b.name,c.oper_disease_icd9, c.oper_disease_name from (outpt_diagnose a, base_disease b)
        left join oper_info_record c on a.visit_id = c.visit_id and c.hosp_code = a.hosp_code
        where a.visit_id = #{visitId} and a.disease_id = b.id and a.hosp_code = #{hospCode} and b.hosp_code = #{hospCode}
    </select>

    <select id="queryDiseinfo" resultType="cn.hsa.module.insure.module.dto.DiseInfoDTO">
        select a.disease_id, a.type_code, a.is_main, b.name,b.code,c.oper_disease_icd9, c.oper_disease_name,
        c.oper_plan_time, c.doctor_id, c.doctor_name, c.rank
        from (inpt_diagnose a, base_disease b)
        left join oper_info_record c on a.visit_id = c.visit_id and c.hosp_code = a.hosp_code
        where a.visit_id = #{visitId} and a.disease_id = b.id and a.hosp_code = #{hospCode} and b.hosp_code = #{hospCode}
    </select>

    <select id="queryIteminfo" resultType="cn.hsa.module.insure.module.dto.ItemInfoDTO">
        select ifnull(primary_price,0) as primaryPrice,item_type,
        ifnull(apply_last_price,0) as applyLastPrice,
        ifnull(fulamt_ownpay_amt,0) as fulamtOwnpayAmt
        from  insure_individual_cost
        where visit_id = #{visitId} and insure_settle_id = #{insureSettleId}

    </select>

    <select id="queryOprninfo" resultType="cn.hsa.module.insure.module.dto.OprninfoDTO">
        select oper_disease_icd9, oper_disease_name, oper_plan_time, doctor_id, doctor_name,
        assistant_id1,assistant_name1,assistant_id2,assistant_name2,assistant_id3,assistant_name3,
        ana_id1,ana_name1,ana_id2,ana_name2,ana_id3,ana_name3,ana_code,rank
        from oper_info_record where visit_id = #{visitId} and hosp_code = #{hospCode}-- 手术类型
    </select>

    <select id="queryIcuinfo" resultType="cn.hsa.module.insure.module.dto.IcuInfoDTO">
        select * from base_dept where 1=2-- 暂时没表
    </select>

    <select id="queryInsureCost" resultType="cn.hsa.module.insure.module.dto.InsureIndividualCostDTO">
       select id, '0' as medType,
        item_id, item_name, crte_time,
        item_code, price, num, total_num, total_price, doctor_id, doctor_name,
         dept_id, (select name from base_dept a where a.id = dept_id ) as deptName
         from inpt_cost where visit_id = #{id} and id not in (select a.cost_id from insure_upload_cost a where a.visit_id = #{id})
    </select>

    <select id="queryOutCost" resultType="cn.hsa.module.inpt.doctor.dto.InptCostDTO">
        select id, '1' as medType,
        item_id, item_name, crte_time,
        item_code, price, num, total_num, total_price, doctor_id, doctor_name,
         dept_id, (select name from base_dept a where a.id = dept_id ) as deptName
         from insure_individual_cost where visit_id = #{id} and id not in (select a.cost_id from insure_upload_cost a where a.visit_id = #{id})
    </select>

    <select id="queryInCost" resultType="cn.hsa.module.inpt.doctor.dto.InptCostDTO">
        select id, '2' as medType,
        item_id, item_name, crte_time,
        item_code,price, num, total_num, total_price, doctor_id, doctor_name,
        dept_id, (select name from base_dept a where a.id = dept_id ) as deptName
        from insure_individual_cost where visit_id = #{id} and id not in
        (select a.cost_id from insure_upload_cost a where a.visit_id = #{id})
    </select>

    <select id="queryVisit" resultType="cn.hsa.module.inpt.doctor.dto.InptVisitDTO">
        select A.* from (
            select m.* from (
            select id,'1'as lx,in_no as visitNo, name, gender_code, age, age_unit_code,hosp_code,
            nation_code, cert_no,cert_code, birthday,  patient_code, crte_time from inpt_visit where
            patient_code = '0' and status_code in ('2','5','6') and hosp_code =#{hospCode}
            <if test="name != null and name != ''">
                and ( name like concat('%',#{name},'%')
                or in_no like concat('%',#{name},'%'))
            </if>
            order by crte_time ) m
            union all
            select n.* from (
            select ov.id,'0' as lx,ov.register_no as visitNo, ov.name, ov.gender_code, ov.age, ov.age_unit_code,ov.hosp_code,
            ov.nation_code, ov.cert_no,cert_code,  ov.birthday,  ov.patient_code, ov.crte_time from outpt_visit ov
            left join outpt_settle os on os.visit_id = ov.id and os.hosp_code = ov.hosp_code and os.status_code ='0'
            where
            ov.patient_code = '0' and  os.id is null and ov.hosp_code =#{hospCode}
            <if test="name != null and name != ''">
                and ( ov.name like concat('%',#{name},'%')
                or ov.register_no like concat('%',#{name},'%'))
            </if>
            order by crte_time ) n
       )A
       where A.lx = #{lx} and A.hosp_code = #{hospCode}
    </select>

    <insert id="insertCost" keyProperty="" useGeneratedKeys="true">
        <foreach collection="list" item="entity" separator=";">
            insert into insure_upload_cost(id, hosp_code, visit_id, mdtrt_sn, ipt_otp_no, med_type,
            chrg_bchno, feedetl_sn, psn_cert_type, certno, psn_name, fee_ocur_time, cnt, pric, det_item_fee_sumamt,
            med_list_codg, medins_list_codg, medins_list_name, med_chrgitm_type, prodname, bilg_dept_codg, bilg_dept_name,
            bilg_dr_codg, bilg_dr_name, crte_id, crte_name, crte_time, org_code, cost_id)
            values
            (#{entity.id}, #{entity.hospCode}, #{entity.visitId}, #{entity.mdtrtSn}, #{entity.iptOtpNo},
            #{entity.medType}, #{entity.chrgBchno}, #{entity.feedetlSn}, #{entity.psnCertType}, #{entity.certno},
            #{entity.psnName}, #{entity.feeOcurTime}, #{entity.cnt}, #{entity.pric}, #{entity.detItemFeeSumamt},
            #{entity.medListCodg}, #{entity.medinsListCodg}, #{entity.medinsListName}, #{entity.medChrgitmType},
            #{entity.prodname}, #{entity.bilgDeptCodg}, #{entity.bilgDeptName}, #{entity.bilgDrCodg},
            #{entity.bilgDrName}, #{entity.crteId}, #{entity.crteName}, #{entity.crteTime}, #{entity.orgCode}, #{entity.costId})
        </foreach>
    </insert>

    <!--通过实体作为筛选条件查询-->
    <select id="queryAll" resultType="cn.hsa.module.insure.module.dto.InsureUploadCostDTO">
        select
        id, hosp_code, visit_id, mdtrt_sn, ipt_otp_no, med_type, chrg_bchno, feedetl_sn, psn_cert_type, certno,
        psn_name, fee_ocur_time, cnt, pric, det_item_fee_sumamt, med_list_codg, medins_list_codg, medins_list_name,
        med_chrgitm_type, prodname, bilg_dept_codg, bilg_dept_name, bilg_dr_codg, bilg_dr_name, crte_id, crte_name,
        crte_time
        from insure_upload_cost
        where visit_id = #{id} and hosp_code = #{hospCode}
    </select>

    <select id="queryInsureSettle" resultType="cn.hsa.module.insure.module.dto.PayInfoDTO">
        select
        IFNULL(total_price,0) as totalPrice,
        ifnull(insure_price,0) as insurePrice,
        ifnull(plan_price,0) as planPrice,
        ifnull(serious_price,0) as serivicePrice,
        ifnull(civil_price,0) as civilPrice,
        ifnull(retire_price,0) as retirerPrice,
        ifnull(personal_price,0) as personalPrice,
        ifnull(person_price,0) as personPrice
        from insure_individual_settle where insureSettleId = #{insureSettleId}
    </select>

    <select id="queryInsure" resultType="cn.hsa.module.insure.module.dto.ItemInfoDTO">
        select item_name, ifnull(primary_price,0) as primaryPrice, ifnull(apply_last_price,0) as applyLastPrice, ifnull(overlmtSelfpayAmt,0) as overlmtSelfpayAmt
        from insure_individual_cost where visit_id = #{visitId} and insure_settle_id = #{insureSettleId}
    </select>

    <!--新增所有列-->
    <insert id="insertSettleInfo"  parameterType="java.util.Map">
        insert into insure_setl_info(id, hosp_code, visit_id, settle_id, fixmedins_name, fixmedins_code, hi_setl_lv, hi_no, medcasno, dcla_time, psn_name, gend, brdy, age, ntly, neb_age, naty, patn_cert_type, certno, prfs, curr_addr, emp_name, emp_addr, emp_tel, poscode, coner_name, patn_rlts, coner_addr, coner_tel, hi_type, insulic, sp_psn_type, nwb_adm_type, nwb_bir_wt, nwb_adm_wt, opsp_diag_caty, opsp_mdtrt_date, ipt_med_type, adm_way, trt_type, adm_time, adm_caty, refldept_dept, dscg_time, dscg_caty, act_ipt_days, opt_wm_dise, wm_disw_code, opt_tcm_dise, tcm_dise_code, diag_code_cnt, oprn_oprt_code_cnt, vent_used_durg, pwcry_bfadmcoma_dura, pwcry_afadmcoma_dura, bld_cat, bld_amt, bld_unt, spga_nurscare_days, lv1_nurscare_days, scd_nurscare_days, lv3_nursecare_days, dscg_way, acp_medins_name, acp_optins_code, bill_code, bill_no, biz_sn, days_rinp_flag_31, days_rinp_pup_31, chfpdr_name, chfpdr_code, setl_begn_date, setl_en_date, psn_selfpay, psn_ownpay, acct_pay, psn_cashpay, hi_paymtd, hsorg, hsorg_opter, medins_fill_dept, medins_fill_psn, crte_id, crte_name, crte_time, settle_no)
        values (#{id}, #{hospCode}, #{visitId}, #{setl_id}, #{fixmedins_name}, #{fixmedins_code}, #{hi_setl_lv}, #{hi_no}, #{medcasno}, #{dcla_time}, #{psn_name}, #{gend}, #{brdy}, #{age}, #{ntly}, #{nebAge}, #{naty}, #{patn_cert_type}, #{certno}, #{prfs}, #{curr_addr}, #{emp_name}, #{emp_addr}, #{emp_tel}, #{poscode}, #{coner_name}, #{patn_rlts}, #{coner_addr}, #{coner_tel}, #{hi_type}, #{insuplc}, #{spPsnType}, #{nwbAdmType}, #{nwb_bir_wt}, #{nwb_adm_w}, #{opsp_diag_caty}, #{opsp_mdtrt_date}, #{ipt_med_type}, #{adm_way}, #{trtType}, #{adm_time}, #{adm_caty}, #{refldept_dept}, #{dscg_time}, #{dscg_caty}, #{act_ipt_days}, #{otp_wm_dise}, #{wm_dise_code}, #{optTcmDise}, #{tcmDiseCode}, #{diagCodeCnt}, #{oprnOprtCodeCnt}, #{ventUsedDurg}, #{pwcry_bfadm_coma_dura}, #{pwcry_afadm_coma_dura}, #{bldCat}, #{bldAmt}, #{bldUnt}, #{spgaNurscare_Days}, #{lv1Nurscare_Days}, #{scdNurscare_Days}, #{lv3Nursecare_Days}, #{dscg_way}, #{acpMedinsName}, #{acpOptinsCode}, #{bill_code}, #{bill_no}, #{biz_sn}, #{days_rinp_flag_31}, #{daysRinpPup31}, #{chfpdr_name}, #{chfpdr_code}, #{setl_begn_date}, #{setl_end_date}, #{psn_selfpay}, #{psn_ownpay}, #{acct_pay}, #{psn_cashpay}, #{hi_paymtd}, #{hsorg}, #{hsorg_opter}, #{medins_fill_dept}, #{medins_fill_psn}, #{crteId}, #{crteName}, #{crteTime}, #{settleNo})
    </insert>

    <select id="getSetlInfoLocal" resultType="java.lang.String">
        select id from insure_setl_info where settle_id = #{settleId}
    </select>
    <select id="selectIsSetlleFee" resultType="java.util.Map">

        select id, hosp_code, visit_id, cost_id, settle_id, is_hospital,
               item_type, item_code, item_name, guest_ratio as selfpay_prop, primary_price, apply_last_price,
               order_no, transmit_code, crte_id, crte_name, crte_time, rxSn, overlmtSelfpayAmt,
               chrgItemLv as chrgitm_lv, fulamtOwnpayFlag, ownpayRea, hiLmtpric, fulamt_ownpay_amt, overlmt_selfpay,
               preselfpay_amt, inscp_scp_amt, medChrgitmType as med_chrgitm_type, overlmt_amt, lmt_used_flag, pric_uplmt_amt,
               insure_settle_id, insure_is_transmit, batch_no, sum_fee, det_item_fee_sumamt
        from insure_individual_cost where visit_id = #{visitId} and hosp_code =#{hospCode}
        and insure_settle_id = #{insureSettleId}
    </select>
    <select id="queryInptMatchPage" resultType="cn.hsa.module.inpt.doctor.dto.InptCostDTO">
        SELECT
        ic.id,ic.hosp_code,ic.visit_id,
        ic.item_code,
        ic.item_name,
        ic.item_id,
        ic.price,
        ic.num,ic.exec_time,ic.crte_name,
        ic.spec,
        ic.prep_code,
        ic.dosage,ic.dosage_unit_code,
        ic.total_num,ic.total_num_unit_code,ic.total_price,
        ic.preferential_price,ic.reality_price,ic.back_num, ic.back_code,ic.doctor_id, ic.doctor_name,
        (select iv.name from inpt_visit iv where iv.id = ic.visit_id and iv.hosp_code = ic.hosp_code and iv.id = #{id}) as name,
        ic.settle_code,
        ic.status_code,
        ic.crte_time,
        iim.deductible,
        iim.is_trans,
        iim.insure_item_code,
        iim.insure_item_name,
        iim.hosp_item_code,
        iim.hosp_item_name,
        (
        CASE
        WHEN iic.transmit_code IS NULL
        OR iic.transmit_code = ''
        THEN '未传输'
        WHEN iic.transmit_code = '1'
        THEN '已传输'
        WHEN iim.is_trans = '0'
        THEN '未传输'
        END
        ) isTransmit
        FROM
        inpt_cost ic
        JOIN insure_item_match iim ON (ic.`item_id` = iim.`hosp_item_id` AND ic.`item_code` = iim.`hosp_item_type` AND
        ic.hosp_code = iim.hosp_code)
        LEFT JOIN insure_individual_cost iic
        ON ic.id = iic.cost_id
        AND ic.hosp_code = iic.hosp_code
        where 1=1 and
        ic.hosp_code = #{hospCode}
        and ic.visit_id = #{id}
        and IFNULL(iim.is_trans,'0') = #{isMatch}
        and IFNULL(iim.audit_code,'0') =#{isMatch}
        and IFNULL(iim.is_valid,'0') =#{isMatch}
        and IFNULL(iim.is_match,'0') =#{isMatch}
        and ic.settle_code in ('0','1')
        and iim.insure_reg_code = #{orgCode}
        <if test="isTransmit != null and isTransmit !=''">
            and IFNULL(iic.`transmit_code`,'0') = #{isTransmit}
        </if>
        <if test="isMatch =='1'.toString()">
            and iim.audit_code='1'
            and iim.is_valid ='1'
        </if>
    </select>
    <select id="queryOutMatchPage" resultType="cn.hsa.module.inpt.doctor.dto.InptCostDTO">
        SELECT
        ic.id,ic.hosp_code,ic.visit_id,
        ic.item_code,
        ic.item_name,
        ic.item_id,
        ic.price,
        ic.num,ic.crte_name,
        ic.spec,
        ic.prep_code,
        ic.dosage,ic.dosage_unit_code,
        ic.total_num,ic.total_price,
        ic.preferential_price,ic.reality_price,ic.back_num,ic.doctor_id, ic.doctor_name,
        (select iv.name from outpt_visit iv where iv.id = ic.visit_id and iv.hosp_code = ic.hosp_code and iv.id = #{id}) as name,
        ic.settle_code,
        ic.status_code,
        ic.crte_time,
        iim.deductible,
        iim.is_trans,
        iim.insure_item_code,
        iim.insure_item_name,
        iim.hosp_item_code,
        iim.hosp_item_name,
        (
        CASE
        WHEN iic.transmit_code IS NULL
        OR iic.transmit_code = ''
        THEN '未传输'
        WHEN iic.transmit_code = '1'
        THEN '已传输'
        WHEN iim.is_trans = '0'
        THEN '未传输'
        END
        ) isTransmit
        FROM
         outpt_cost  ic
        JOIN insure_item_match iim ON (ic.`item_id` = iim.`hosp_item_id` AND ic.`item_code` = iim.`hosp_item_type` AND
        ic.hosp_code = iim.hosp_code)
        LEFT JOIN insure_individual_cost iic
        ON ic.id = iic.cost_id
        AND ic.hosp_code = iic.hosp_code
        where 1=1 and
        ic.hosp_code = #{hospCode}
        and ic.visit_id = #{id}
        and IFNULL(iim.is_trans,'0') = #{isMatch}
        and IFNULL(iim.audit_code,'0') =#{isMatch}
        and IFNULL(iim.is_valid,'0') =#{isMatch}
        and IFNULL(iim.is_match,'0') =#{isMatch}
        and ic.settle_code in ('0','1')
        and iim.insure_reg_code = #{orgCode}
        <if test="isTransmit != null and isTransmit !=''">
            and IFNULL(iic.`transmit_code`,'0') = #{isTransmit}
        </if>
        <if test="isMatch =='1'.toString()">
            and iim.audit_code='1'
            and iim.is_valid ='1'
        </if>
    </select>
    <select id="queryInptUnMatchPage" resultType="cn.hsa.module.inpt.doctor.dto.InptCostDTO">
        SELECT
        iv.name,b.id,b.item_name,b.total_num,b.spec,b.price,b.crte_time,b.doctor_name,
        (case b.item_code
        when b.item_code ='1' then (select bd.code from base_drug bd where b.item_id = bd.id and bd.hosp_code
        =b.hosp_code )
        when b.item_code='2' then (select bm.code from base_material bm where b.item_id = bm.id and bm.hosp_code =
        b.hosp_code )
        when b.item_code = '4' then (select ba.code from base_advice ba where b.item_id = ba.id and ba.hosp_code =
        b.hosp_code)
        else (select bi.code from base_item bi where b.item_id = bi.id and bi.hosp_code = b.hosp_code)
        end
        ) as hospItemCode,
        iim.hosp_item_id,
        b.total_price totalPrice,
        b.reality_price realityPrice
        FROM
        inpt_cost b
        LEFT JOIN insure_item_match iim ON b.item_id = iim.hosp_item_id
        join inpt_visit iv on (iv.id = b.visit_id and iv.hosp_code = b.hosp_code)
        WHERE
        b.visit_id = #{id}
        AND (
        iim.is_trans = '0'
        OR b.item_id &lt;&gt; ifnull(iim.hosp_item_id,''))
    </select>
    <select id="queryOutUnMatchPage" resultType="cn.hsa.module.inpt.doctor.dto.InptCostDTO">
        SELECT
        iv.name,b.id,b.item_name,b.total_num,b.spec,b.price,b.crte_time,b.doctor_name,
        (case b.item_code
        when b.item_code ='1' then (select bd.code from base_drug bd where b.item_id = bd.id and bd.hosp_code
        =b.hosp_code )
        when b.item_code='2' then (select bm.code from base_material bm where b.item_id = bm.id and bm.hosp_code =
        b.hosp_code )
        when b.item_code = '4' then (select ba.code from base_advice ba where b.item_id = ba.id and ba.hosp_code =
        b.hosp_code)
        else (select bi.code from base_item bi where b.item_id = bi.id and bi.hosp_code = b.hosp_code)
        end
        ) as hospItemCode,
        iim.hosp_item_id,
        b.total_price totalPrice,
        b.reality_price realityPrice
        FROM
        outpt_cost b
        LEFT JOIN insure_item_match iim ON b.item_id = iim.hosp_item_id
        join outpt_visit iv on (iv.id = b.visit_id and iv.hosp_code = b.hosp_code)
        WHERE
        b.visit_id = #{id}
        AND (
        iim.is_trans = '0'
        OR b.item_id &lt;&gt; ifnull(iim.hosp_item_id,''))
    </select>

    <select id="getSettleInfo" resultType="java.util.Map">
        select id,
               visit_id,
               settle_id,
               settle_no,
               IF(settle_no = settle_no is NULL
                          OR settle_no = '', '未上传', '已上传') as isUpload,
               fixmedins_name,
               fixmedins_code,
               hi_setl_lv,
               hi_no,
               medcasno,
               dcla_time,
               psn_name,
               gend,
               brdy,
               age,
               ntly,
               neb_age,
               naty,
               patn_cert_type,
               certno,
               prfs,
               curr_addr,
               emp_name,
               emp_addr,
               emp_tel,
               poscode,
               coner_name,
               patn_rlts,
               coner_addr,
               coner_tel,
               hi_type,
               insulic,
               sp_psn_type,
               nwb_adm_type,
               nwb_bir_wt,
               nwb_adm_wt,
               opsp_diag_caty,
               opsp_mdtrt_date,
               ipt_med_type,
               adm_way,
               trt_type,
               adm_time,
               adm_caty,
               refldept_dept,
               dscg_time,
               dscg_caty,
               act_ipt_days,
               opt_wm_dise,
               wm_disw_code,
               opt_tcm_dise,
               tcm_dise_code,
               diag_code_cnt,
               oprn_oprt_code_cnt,
               vent_used_durg,
               pwcry_bfadmcoma_dura,
               pwcry_afadmcoma_dura,
               bld_cat,
               bld_amt,
               bld_unt,
               spga_nurscare_days,
               lv1_nurscare_days,
               scd_nurscare_days,
               lv3_nursecare_days,
               dscg_way,
               acp_medins_name,
               acp_optins_code,
               bill_code,
               bill_no,
               biz_sn,
               days_rinp_flag_31,
               days_rinp_pup_31,
               chfpdr_name,
               chfpdr_code,
               setl_begn_date,
               setl_en_date,
               psn_selfpay,
               psn_ownpay,
               acct_pay,
               psn_cashpay,
               hi_paymtd,
               hsorg,
               hsorg_opter,
               medins_fill_dept,
               medins_fill_psn,
               crte_id,
               crte_name,
               crte_time,
               hosp_code
        from insure_setl_info
        where settle_id = #{insureSettleId}
          and visit_id = #{visitId}
          and hosp_code = #{hospCode}
    </select>
    <select id="queryID" resultType="java.lang.Integer">
        select count(1)
        from insure_setl_info
        where
            settle_id = #{insureSettleId}
          and  visit_id = #{visitId}
          and  hosp_code = #{hospCode}
    </select>
    <select id="getInvoiceNo" resultType="cn.hsa.module.outpt.outinInvoice.dto.OutinInvoiceDTO">
        select id, hosp_code, receive_id, receive_name, receive_time, use_id, use_name, type_code,
               prefix, start_no, end_no, curr_no,
               status_code, num, remark, crte_id, crte_name, crte_time from outin_invoice
        where hosp_code =#{hospCode} and id =#{id}
    </select>

    <!-- 根据主键删除表信息 -->
    <delete id="deleteByVisitID" parameterType="java.lang.String">
        DELETE FROM insure_setl_info
        WHERE  settle_id = #{insureSettleId}
        and  visit_id = #{visitId}
        and  hosp_code = #{hospCode}
    </delete>


</mapper>