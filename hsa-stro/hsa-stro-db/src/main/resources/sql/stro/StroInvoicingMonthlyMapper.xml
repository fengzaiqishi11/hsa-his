<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.hsa.module.stro.stroinvoicing.dao.StroInvoicingMonthlyDAO">
  <resultMap id="BaseResultMap" type="cn.hsa.module.stro.stroinvoicing.entity.StroInvoicingMonthlyDO">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="hosp_code" jdbcType="VARCHAR" property="hospCode" />
    <result column="biz_id" jdbcType="VARCHAR" property="bizId" />
    <result column="item_code" jdbcType="VARCHAR" property="itemCode" />
    <result column="item_id" jdbcType="VARCHAR" property="itemId" />
    <result column="item_name" jdbcType="VARCHAR" property="itemName" />
    <result column="num" jdbcType="DECIMAL" property="num" />
    <result column="unit_code" jdbcType="VARCHAR" property="unitCode" />
    <result column="curr_unit_code" jdbcType="VARCHAR" property="currUnitCode" />
    <result column="sell_price" jdbcType="DECIMAL" property="sellPrice" />
    <result column="buy_price" jdbcType="DECIMAL" property="buyPrice" />
    <result column="split_ratio" jdbcType="DECIMAL" property="splitRatio" />
    <result column="split_price" jdbcType="DECIMAL" property="splitPrice" />
    <result column="split_num" jdbcType="DECIMAL" property="splitNum" />
    <result column="split_unit_code" jdbcType="VARCHAR" property="splitUnitCode" />
    <result column="up_surplus_num" jdbcType="DECIMAL" property="upSurplusNum" />
    <result column="surplus_num" jdbcType="DECIMAL" property="surplusNum" />
    <result column="up_buy_price_all" jdbcType="DECIMAL" property="upBuyPriceAll" />
    <result column="buy_price_all" jdbcType="DECIMAL" property="buyPriceAll" />
    <result column="up_sell_price_all" jdbcType="DECIMAL" property="upSellPriceAll" />
    <result column="sell_price_all" jdbcType="DECIMAL" property="sellPriceAll" />
    <result column="crte_time" jdbcType="TIMESTAMP" property="crteTime" />
    <result column="new_price" jdbcType="DECIMAL" property="newPrice" />
    <result column="new_split_price" jdbcType="DECIMAL" property="newSplitPrice" />
    <result column="stro_in_num" jdbcType="DECIMAL" property="stroInNum" />
    <result column="stro_in_num_price_all" jdbcType="DECIMAL" property="stroInNumPriceAll" />
    <result column="return_supl_num" jdbcType="DECIMAL" property="returnSuplNum" />
    <result column="return_supl_price_all" jdbcType="DECIMAL" property="returnSuplPriceAll" />
    <result column="stro_to_dept_num" jdbcType="DECIMAL" property="stroToDeptNum" />
    <result column="stro_to_dept_price_all" jdbcType="DECIMAL" property="stroToDeptPriceAll" />
    <result column="stro_to_phar_num" jdbcType="DECIMAL" property="stroToPharNum" />
    <result column="stro_to_phar_price_all" jdbcType="DECIMAL" property="stroToPharPriceAll" />
    <result column="report_losses_num" jdbcType="DECIMAL" property="reportLossesNum" />
    <result column="report_losses_price_all" jdbcType="DECIMAL" property="reportLossesPriceAll" />
    <result column="phar_return_stro_num" jdbcType="DECIMAL" property="pharReturnStroNum" />
    <result column="phar_return_stro_price_all" jdbcType="DECIMAL" property="pharReturnStroPriceAll" />
    <result column="adjust_profit_price_all" jdbcType="DECIMAL" property="adjustProfitPriceAll" />
    <result column="adjust_loss_price_all" jdbcType="DECIMAL" property="adjustLossPriceAll" />
    <result column="take_strock_subtract_num" jdbcType="DECIMAL" property="takeStrockSubtractNum" />
    <result column="take_strock_subtract_price_all" jdbcType="DECIMAL" property="takeStrockSubtractPriceAll" />
    <result column="take_strock_add_num" jdbcType="DECIMAL" property="takeStrockAddNum" />
    <result column="take_strock_add_price_all" jdbcType="DECIMAL" property="takeStrockAddPriceAll" />
    <result column="stro_in_num_buy_price_all" jdbcType="DECIMAL" property="stroInNumBuyPriceAll" />
    <result column="return_supl_buy_price_all" jdbcType="DECIMAL" property="returnSuplBuyPriceAll" />
    <result column="stro_to_dept_buy_price_all" jdbcType="DECIMAL" property="stroToDeptBuyPriceAll" />
    <result column="stro_to_phar_buy_price_all" jdbcType="DECIMAL" property="stroToPharBuyPriceAll" />
    <result column="report_losses_buy_price_all" jdbcType="DECIMAL" property="reportLossesBuyPriceAll" />
    <result column="phar_return_stro_buy_price_all" jdbcType="DECIMAL" property="pharReturnStroBuyPriceAll" />
    <result column="adjust_profit_buy_price_all" jdbcType="DECIMAL" property="adjustProfitBuyPriceAll" />
    <result column="adjust_loss_buy_price_all" jdbcType="DECIMAL" property="adjustLossBuyPriceAll" />
    <result column="take_strock_subtract_buy_price_all" jdbcType="DECIMAL" property="takeStrockSubtractBuyPriceAll" />
    <result column="take_strock_add_buy_price_all" jdbcType="DECIMAL" property="takeStrockAddBuyPriceAll" />
    <result column="out_sales_num" jdbcType="DECIMAL" property="outSalesNum" />
    <result column="out_sales_price_all" jdbcType="DECIMAL" property="outSalesPriceAll" />
    <result column="out_sales_buy_price_all" jdbcType="DECIMAL" property="outSalesBuyPriceAll" />
    <result column="in_sales_buy_price_all" jdbcType="DECIMAL" property="inSalesBuyPriceAll" />
    <result column="in_sales_price_all" jdbcType="DECIMAL" property="inSalesPriceAll" />
    <result column="in_sales_num" jdbcType="DECIMAL" property="inSalesNum" />
    <result column="stro_phar" jdbcType="VARCHAR" property="stroPhar" />
    <result column="modify_time" jdbcType="TIMESTAMP" property="modifyTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, hosp_code, biz_id, item_code, item_id, item_name, num, unit_code, curr_unit_code,
    sell_price, buy_price, split_ratio, split_price, split_num, split_unit_code, up_surplus_num,
    surplus_num, up_buy_price_all, buy_price_all, up_sell_price_all, sell_price_all,
    crte_time, new_price, new_split_price, stro_in_num, stro_in_num_price_all, return_supl_num,
    return_supl_price_all, stro_to_dept_num, stro_to_dept_price_all, stro_to_phar_num,
    stro_to_phar_price_all, report_losses_num, report_losses_price_all, phar_return_stro_num,
    phar_return_stro_price_all, adjust_profit_price_all, adjust_loss_price_all, take_strock_subtract_num,
    take_strock_subtract_price_all, take_strock_add_num, take_strock_add_price_all, stro_in_num_buy_price_all,
    return_supl_buy_price_all, stro_to_dept_buy_price_all, stro_to_phar_buy_price_all,
    report_losses_buy_price_all, phar_return_stro_buy_price_all, adjust_profit_buy_price_all,
    adjust_loss_buy_price_all, take_strock_subtract_buy_price_all, take_strock_add_buy_price_all,
    out_sales_num, out_sales_price_all, out_sales_buy_price_all, in_sales_buy_price_all,
    in_sales_price_all, in_sales_num, stro_phar, modify_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from stro_invoicing_monthly
    where id = #{id}
  </select>
  <select id="queryAllByDate" resultType="cn.hsa.module.stro.stroinvoicing.dto.StroInvoicingMonthlyDTO">
    SELECT
    item_id as itemId,biz_id as bizId,DATE_FORMAT(crte_time,'%Y-%m-%d') as crteTime,stro_phar as stroPhar,id,hosp_code
    from stro_invoicing_monthly where hosp_code = #{hospCode} and DATE_FORMAT(crte_time,'%Y-%m') = DATE_FORMAT(#{nowDate},'%Y-%m')
    GROUP BY item_id,biz_id,crte_time,stro_phar
  </select>
  <select id="queryRecentlyUpdateTime" resultType="java.util.Date">
    select DATE_FORMAT(ifnull(max(modify_time),now()),'%Y-%m-%d') from stro_invoicing_monthly where hosp_code = #{hospCode} and DATE_FORMAT(crte_time,'%Y-%m-%d') &lt; #{nowDate} limit 1;
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from stro_invoicing_monthly
    where id = #{id} and hosp_code = #{hospCode}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="cn.hsa.module.stro.stroinvoicing.dto.StroInvoicingMonthlyDTO" useGeneratedKeys="true">
    insert into stro_invoicing_monthly (hosp_code, biz_id, item_code,
      item_id, item_name, num,
      unit_code, curr_unit_code, sell_price,
      buy_price, split_ratio, split_price,
      split_num, split_unit_code, up_surplus_num,
      surplus_num, up_buy_price_all, buy_price_all,
      up_sell_price_all, sell_price_all, crte_time,
      new_price, new_split_price, stro_in_num,
      stro_in_num_price_all, return_supl_num, return_supl_price_all,
      stro_to_dept_num, stro_to_dept_price_all, stro_to_phar_num,
      stro_to_phar_price_all, report_losses_num, report_losses_price_all,
      phar_return_stro_num, phar_return_stro_price_all,
      adjust_profit_price_all, adjust_loss_price_all,
      take_strock_subtract_num, take_strock_subtract_price_all,
      take_strock_add_num, take_strock_add_price_all,
      stro_in_num_buy_price_all, return_supl_buy_price_all,
      stro_to_dept_buy_price_all, stro_to_phar_buy_price_all,
      report_losses_buy_price_all, phar_return_stro_buy_price_all,
      adjust_profit_buy_price_all, adjust_loss_buy_price_all,
      take_strock_subtract_buy_price_all, take_strock_add_buy_price_all,
      out_sales_num, out_sales_price_all, out_sales_buy_price_all,
      in_sales_buy_price_all, in_sales_price_all, in_sales_num,
      stro_phar, modify_time)
    values (#{hospCode}, #{bizId}, #{itemCode},
      #{itemId}, #{itemName}, #{num},
      #{unitCode}, #{currUnitCode}, #{sellPrice},
      #{buyPrice}, #{splitRatio}, #{splitPrice},
      #{splitNum}, #{splitUnitCode}, #{upSurplusNum},
      #{surplusNum}, #{upBuyPriceAll}, #{buyPriceAll},
      #{upSellPriceAll}, #{sellPriceAll}, #{crteTime},
      #{newPrice}, #{newSplitPrice}, #{stroInNum},
      #{stroInNumPriceAll}, #{returnSuplNum}, #{returnSuplPriceAll},
      #{stroToDeptNum}, #{stroToDeptPriceAll}, #{stroToPharNum},
      #{stroToPharPriceAll}, #{reportLossesNum}, #{reportLossesPriceAll},
      #{pharReturnStroNum}, #{pharReturnStroPriceAll},
      #{adjustProfitPriceAll}, #{adjustLossPriceAll},
      #{takeStrockSubtractNum}, #{takeStrockSubtractPriceAll},
      #{takeStrockAddNum}, #{takeStrockAddPriceAll},
      #{stroInNumBuyPriceAll}, #{returnSuplBuyPriceAll},
      #{stroToDeptBuyPriceAll}, #{stroToPharBuyPriceAll},
      #{reportLossesBuyPriceAll}, #{pharReturnStroBuyPriceAll},
      #{adjustProfitBuyPriceAll}, #{adjustLossBuyPriceAll},
      #{takeStrockSubtractBuyPriceAll}, #{takeStrockAddBuyPriceAll},
      #{outSalesNum}, #{outSalesPriceAll}, #{outSalesBuyPriceAll},
      #{inSalesBuyPriceAll}, #{inSalesPriceAll}, #{inSalesNum},
      #{stroPhar}, #{modifyTime})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="cn.hsa.module.stro.stroinvoicing.dto.StroInvoicingMonthlyDTO" useGeneratedKeys="true">
    insert into stro_invoicing_monthly
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="hospCode != null">
        hosp_code,
      </if>
      <if test="bizId != null">
        biz_id,
      </if>
      <if test="itemCode != null">
        item_code,
      </if>
      <if test="itemId != null">
        item_id,
      </if>
      <if test="itemName != null">
        item_name,
      </if>
      <if test="num != null">
        num,
      </if>
      <if test="unitCode != null">
        unit_code,
      </if>
      <if test="currUnitCode != null">
        curr_unit_code,
      </if>
      <if test="sellPrice != null">
        sell_price,
      </if>
      <if test="buyPrice != null">
        buy_price,
      </if>
      <if test="splitRatio != null">
        split_ratio,
      </if>
      <if test="splitPrice != null">
        split_price,
      </if>
      <if test="splitNum != null">
        split_num,
      </if>
      <if test="splitUnitCode != null">
        split_unit_code,
      </if>
      <if test="upSurplusNum != null">
        up_surplus_num,
      </if>
      <if test="surplusNum != null">
        surplus_num,
      </if>
      <if test="upBuyPriceAll != null">
        up_buy_price_all,
      </if>
      <if test="buyPriceAll != null">
        buy_price_all,
      </if>
      <if test="upSellPriceAll != null">
        up_sell_price_all,
      </if>
      <if test="sellPriceAll != null">
        sell_price_all,
      </if>
      <if test="crteTime != null">
        crte_time,
      </if>
      <if test="newPrice != null">
        new_price,
      </if>
      <if test="newSplitPrice != null">
        new_split_price,
      </if>
      <if test="stroInNum != null">
        stro_in_num,
      </if>
      <if test="stroInNumPriceAll != null">
        stro_in_num_price_all,
      </if>
      <if test="returnSuplNum != null">
        return_supl_num,
      </if>
      <if test="returnSuplPriceAll != null">
        return_supl_price_all,
      </if>
      <if test="stroToDeptNum != null">
        stro_to_dept_num,
      </if>
      <if test="stroToDeptPriceAll != null">
        stro_to_dept_price_all,
      </if>
      <if test="stroToPharNum != null">
        stro_to_phar_num,
      </if>
      <if test="stroToPharPriceAll != null">
        stro_to_phar_price_all,
      </if>
      <if test="reportLossesNum != null">
        report_losses_num,
      </if>
      <if test="reportLossesPriceAll != null">
        report_losses_price_all,
      </if>
      <if test="pharReturnStroNum != null">
        phar_return_stro_num,
      </if>
      <if test="pharReturnStroPriceAll != null">
        phar_return_stro_price_all,
      </if>
      <if test="adjustProfitPriceAll != null">
        adjust_profit_price_all,
      </if>
      <if test="adjustLossPriceAll != null">
        adjust_loss_price_all,
      </if>
      <if test="takeStrockSubtractNum != null">
        take_strock_subtract_num,
      </if>
      <if test="takeStrockSubtractPriceAll != null">
        take_strock_subtract_price_all,
      </if>
      <if test="takeStrockAddNum != null">
        take_strock_add_num,
      </if>
      <if test="takeStrockAddPriceAll != null">
        take_strock_add_price_all,
      </if>
      <if test="stroInNumBuyPriceAll != null">
        stro_in_num_buy_price_all,
      </if>
      <if test="returnSuplBuyPriceAll != null">
        return_supl_buy_price_all,
      </if>
      <if test="stroToDeptBuyPriceAll != null">
        stro_to_dept_buy_price_all,
      </if>
      <if test="stroToPharBuyPriceAll != null">
        stro_to_phar_buy_price_all,
      </if>
      <if test="reportLossesBuyPriceAll != null">
        report_losses_buy_price_all,
      </if>
      <if test="pharReturnStroBuyPriceAll != null">
        phar_return_stro_buy_price_all,
      </if>
      <if test="adjustProfitBuyPriceAll != null">
        adjust_profit_buy_price_all,
      </if>
      <if test="adjustLossBuyPriceAll != null">
        adjust_loss_buy_price_all,
      </if>
      <if test="takeStrockSubtractBuyPriceAll != null">
        take_strock_subtract_buy_price_all,
      </if>
      <if test="takeStrockAddBuyPriceAll != null">
        take_strock_add_buy_price_all,
      </if>
      <if test="outSalesNum != null">
        out_sales_num,
      </if>
      <if test="outSalesPriceAll != null">
        out_sales_price_all,
      </if>
      <if test="outSalesBuyPriceAll != null">
        out_sales_buy_price_all,
      </if>
      <if test="inSalesBuyPriceAll != null">
        in_sales_buy_price_all,
      </if>
      <if test="inSalesPriceAll != null">
        in_sales_price_all,
      </if>
      <if test="inSalesNum != null">
        in_sales_num,
      </if>
      <if test="stroPhar != null">
        stro_phar,
      </if>
      <if test="modifyTime != null">
        modify_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="hospCode != null">
        #{hospCode},
      </if>
      <if test="bizId != null">
        #{bizId},
      </if>
      <if test="itemCode != null">
        #{itemCode},
      </if>
      <if test="itemId != null">
        #{itemId},
      </if>
      <if test="itemName != null">
        #{itemName},
      </if>
      <if test="num != null">
        #{num},
      </if>
      <if test="unitCode != null">
        #{unitCode},
      </if>
      <if test="currUnitCode != null">
        #{currUnitCode},
      </if>
      <if test="sellPrice != null">
        #{sellPrice},
      </if>
      <if test="buyPrice != null">
        #{buyPrice},
      </if>
      <if test="splitRatio != null">
        #{splitRatio},
      </if>
      <if test="splitPrice != null">
        #{splitPrice},
      </if>
      <if test="splitNum != null">
        #{splitNum},
      </if>
      <if test="splitUnitCode != null">
        #{splitUnitCode},
      </if>
      <if test="upSurplusNum != null">
        #{upSurplusNum},
      </if>
      <if test="surplusNum != null">
        #{surplusNum},
      </if>
      <if test="upBuyPriceAll != null">
        #{upBuyPriceAll},
      </if>
      <if test="buyPriceAll != null">
        #{buyPriceAll},
      </if>
      <if test="upSellPriceAll != null">
        #{upSellPriceAll},
      </if>
      <if test="sellPriceAll != null">
        #{sellPriceAll},
      </if>
      <if test="crteTime != null">
        #{crteTime},
      </if>
      <if test="newPrice != null">
        #{newPrice},
      </if>
      <if test="newSplitPrice != null">
        #{newSplitPrice},
      </if>
      <if test="stroInNum != null">
        #{stroInNum},
      </if>
      <if test="stroInNumPriceAll != null">
        #{stroInNumPriceAll},
      </if>
      <if test="returnSuplNum != null">
        #{returnSuplNum},
      </if>
      <if test="returnSuplPriceAll != null">
        #{returnSuplPriceAll},
      </if>
      <if test="stroToDeptNum != null">
        #{stroToDeptNum},
      </if>
      <if test="stroToDeptPriceAll != null">
        #{stroToDeptPriceAll},
      </if>
      <if test="stroToPharNum != null">
        #{stroToPharNum},
      </if>
      <if test="stroToPharPriceAll != null">
        #{stroToPharPriceAll},
      </if>
      <if test="reportLossesNum != null">
        #{reportLossesNum},
      </if>
      <if test="reportLossesPriceAll != null">
        #{reportLossesPriceAll},
      </if>
      <if test="pharReturnStroNum != null">
        #{pharReturnStroNum},
      </if>
      <if test="pharReturnStroPriceAll != null">
        #{pharReturnStroPriceAll},
      </if>
      <if test="adjustProfitPriceAll != null">
        #{adjustProfitPriceAll},
      </if>
      <if test="adjustLossPriceAll != null">
        #{adjustLossPriceAll},
      </if>
      <if test="takeStrockSubtractNum != null">
        #{takeStrockSubtractNum},
      </if>
      <if test="takeStrockSubtractPriceAll != null">
        #{takeStrockSubtractPriceAll},
      </if>
      <if test="takeStrockAddNum != null">
        #{takeStrockAddNum},
      </if>
      <if test="takeStrockAddPriceAll != null">
        #{takeStrockAddPriceAll},
      </if>
      <if test="stroInNumBuyPriceAll != null">
        #{stroInNumBuyPriceAll},
      </if>
      <if test="returnSuplBuyPriceAll != null">
        #{returnSuplBuyPriceAll},
      </if>
      <if test="stroToDeptBuyPriceAll != null">
        #{stroToDeptBuyPriceAll},
      </if>
      <if test="stroToPharBuyPriceAll != null">
        #{stroToPharBuyPriceAll},
      </if>
      <if test="reportLossesBuyPriceAll != null">
        #{reportLossesBuyPriceAll},
      </if>
      <if test="pharReturnStroBuyPriceAll != null">
        #{pharReturnStroBuyPriceAll},
      </if>
      <if test="adjustProfitBuyPriceAll != null">
        #{adjustProfitBuyPriceAll},
      </if>
      <if test="adjustLossBuyPriceAll != null">
        #{adjustLossBuyPriceAll},
      </if>
      <if test="takeStrockSubtractBuyPriceAll != null">
        #{takeStrockSubtractBuyPriceAll},
      </if>
      <if test="takeStrockAddBuyPriceAll != null">
        #{takeStrockAddBuyPriceAll},
      </if>
      <if test="outSalesNum != null">
        #{outSalesNum},
      </if>
      <if test="outSalesPriceAll != null">
        #{outSalesPriceAll},
      </if>
      <if test="outSalesBuyPriceAll != null">
        #{outSalesBuyPriceAll},
      </if>
      <if test="inSalesBuyPriceAll != null">
        #{inSalesBuyPriceAll},
      </if>
      <if test="inSalesPriceAll != null">
        #{inSalesPriceAll},
      </if>
      <if test="inSalesNum != null">
        #{inSalesNum},
      </if>
      <if test="stroPhar != null">
        #{stroPhar},
      </if>
      <if test="modifyTime != null">
        #{modifyTime},
      </if>
    </trim>
  </insert>
  <insert id="insertBatch" parameterType="java.util.List" >
    insert into stro_invoicing_monthly (id,hosp_code, biz_id, item_code,
    item_id, item_name, num,
    unit_code, curr_unit_code, sell_price,
    buy_price, split_ratio, split_price,
    split_num, split_unit_code, up_surplus_num,
    surplus_num, up_buy_price_all, buy_price_all,
    up_sell_price_all, sell_price_all, crte_time,
    new_price, new_split_price, stro_in_num,
    stro_in_num_price_all, return_supl_num, return_supl_price_all,
    stro_to_dept_num, stro_to_dept_price_all, stro_to_phar_num,
    stro_to_phar_price_all, report_losses_num, report_losses_price_all,
    phar_return_stro_num, phar_return_stro_price_all,
    adjust_profit_price_all, adjust_loss_price_all,
    take_strock_subtract_num, take_strock_subtract_price_all,
    take_strock_add_num, take_strock_add_price_all,
    stro_in_num_buy_price_all, return_supl_buy_price_all,
    stro_to_dept_buy_price_all, stro_to_phar_buy_price_all,
    report_losses_buy_price_all, phar_return_stro_buy_price_all,
    adjust_profit_buy_price_all, adjust_loss_buy_price_all,
    take_strock_subtract_buy_price_all, take_strock_add_buy_price_all,
    out_sales_num, out_sales_price_all, out_sales_buy_price_all,
    in_sales_buy_price_all, in_sales_price_all, in_sales_num,
    stro_phar, modify_time)
    values<foreach collection="stroInvoicingMonthlyDTOS" item="item" separator=",">
    (
    #{item.monthlyId},#{item.hospCode}, #{item.bizId}, #{item.itemCode},
    #{item.itemId}, #{item.itemName}, #{item.num},
    #{item.unitCode}, #{item.currUnitCode}, #{item.sellPrice},
    #{item.buyPrice}, #{item.splitRatio}, #{item.splitPrice},
    #{item.splitNum}, #{item.splitUnitCode}, #{item.upSurplusNum},
    #{item.surplusNum}, #{item.upBuyPriceAll}, #{item.buyPriceAll},
    #{item.upSellPriceAll}, #{item.sellPriceAll}, DATE_FORMAT(#{item.crteTime},'%Y-%m-%d'),
    #{item.newPrice}, #{item.newSplitPrice}, #{item.stroInNum},
    #{item.stroInNumPriceAll}, #{item.returnSuplNum}, #{item.returnSuplPriceAll},
    #{item.stroToDeptNum}, #{item.stroToDeptPriceAll}, #{item.stroToPharNum},
    #{item.stroToPharPriceAll}, #{item.reportLossesNum}, #{item.reportLossesPriceAll},
    #{item.pharReturnStroNum}, #{item.pharReturnStroPriceAll},
    #{item.adjustProfitPriceAll}, #{item.adjustLossPriceAll},
    #{item.takeStrockSubtractNum}, #{item.takeStrockSubtractPriceAll},
    #{item.takeStrockAddNum}, #{item.takeStrockAddPriceAll},
    #{item.stroInNumBuyPriceAll}, #{item.returnSuplBuyPriceAll},
    #{item.stroToDeptBuyPriceAll}, #{item.stroToPharBuyPriceAll},
    #{item.reportLossesBuyPriceAll}, #{item.pharReturnStroBuyPriceAll},
    #{item.adjustProfitBuyPriceAll}, #{item.adjustLossBuyPriceAll},
    #{item.takeStrockSubtractBuyPriceAll}, #{item.takeStrockAddBuyPriceAll},
    #{item.outSalesNum}, #{item.outSalesPriceAll}, #{item.outSalesBuyPriceAll},
    #{item.inSalesBuyPriceAll}, #{item.inSalesPriceAll}, #{item.inSalesNum},
    #{item.stroPhar}, #{item.modifyTime}
    )
  </foreach>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.hsa.module.stro.stroinvoicing.dto.StroInvoicingMonthlyDTO">
    update stro_invoicing_monthly
    <set>
      <if test="hospCode != null">
        hosp_code = #{hospCode},
      </if>
      <if test="bizId != null">
        biz_id = #{bizId},
      </if>
      <if test="itemCode != null">
        item_code = #{itemCode},
      </if>
      <if test="itemId != null">
        item_id = #{itemId},
      </if>
      <if test="itemName != null">
        item_name = #{itemName},
      </if>
      <if test="num != null">
        num = #{num},
      </if>
      <if test="unitCode != null">
        unit_code = #{unitCode},
      </if>
      <if test="currUnitCode != null">
        curr_unit_code = #{currUnitCode},
      </if>
      <if test="sellPrice != null">
        sell_price = #{sellPrice},
      </if>
      <if test="buyPrice != null">
        buy_price = #{buyPrice},
      </if>
      <if test="splitRatio != null">
        split_ratio = #{splitRatio},
      </if>
      <if test="splitPrice != null">
        split_price = #{splitPrice},
      </if>
      <if test="splitNum != null">
        split_num = #{splitNum},
      </if>
      <if test="splitUnitCode != null">
        split_unit_code = #{splitUnitCode},
      </if>
      <if test="upSurplusNum != null">
        up_surplus_num = #{upSurplusNum},
      </if>
      <if test="surplusNum != null">
        surplus_num = #{surplusNum},
      </if>
      <if test="upBuyPriceAll != null">
        up_buy_price_all = #{upBuyPriceAll},
      </if>
      <if test="buyPriceAll != null">
        buy_price_all = #{buyPriceAll},
      </if>
      <if test="upSellPriceAll != null">
        up_sell_price_all = #{upSellPriceAll},
      </if>
      <if test="sellPriceAll != null">
        sell_price_all = #{sellPriceAll},
      </if>
      <if test="crteTime != null">
        crte_time = #{crteTime},
      </if>
      <if test="newPrice != null">
        new_price = #{newPrice},
      </if>
      <if test="newSplitPrice != null">
        new_split_price = #{newSplitPrice},
      </if>
      <if test="stroInNum != null">
        stro_in_num = #{stroInNum},
      </if>
      <if test="stroInNumPriceAll != null">
        stro_in_num_price_all = #{stroInNumPriceAll},
      </if>
      <if test="returnSuplNum != null">
        return_supl_num = #{returnSuplNum},
      </if>
      <if test="returnSuplPriceAll != null">
        return_supl_price_all = #{returnSuplPriceAll},
      </if>
      <if test="stroToDeptNum != null">
        stro_to_dept_num = #{stroToDeptNum},
      </if>
      <if test="stroToDeptPriceAll != null">
        stro_to_dept_price_all = #{stroToDeptPriceAll},
      </if>
      <if test="stroToPharNum != null">
        stro_to_phar_num = #{stroToPharNum},
      </if>
      <if test="stroToPharPriceAll != null">
        stro_to_phar_price_all = #{stroToPharPriceAll},
      </if>
      <if test="reportLossesNum != null">
        report_losses_num = #{reportLossesNum},
      </if>
      <if test="reportLossesPriceAll != null">
        report_losses_price_all = #{reportLossesPriceAll},
      </if>
      <if test="pharReturnStroNum != null">
        phar_return_stro_num = #{pharReturnStroNum},
      </if>
      <if test="pharReturnStroPriceAll != null">
        phar_return_stro_price_all = #{pharReturnStroPriceAll},
      </if>
      <if test="adjustProfitPriceAll != null">
        adjust_profit_price_all = #{adjustProfitPriceAll},
      </if>
      <if test="adjustLossPriceAll != null">
        adjust_loss_price_all = #{adjustLossPriceAll},
      </if>
      <if test="takeStrockSubtractNum != null">
        take_strock_subtract_num = #{takeStrockSubtractNum},
      </if>
      <if test="takeStrockSubtractPriceAll != null">
        take_strock_subtract_price_all = #{takeStrockSubtractPriceAll},
      </if>
      <if test="takeStrockAddNum != null">
        take_strock_add_num = #{takeStrockAddNum},
      </if>
      <if test="takeStrockAddPriceAll != null">
        take_strock_add_price_all = #{takeStrockAddPriceAll},
      </if>
      <if test="stroInNumBuyPriceAll != null">
        stro_in_num_buy_price_all = #{stroInNumBuyPriceAll},
      </if>
      <if test="returnSuplBuyPriceAll != null">
        return_supl_buy_price_all = #{returnSuplBuyPriceAll},
      </if>
      <if test="stroToDeptBuyPriceAll != null">
        stro_to_dept_buy_price_all = #{stroToDeptBuyPriceAll},
      </if>
      <if test="stroToPharBuyPriceAll != null">
        stro_to_phar_buy_price_all = #{stroToPharBuyPriceAll},
      </if>
      <if test="reportLossesBuyPriceAll != null">
        report_losses_buy_price_all = #{reportLossesBuyPriceAll},
      </if>
      <if test="pharReturnStroBuyPriceAll != null">
        phar_return_stro_buy_price_all = #{pharReturnStroBuyPriceAll},
      </if>
      <if test="adjustProfitBuyPriceAll != null">
        adjust_profit_buy_price_all = #{adjustProfitBuyPriceAll},
      </if>
      <if test="adjustLossBuyPriceAll != null">
        adjust_loss_buy_price_all = #{adjustLossBuyPriceAll},
      </if>
      <if test="takeStrockSubtractBuyPriceAll != null">
        take_strock_subtract_buy_price_all = #{takeStrockSubtractBuyPriceAll},
      </if>
      <if test="takeStrockAddBuyPriceAll != null">
        take_strock_add_buy_price_all = #{takeStrockAddBuyPriceAll},
      </if>
      <if test="outSalesNum != null">
        out_sales_num = #{outSalesNum},
      </if>
      <if test="outSalesPriceAll != null">
        out_sales_price_all = #{outSalesPriceAll},
      </if>
      <if test="outSalesBuyPriceAll != null">
        out_sales_buy_price_all = #{outSalesBuyPriceAll},
      </if>
      <if test="inSalesBuyPriceAll != null">
        in_sales_buy_price_all = #{inSalesBuyPriceAll},
      </if>
      <if test="inSalesPriceAll != null">
        in_sales_price_all = #{inSalesPriceAll},
      </if>
      <if test="inSalesNum != null">
        in_sales_num = #{inSalesNum},
      </if>
      <if test="stroPhar != null">
        stro_phar = #{stroPhar},
      </if>
      <if test="modifyTime != null">
        modify_time = #{modifyTime},
      </if>
    </set>
    where id = #{id}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.hsa.module.stro.stroinvoicing.dto.StroInvoicingMonthlyDTO">
    update stro_invoicing_monthly
    set hosp_code = #{hospCode},
      biz_id = #{bizId},
      item_code = #{itemCode},
      item_id = #{itemId},
      item_name = #{itemName},
      num = #{num},
      unit_code = #{unitCode},
      curr_unit_code = #{currUnitCode},
      sell_price = #{sellPrice},
      buy_price = #{buyPrice},
      split_ratio = #{splitRatio},
      split_price = #{splitPrice},
      split_num = #{splitNum},
      split_unit_code = #{splitUnitCode},
      up_surplus_num = #{upSurplusNum},
      surplus_num = #{surplusNum},
      up_buy_price_all = #{upBuyPriceAll},
      buy_price_all = #{buyPriceAll},
      up_sell_price_all = #{upSellPriceAll},
      sell_price_all = #{sellPriceAll},
      crte_time = #{crteTime},
      new_price = #{newPrice},
      new_split_price = #{newSplitPrice},
      stro_in_num = #{stroInNum},
      stro_in_num_price_all = #{stroInNumPriceAll},
      return_supl_num = #{returnSuplNum},
      return_supl_price_all = #{returnSuplPriceAll},
      stro_to_dept_num = #{stroToDeptNum},
      stro_to_dept_price_all = #{stroToDeptPriceAll},
      stro_to_phar_num = #{stroToPharNum},
      stro_to_phar_price_all = #{stroToPharPriceAll},
      report_losses_num = #{reportLossesNum},
      report_losses_price_all = #{reportLossesPriceAll},
      phar_return_stro_num = #{pharReturnStroNum},
      phar_return_stro_price_all = #{pharReturnStroPriceAll},
      adjust_profit_price_all = #{adjustProfitPriceAll},
      adjust_loss_price_all = #{adjustLossPriceAll},
      take_strock_subtract_num = #{takeStrockSubtractNum},
      take_strock_subtract_price_all = #{takeStrockSubtractPriceAll},
      take_strock_add_num = #{takeStrockAddNum},
      take_strock_add_price_all = #{takeStrockAddPriceAll},
      stro_in_num_buy_price_all = #{stroInNumBuyPriceAll},
      return_supl_buy_price_all = #{returnSuplBuyPriceAll},
      stro_to_dept_buy_price_all = #{stroToDeptBuyPriceAll},
      stro_to_phar_buy_price_all = #{stroToPharBuyPriceAll},
      report_losses_buy_price_all = #{reportLossesBuyPriceAll},
      phar_return_stro_buy_price_all = #{pharReturnStroBuyPriceAll},
      adjust_profit_buy_price_all = #{adjustProfitBuyPriceAll},
      adjust_loss_buy_price_all = #{adjustLossBuyPriceAll},
      take_strock_subtract_buy_price_all = #{takeStrockSubtractBuyPriceAll},
      take_strock_add_buy_price_all = #{takeStrockAddBuyPriceAll},
      out_sales_num = #{outSalesNum},
      out_sales_price_all = #{outSalesPriceAll},
      out_sales_buy_price_all = #{outSalesBuyPriceAll},
      in_sales_buy_price_all = #{inSalesBuyPriceAll},
      in_sales_price_all = #{inSalesPriceAll},
      in_sales_num = #{inSalesNum},
      stro_phar = #{stroPhar},
      modify_time = #{modifyTime}
    where id = #{id} and hosp_code = #{hospCode}
  </update>
    <!--回写主表-->
    <update id="updateByDate">
  update stro_invoicing_monthly a , (select id,hosp_code, biz_id, item_code, item_id, item_name, sum(num) as num,
        unit_code, curr_unit_code, sell_price, buy_price, split_ratio, split_price, sum(split_num) as splitNum,
        split_unit_code,sum(up_surplus_num) as upSurplusNum,surplus_num as surplusNum,
        sum(up_buy_price_all) as upBuyPriceAll,buy_price_all as buyPriceAll,
        sum(up_sell_price_all) as upSellPriceAll,sell_price_all as sellPriceAll, crte_time,
        new_price, new_split_price,sum(stro_in_num) as stroInNum,sum(stro_in_num_price_all) as stroInNumPriceAll,
        sum(return_supl_num) as returnSuplNum,sum(return_supl_price_all) as returnSuplPriceAll,
        sum(stro_to_dept_num) as stroToDeptNum,sum(stro_to_dept_price_all) as stroToDeptPriceAll,
        sum(stro_to_phar_num) as stroToPharNum,sum(stro_to_phar_price_all) as stroToPharPriceAll,
        sum(report_losses_num) as reportLossesNum,sum(report_losses_price_all) as reportLossesPriceAll,
        sum(phar_return_stro_num) as pharReturnStroNum,sum(phar_return_stro_price_all) as pharReturnStroPriceAll,
        sum(adjust_profit_price_all) as adjustProfitPriceAll,sum(adjust_loss_price_all) as adjustLossPriceAll,
        sum(take_strock_subtract_num) as takeStrockSubtractNum,sum(take_strock_subtract_price_all) as takeStrockSubtractPriceAll,
        sum(take_strock_add_num) as takeStrockAddNum,sum(take_strock_add_price_all) as takeStrockAddPriceAll,
        sum(stro_in_num_buy_price_all) as stroInNumBuyPriceAll,sum(return_supl_buy_price_all) as returnSuplBuyPriceAll,
        sum(stro_to_dept_buy_price_all) as stroToDeptBuyPriceAll,sum(stro_to_phar_buy_price_all) as stroToPharBuyPriceAll,
        sum(report_losses_buy_price_all) as reportLossesBuyPriceAll,
        sum(phar_return_stro_buy_price_all) as pharReturnStroBuyPriceAll,
        sum(adjust_profit_buy_price_all) as adjustProfitBuyPriceAll,
        sum(adjust_loss_buy_price_all) as adjustLossBuyPriceAll,
        sum(take_strock_subtract_buy_price_all) AS takeStrockSubtractBuyPriceAll,
        sum(take_strock_add_buy_price_all) as takeStrockAddBuyPriceAll,
        sum(out_sales_num) as outSalesNum,sum(out_sales_price_all) as outSalesPriceAll,
        sum(out_sales_buy_price_all) as outSalesBuyPriceAll,sum(in_sales_buy_price_all) as inSalesBuyPriceAll,
        sum(in_sales_price_all) as inSalesPriceAll,sum(in_sales_num) as inSalesNum,monthly_id
  from stro_invoicing_monthly_detail where DATE_FORMAT(crte_time,'%Y-%m') = DATE_FORMAT(#{nowDate},'%Y-%m') and hosp_code = #{hospCode} GROUP BY monthly_id)b
        set
          a.num = b.num,
          a.split_num = b.splitNum,
          /**a.up_surplus_num = b.upSurplusNum,**/
          a.surplus_num = b.surplusNum,
          /**a.up_buy_price_all = b.upBuyPriceAll,**/
          a.buy_price_all = b.buyPriceAll,
          /**a.up_sell_price_all = b.upSellPriceAll,**/
          a.sell_price_all = b.sellPriceAll,
          a.stro_in_num = b.stroInNum,
          a.stro_in_num_price_all = b.stroInNumPriceAll,
          a.return_supl_num = b.returnSuplNum,
          a.return_supl_price_all = b.returnSuplPriceAll,
          a.stro_to_dept_num = b.stroToDeptNum,
          a.stro_to_dept_price_all = b.stroToDeptPriceAll,
          a.stro_to_phar_num = b.stroToPharNum,
          a.stro_to_phar_price_all = b.stroToPharPriceAll,
          a.report_losses_num = b.reportLossesNum,
          a.report_losses_price_all = b.reportLossesPriceAll,
          a.phar_return_stro_num = b.pharReturnStroNum,
          a.phar_return_stro_price_all = b.pharReturnStroPriceAll,
          a.adjust_profit_price_all = b.adjustProfitPriceAll,
          a.adjust_loss_price_all = b.adjustLossPriceAll,
          a.take_strock_subtract_num = b.takeStrockSubtractNum,
          a.take_strock_subtract_price_all = b.takeStrockSubtractPriceAll,
          a.take_strock_add_num = b.takeStrockAddNum,
          a.take_strock_add_price_all = b.takeStrockAddPriceAll,
          a.stro_in_num_buy_price_all = b.stroInNumBuyPriceAll,
          a.return_supl_buy_price_all = b.returnSuplBuyPriceAll,
          a.stro_to_dept_buy_price_all = b.stroToDeptBuyPriceAll,
          a.stro_to_phar_buy_price_all = b.stroToPharBuyPriceAll,
          a.report_losses_buy_price_all = b.reportLossesBuyPriceAll,
          a.phar_return_stro_buy_price_all = b.pharReturnStroBuyPriceAll,
          a.adjust_profit_buy_price_all = b.adjustProfitBuyPriceAll,
          a.adjust_loss_buy_price_all = b.adjustLossBuyPriceAll,
          a.take_strock_subtract_buy_price_all = b.takeStrockSubtractBuyPriceAll,
          a.take_strock_add_buy_price_all = b.takeStrockAddBuyPriceAll,
          a.out_sales_num = b.outSalesNum,
          a.out_sales_price_all = b.outSalesPriceAll,
          a.out_sales_buy_price_all = b.outSalesBuyPriceAll,
          a.in_sales_buy_price_all = b.inSalesBuyPriceAll,
          a.in_sales_price_all = b.inSalesPriceAll,
          a.in_sales_num = b.inSalesNum,
          a.modify_time = now()
          where a.id = b.monthly_id and DATE_FORMAT(a.crte_time,'%Y-%m') = DATE_FORMAT(#{nowDate},'%Y-%m') and a.hosp_code = #{hospCode}
    </update>
</mapper>