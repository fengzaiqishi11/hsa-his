<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.hsa.module.interf.phys.dao.PhysRegDAO">

    <insert id="addVisitByPhys">
        insert into outpt_visit
        (
            id, hosp_code, profile_id, out_profile, register_id, register_no, name, gender_code, age, age_unit_code,
            birthday, marry_code, nation_code, cert_code, cert_no, phone, visit_no, visit_code, patient_code,
            preferential_type_id, insure_code, insure_org_code, insure_no, insure_biz_code, insure_treat_code,
            insure_patient_id, insure_remark, doctor_id, doctor_name, dept_id, dept_name, visit_time, remark,
            pym, wbm, is_visit, tran_in_code, is_first_visit, crte_id, crte_name, crte_time,is_phys
        )
        values
        (
            #{id}, #{hospCode}, #{profileId}, #{outProfile}, #{registerId}, #{registerNo}, #{name}, #{genderCode}, #{age}, #{ageUnitCode},
            #{birthday}, #{marryCode}, #{nationCode}, #{certCode}, #{certNo}, #{phone}, #{visitNo}, #{visitCode}, #{patientCode},
            #{preferentialTypeId}, #{insureCode}, #{insureOrgCode}, #{insureNo}, #{insureBizCode}, #{insureTreatCode},
            #{insurePatientId}, #{insureRemark}, #{doctorId}, #{doctorName}, #{deptId}, #{deptName}, #{visitTime}, #{remark},
            #{pym}, #{wbm}, #{isVisit}, #{tranInCode}, #{isFirstVisit}, #{crteId}, #{crteName}, #{crteTime},#{isPhys}
        )
    </insert>
    <insert id="addBatchPhys">
        insert into outpt_cost(id,hosp_code,visit_id,item_id,item_name,total_price,
        preferential_price,reality_price,status_code,item_code,crte_Time,settle_code,source_code,
        price,bfc_id,num,total_num)
        values
        <foreach collection="outptCostDTOS" separator=","  item="item" index="index" >
            (#{item.id},#{item.hospCode},#{item.visitId},#{item.itemId},#{item.itemName},#{item.totalPrice},
            #{item.preferentialPrice},#{item.realityPrice},#{item.statusCode},#{item.itemCode},#{item.crteTime}
            ,#{item.settleCode},#{item.sourceCode},
            #{item.price},#{item.bfcId},#{item.num},#{item.totalNum})
        </foreach>
    </insert>

    <insert id="insertPhysGroup">
        insert into base_item
        (id, hosp_code, nation_code, type_code, bfc_code,
        code, name, abbr, spec, price,
        one_price, two_price, three_price, unit_code, intension,
        prompt, except, remark, is_out, is_in, is_cg, is_ms, is_supp_curtain, out_dept_code, in_dept_code, name_pym, name_wbm, abbr_pym, abbr_wbm,
        is_valid, crte_id, crte_name, crte_time,other_name)
        values
        <foreach collection="list" item="item" index="index" separator=",">
            (#{item.id}, #{item.hosp_code}, #{item.nation_code}, #{item.type_code}, #{item.bfc_code},
            #{item.code}, #{item.group_name}, #{item.abbr}, #{item.spec}, #{item.price},
            #{item.one_price}, #{item.two_price}, #{item.three_price}, #{item.unit_code}, #{item.intension},
            #{item.prompt}, #{item.except}, #{item.remark}, #{item.isOut}, #{item.isIn}, #{item.isCg}, #{item.isMs}, #{item.isSuppCurtain}, #{item.outDeptCode}, #{item.inDeptCode}, #{item.namePym}, #{item.nameWbm}, #{item.abbrPym}, #{item.abbrWbm},
            '0', #{item.crteId}, #{item.crteName}, #{item.crteTime},#{item.otherName})
        </foreach>
    </insert>

    <insert id="insertReturn">
        insert into outpt_refund_apply
        (id, hosp_code, cost_id, item_code, item_id, item_name, price, num, num_unit_code, refund_xplain, refund_code, crte_id, crte_name, crte_time, status, one_settle_id, settle_id)
        values
        <foreach collection="list" item="dto" index="index" separator=",">
            (
            #{dto.id},
            #{dto.hospCode},
            #{dto.costId},
            #{dto.itemCode},
            #{dto.itemId},
            #{dto.itemName},
            #{dto.price},
            #{dto.num},
            #{dto.numUnitCode},
            #{dto.refundXplain},
            #{dto.refundCode},
            #{dto.crteId},
            #{dto.crteName},
            #{dto.crteTime},
            #{dto.status},
            #{dto.hisSettleId},
            #{dto.hisSettleId}
            )
        </foreach>
    </insert>
    <update id="updateRCodt">
        <foreach collection="list" item="item" index="index" separator=";">
            update outpt_cost set back_num = 1 where visit_id = #{item.registerId} and item_id = #{item.groupId} and hosp_code = #{item.hospCode}
        </foreach>
    </update>

    <delete id="deleteBatchPhys" >
        delete from outpt_cost where visit_id = #{visitId} and hosp_code = #{hospCode} and settle_code = '0'
    </delete>

    <select id="queryCostPhys" resultType="cn.hsa.module.outpt.fees.dto.OutptCostDTO">
        select visit_id, item_id from outpt_cost where visit_id = #{visitId} and back_num is null
        and settle_code = '2' and hosp_code = #{hospCode}
    </select>

    <select id="queryVisitByPhys" resultType="java.lang.Integer">
        select count(1)
        from outpt_visit
        where id = #{id} and hosp_code = #{hospCode}
    </select>

    <update id="updateVisitByPhys">
        update
            outpt_visit
        <set >
            <if test="hospCode != null and hospCode != ''">
                hosp_code = #{hospCode,jdbcType=VARCHAR},
            </if>
            <if test="profileId != null and profileId != ''">
                profile_id = #{profileId,jdbcType=VARCHAR},
            </if>
            <if test="outProfile != null and outProfile != ''">
                out_profile = #{outProfile,jdbcType=VARCHAR},
            </if>
            <if test="registerId != null and registerId != ''">
                register_id = #{registerId,jdbcType=VARCHAR},
            </if>
            <if test="registerNo != null and registerNo != ''">
                register_no = #{registerNo,jdbcType=VARCHAR},
            </if>
            <if test="name != null and name != ''">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="genderCode != null and genderCode != ''">
                gender_code = #{genderCode,jdbcType=VARCHAR},
            </if>
            <if test="age != null">
                age = #{age,jdbcType=INTEGER},
            </if>
            <if test="ageUnitCode != null and ageUnitCode != ''">
                age_unit_code = #{ageUnitCode,jdbcType=VARCHAR},
            </if>
            <if test="birthday != null">
                birthday = #{birthday,jdbcType=TIMESTAMP},
            </if>
            <if test="marryCode != null and marryCode != ''">
                marry_code = #{marryCode,jdbcType=VARCHAR},
            </if>
            <if test="nationCode != null and nationCode != ''">
                nation_code = #{nationCode,jdbcType=VARCHAR},
            </if>
            <if test="certCode != null and certCode != ''">
                cert_code = #{certCode,jdbcType=VARCHAR},
            </if>
            <if test="certNo != null and certNo != ''">
                cert_no = #{certNo,jdbcType=VARCHAR},
            </if>
            <if test="phone != null and phone != ''">
                phone = #{phone,jdbcType=VARCHAR},
            </if>
            <if test="visitNo != null and visitNo != ''">
                visit_no = #{visitNo,jdbcType=VARCHAR},
            </if>
            <if test="visitCode != null and visitCode != ''">
                visit_code = #{visitCode,jdbcType=VARCHAR},
            </if>
            <if test="patientCode != null and patientCode != ''">
                patient_code = #{patientCode,jdbcType=VARCHAR},
            </if>
            <if test="preferentialTypeId != null and preferentialTypeId != ''">
                preferential_type_id = #{preferentialTypeId,jdbcType=VARCHAR},
            </if>
            <if test="insureCode != null and insureCode != ''">
                insure_code = #{insureCode,jdbcType=VARCHAR},
            </if>
            <if test="insureOrgCode != null and insureOrgCode != ''">
                insure_org_code = #{insureOrgCode,jdbcType=VARCHAR},
            </if>
            <if test="insureNo != null and insureNo != ''">
                insure_no = #{insureNo,jdbcType=VARCHAR},
            </if>
            <if test="insureBizCode != null and insureBizCode != ''">
                insure_biz_code = #{insureBizCode,jdbcType=VARCHAR},
            </if>
            <if test="insureTreatCode != null and insureTreatCode != ''">
                insure_treat_code = #{insureTreatCode,jdbcType=VARCHAR},
            </if>
            <if test="insurePatientId != null and insurePatientId != ''">
                insure_patient_id = #{insurePatientId,jdbcType=VARCHAR},
            </if>
            <if test="insureRemark != null and insureRemark != ''">
                insure_remark = #{insureRemark,jdbcType=VARCHAR},
            </if>
            <if test="doctorId != null and doctorId != ''">
                doctor_id = #{doctorId,jdbcType=VARCHAR},
            </if>
            <if test="doctorName != null and doctorName != ''">
                doctor_name = #{doctorName,jdbcType=VARCHAR},
            </if>
            <if test="deptId != null and deptId != ''">
                dept_id = #{deptId,jdbcType=VARCHAR},
            </if>
            <if test="deptName != null and deptName != ''">
                dept_name = #{deptName,jdbcType=VARCHAR},
            </if>
            <if test="visitTime != null">
                visit_time = #{visitTime,jdbcType=TIMESTAMP},
            </if>
            <if test="remark != null and remark != ''">
                remark = #{remark,jdbcType=VARCHAR},
            </if>
            <if test="pym != null and pym != ''">
                pym = #{pym,jdbcType=VARCHAR},
            </if>
            <if test="wbm != null and wbm != ''">
                wbm = #{wbm,jdbcType=VARCHAR},
            </if>
            <if test="isVisit != null and isVisit != ''">
                is_visit = #{isVisit,jdbcType=VARCHAR},
            </if>
            <if test="isFirstVisit != null and isFirstVisit != ''">
                is_first_visit = #{isFirstVisit,jdbcType=VARCHAR},
            </if>
            <if test="crteId != null and crteId != ''">
                crte_id = #{crteId,jdbcType=VARCHAR},
            </if>
            <if test="crteName != null and crteName != ''">
                crte_name = #{crteName,jdbcType=VARCHAR},
            </if>
            <if test="crteTime != null">
                crte_time = #{crteTime,jdbcType=TIMESTAMP}
            </if>
        </set>
        where
        id = #{id} and hosp_code =#{hospCode}
    </update>

</mapper>
